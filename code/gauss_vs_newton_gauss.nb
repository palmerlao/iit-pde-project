(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 9.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       157,          7]
NotebookDataLength[    708598,      14134]
NotebookOptionsPosition[    695963,      13734]
NotebookOutlinePosition[    696384,      13752]
CellTagsIndexPosition[    696341,      13749]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Gaussian Kernel basis vs Newtonized Gaussian Kernel basis", "Title",
 CellChangeTimes->{{3.6114697790806494`*^9, 3.61146981090274*^9}}],

Cell["\<\
A Somewhat different Perspective\
\>", "Subtitle",
 CellChangeTimes->{{3.6114991150344543`*^9, 3.6114991213288145`*^9}}],

Cell["\<\
This note is as my dad says \[OpenCurlyDoubleQuote]Bass-Ackwards\
\[CloseCurlyDoubleQuote]. It begins with a short example of using the \
standard basis for collocation, and then discusses two approaches to creating \
a Newton type basis in the the 2008 and 2011 Schaback papers in which we are \
simply focusing on the bases.\
\>", "Text",
 CellChangeTimes->{{3.6114991401438904`*^9, 3.6114991593369884`*^9}, {
  3.6114992401396103`*^9, 3.6114992633339367`*^9}, {3.612678561712405*^9, 
  3.6126787099081774`*^9}}],

Cell[CellGroupData[{

Cell["Introduction", "Section",
 CellChangeTimes->{{3.611469851900197*^9, 3.611469854758093*^9}}],

Cell["\<\
First, we will look at a simple differential equation taken from Trefethen\
\[CloseCurlyQuote]s book on spectral methods first using the usual Gaussian \
kernel basis. Then, following Shaback\[CloseCurlyQuote]s formalism and \
Fasshauer\[CloseCurlyQuote]s suggestion, we will endeavor to solve this \
differential equation using the Newtonized version of this basis.\
\>", "Text",
 CellChangeTimes->{{3.611469857626995*^9, 3.6114701462575912`*^9}}],

Cell["\<\
Remark: There is a fair amount of excessive explanation going on and \
redundant Mathematica as well since neither of you knows this language and I \
figured you could learn some Mathematica if I took this more pedagogic \
approach. I am not trying to convert anybody to Mathematica as I have \
discovered this is an exercise in futility!\
\>", "Text",
 CellChangeTimes->{{3.6114715173360443`*^9, 3.6114715861676774`*^9}, {
  3.611499286788278*^9, 3.6114993141938457`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
A Simple Collocation Example Using the Gaussian Kernel Basis\
\>", "Section",
 CellChangeTimes->{{3.6114698289907312`*^9, 3.611469833458975*^9}, {
  3.612565116375697*^9, 3.61256512707883*^9}}],

Cell[TextData[{
 "The differential equation we will solve is the boundary value problem given \
by ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SuperscriptBox["u", "\[DoublePrime]"], "(", "x", ")"}], "=", 
    RowBox[{
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"4", "x"}]], "  ", 
      RowBox[{"u", "(", 
       RowBox[{"-", "1"}], ")"}]}], "=", 
     RowBox[{
      RowBox[{"u", "(", "1", ")"}], "=", "0"}]}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ". The exact solution can be calculated easily."
}], "Text",
 CellChangeTimes->{{3.611470162608428*^9, 3.6114703330727506`*^9}, {
  3.611470651660369*^9, 3.6114706972626004`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"sol", "=", 
  RowBox[{
   RowBox[{"u", "[", "x", "]"}], "/.", 
   RowBox[{
    RowBox[{"DSolve", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"u", "''"}], "[", "x", "]"}], "\[Equal]", 
         RowBox[{"Exp", "[", 
          RowBox[{"4", "x"}], "]"}]}], ",", 
        RowBox[{
         RowBox[{"u", "[", 
          RowBox[{"-", "1"}], "]"}], "\[Equal]", "0"}], ",", 
        RowBox[{
         RowBox[{"u", "[", "1", "]"}], "\[Equal]", "0"}]}], "}"}], ",", 
      RowBox[{"u", "[", "x", "]"}], ",", "x"}], "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.611252876875929*^9, 3.6112529554411087`*^9}, {
  3.6112592872873464`*^9, 3.6112592970998516`*^9}, {3.611465545221403*^9, 
  3.6114655463331404`*^9}}],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{"1", "+", 
    SuperscriptBox["\[ExponentialE]", "8"], "-", 
    RowBox[{"2", " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"4", "+", 
       RowBox[{"4", " ", "x"}]}]]}], "-", "x", "+", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", "8"], " ", "x"}]}], 
   RowBox[{"32", " ", 
    SuperscriptBox["\[ExponentialE]", "4"]}]]}]], "Output",
 CellChangeTimes->{
  3.6112529566869354`*^9, {3.61125929050748*^9, 3.6112593255206933`*^9}, 
   3.6114655497013717`*^9, 3.6114662718424735`*^9, 3.6114664982864695`*^9, 
   3.6114677279466*^9, 3.611471212701814*^9, 3.612471126655924*^9}]
}, Open  ]],

Cell[TextData[{
 "In order to solve this numerically, first we set up our interpolant using ",
 Cell[BoxData[
  FormBox[
   RowBox[{"n", "=", "8"}], TraditionalForm]]],
 " , or, in other words, 7 interior points and 2 boundary points for a total \
of 9 data points. Note that we separate our boundary points from our interior \
points in the collocation which is standard. If we include the boundary \
points we actually get better convergence however. This is not surprising \
because we are including more information and our system is well behaved on \
the boundary."
}], "Text",
 CellChangeTimes->{{3.611470680550521*^9, 3.61147075296052*^9}, {
  3.6126812740730577`*^9, 3.6126813705941896`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"data", "=", 
  RowBox[{"Most", "[", 
   RowBox[{"Rest", "[", 
    RowBox[{
     RowBox[{"Range", "[", 
      RowBox[{
       RowBox[{"-", "1"}], ",", "1", ",", 
       FractionBox["1", "4"]}], "]"}], "//", "N"}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6114405653652673`*^9, 3.6114405714973326`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "0.75`"}], ",", 
   RowBox[{"-", "0.5`"}], ",", 
   RowBox[{"-", "0.25`"}], ",", "0.`", ",", "0.25`", ",", "0.5`", ",", 
   "0.75`"}], "}"}]], "Output",
 CellChangeTimes->{
  3.611440469527651*^9, 3.6114405722198133`*^9, 3.611442185450517*^9, 
   3.611443927705474*^9, {3.6114653183432674`*^9, 3.6114653302290382`*^9}, 
   3.611470420907922*^9, 3.6124711290224977`*^9}]
}, Open  ]],

Cell["\<\
Now we create our interpolant. Note that we need to add two additional \
degrees of freedom to guarantee that we have can satisfy our boundary \
condtions.\
\>", "Text",
 CellChangeTimes->{{3.611470764465151*^9, 3.611470806507023*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"u", "[", 
   RowBox[{"x_", ",", "\[Epsilon]_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"Sum", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"c", "[", "j", "]"}], 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "\[Epsilon]"}], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"x", "-", 
           RowBox[{"data", "[", 
            RowBox[{"[", "j", "]"}], "]"}]}], ")"}], "2"]}]]}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "1", ",", "7"}], "}"}]}], "]"}], "+", "a", "+", 
   RowBox[{"b", " ", "x"}]}]}]], "Input",
 CellChangeTimes->{{3.611440312660683*^9, 3.611440325932482*^9}}],

Cell["Now we construct our second derivative function.", "Text",
 CellChangeTimes->{{3.611470348985297*^9, 3.6114703613094683`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"d2u", "[", 
   RowBox[{"x_", ",", "\[Epsilon]_"}], "]"}], "=", 
  RowBox[{"D", "[", 
   RowBox[{
    RowBox[{"u", "[", 
     RowBox[{"x", ",", "\[Epsilon]"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "2"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6114403758245316`*^9, 3.6114404136946373`*^9}, {
   3.611440747139772*^9, 3.6114407489149485`*^9}, 3.611443786894125*^9, 
   3.611443902652866*^9, {3.6114653136361475`*^9, 3.611465323964885*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "2"}], " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"0.75`", "\[VeryThinSpace]", "+", "x"}], ")"}], "2"]}], 
        " ", "\[Epsilon]"}]], " ", "\[Epsilon]"}], "+", 
     RowBox[{"4", " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"0.75`", "\[VeryThinSpace]", "+", "x"}], ")"}], "2"]}], 
        " ", "\[Epsilon]"}]], " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"0.75`", "\[VeryThinSpace]", "+", "x"}], ")"}], "2"], " ", 
      SuperscriptBox["\[Epsilon]", "2"]}]}], ")"}], " ", 
   RowBox[{"c", "[", "1", "]"}]}], "+", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "2"}], " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"0.5`", "\[VeryThinSpace]", "+", "x"}], ")"}], "2"]}], " ",
         "\[Epsilon]"}]], " ", "\[Epsilon]"}], "+", 
     RowBox[{"4", " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"0.5`", "\[VeryThinSpace]", "+", "x"}], ")"}], "2"]}], " ",
         "\[Epsilon]"}]], " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"0.5`", "\[VeryThinSpace]", "+", "x"}], ")"}], "2"], " ", 
      SuperscriptBox["\[Epsilon]", "2"]}]}], ")"}], " ", 
   RowBox[{"c", "[", "2", "]"}]}], "+", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "2"}], " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"0.25`", "\[VeryThinSpace]", "+", "x"}], ")"}], "2"]}], 
        " ", "\[Epsilon]"}]], " ", "\[Epsilon]"}], "+", 
     RowBox[{"4", " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"0.25`", "\[VeryThinSpace]", "+", "x"}], ")"}], "2"]}], 
        " ", "\[Epsilon]"}]], " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"0.25`", "\[VeryThinSpace]", "+", "x"}], ")"}], "2"], " ", 
      SuperscriptBox["\[Epsilon]", "2"]}]}], ")"}], " ", 
   RowBox[{"c", "[", "3", "]"}]}], "+", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "2"}], " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"0.`", "\[VeryThinSpace]", "+", "x"}], ")"}], "2"]}], " ", 
        "\[Epsilon]"}]], " ", "\[Epsilon]"}], "+", 
     RowBox[{"4", " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"0.`", "\[VeryThinSpace]", "+", "x"}], ")"}], "2"]}], " ", 
        "\[Epsilon]"}]], " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"0.`", "\[VeryThinSpace]", "+", "x"}], ")"}], "2"], " ", 
      SuperscriptBox["\[Epsilon]", "2"]}]}], ")"}], " ", 
   RowBox[{"c", "[", "4", "]"}]}], "+", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "2"}], " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "0.25`"}], "+", "x"}], ")"}], "2"]}], " ", 
        "\[Epsilon]"}]], " ", "\[Epsilon]"}], "+", 
     RowBox[{"4", " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "0.25`"}], "+", "x"}], ")"}], "2"]}], " ", 
        "\[Epsilon]"}]], " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "0.25`"}], "+", "x"}], ")"}], "2"], " ", 
      SuperscriptBox["\[Epsilon]", "2"]}]}], ")"}], " ", 
   RowBox[{"c", "[", "5", "]"}]}], "+", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "2"}], " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "0.5`"}], "+", "x"}], ")"}], "2"]}], " ", 
        "\[Epsilon]"}]], " ", "\[Epsilon]"}], "+", 
     RowBox[{"4", " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "0.5`"}], "+", "x"}], ")"}], "2"]}], " ", 
        "\[Epsilon]"}]], " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "0.5`"}], "+", "x"}], ")"}], "2"], " ", 
      SuperscriptBox["\[Epsilon]", "2"]}]}], ")"}], " ", 
   RowBox[{"c", "[", "6", "]"}]}], "+", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "2"}], " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "0.75`"}], "+", "x"}], ")"}], "2"]}], " ", 
        "\[Epsilon]"}]], " ", "\[Epsilon]"}], "+", 
     RowBox[{"4", " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "0.75`"}], "+", "x"}], ")"}], "2"]}], " ", 
        "\[Epsilon]"}]], " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "0.75`"}], "+", "x"}], ")"}], "2"], " ", 
      SuperscriptBox["\[Epsilon]", "2"]}]}], ")"}], " ", 
   RowBox[{"c", "[", "7", "]"}]}]}]], "Output",
 CellChangeTimes->{3.6114653252797565`*^9, 3.6114704237408*^9, 
  3.612471134944435*^9}]
}, Open  ]],

Cell["\<\
Now we create the left hand sides of our interpolation equations.\
\>", "Text",
 CellChangeTimes->{{3.6114704335142794`*^9, 3.6114704570819035`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"d2u", "[", 
    RowBox[{"#", ",", "1"}], "]"}], "&"}], "/@", "data"}]], "Input",
 CellChangeTimes->{{3.611440767781456*^9, 3.6114407739405394`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"-", "2.`"}], " ", 
     RowBox[{"c", "[", "1", "]"}]}], "-", 
    RowBox[{"1.6439728599235828`", " ", 
     RowBox[{"c", "[", "2", "]"}]}], "-", 
    RowBox[{"0.7788007830714049`", " ", 
     RowBox[{"c", "[", "3", "]"}]}], "+", 
    RowBox[{"0.14244570618273067`", " ", 
     RowBox[{"c", "[", "4", "]"}]}], "+", 
    RowBox[{"0.7357588823428847`", " ", 
     RowBox[{"c", "[", "5", "]"}]}], "+", 
    RowBox[{"0.8908483953921655`", " ", 
     RowBox[{"c", "[", "6", "]"}]}], "+", 
    RowBox[{"0.7377945719330503`", " ", 
     RowBox[{"c", "[", "7", "]"}]}]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "1.6439728599235828`"}], " ", 
     RowBox[{"c", "[", "1", "]"}]}], "-", 
    RowBox[{"2.`", " ", 
     RowBox[{"c", "[", "2", "]"}]}], "-", 
    RowBox[{"1.6439728599235828`", " ", 
     RowBox[{"c", "[", "3", "]"}]}], "-", 
    RowBox[{"0.7788007830714049`", " ", 
     RowBox[{"c", "[", "4", "]"}]}], "+", 
    RowBox[{"0.14244570618273067`", " ", 
     RowBox[{"c", "[", "5", "]"}]}], "+", 
    RowBox[{"0.7357588823428847`", " ", 
     RowBox[{"c", "[", "6", "]"}]}], "+", 
    RowBox[{"0.8908483953921655`", " ", 
     RowBox[{"c", "[", "7", "]"}]}]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "0.7788007830714049`"}], " ", 
     RowBox[{"c", "[", "1", "]"}]}], "-", 
    RowBox[{"1.6439728599235828`", " ", 
     RowBox[{"c", "[", "2", "]"}]}], "-", 
    RowBox[{"2.`", " ", 
     RowBox[{"c", "[", "3", "]"}]}], "-", 
    RowBox[{"1.6439728599235828`", " ", 
     RowBox[{"c", "[", "4", "]"}]}], "-", 
    RowBox[{"0.7788007830714049`", " ", 
     RowBox[{"c", "[", "5", "]"}]}], "+", 
    RowBox[{"0.14244570618273067`", " ", 
     RowBox[{"c", "[", "6", "]"}]}], "+", 
    RowBox[{"0.7357588823428847`", " ", 
     RowBox[{"c", "[", "7", "]"}]}]}], ",", 
   RowBox[{
    RowBox[{"0.14244570618273067`", " ", 
     RowBox[{"c", "[", "1", "]"}]}], "-", 
    RowBox[{"0.7788007830714049`", " ", 
     RowBox[{"c", "[", "2", "]"}]}], "-", 
    RowBox[{"1.6439728599235828`", " ", 
     RowBox[{"c", "[", "3", "]"}]}], "-", 
    RowBox[{"2.`", " ", 
     RowBox[{"c", "[", "4", "]"}]}], "-", 
    RowBox[{"1.6439728599235828`", " ", 
     RowBox[{"c", "[", "5", "]"}]}], "-", 
    RowBox[{"0.7788007830714049`", " ", 
     RowBox[{"c", "[", "6", "]"}]}], "+", 
    RowBox[{"0.14244570618273067`", " ", 
     RowBox[{"c", "[", "7", "]"}]}]}], ",", 
   RowBox[{
    RowBox[{"0.7357588823428847`", " ", 
     RowBox[{"c", "[", "1", "]"}]}], "+", 
    RowBox[{"0.14244570618273067`", " ", 
     RowBox[{"c", "[", "2", "]"}]}], "-", 
    RowBox[{"0.7788007830714049`", " ", 
     RowBox[{"c", "[", "3", "]"}]}], "-", 
    RowBox[{"1.6439728599235828`", " ", 
     RowBox[{"c", "[", "4", "]"}]}], "-", 
    RowBox[{"2.`", " ", 
     RowBox[{"c", "[", "5", "]"}]}], "-", 
    RowBox[{"1.6439728599235828`", " ", 
     RowBox[{"c", "[", "6", "]"}]}], "-", 
    RowBox[{"0.7788007830714049`", " ", 
     RowBox[{"c", "[", "7", "]"}]}]}], ",", 
   RowBox[{
    RowBox[{"0.8908483953921655`", " ", 
     RowBox[{"c", "[", "1", "]"}]}], "+", 
    RowBox[{"0.7357588823428847`", " ", 
     RowBox[{"c", "[", "2", "]"}]}], "+", 
    RowBox[{"0.14244570618273067`", " ", 
     RowBox[{"c", "[", "3", "]"}]}], "-", 
    RowBox[{"0.7788007830714049`", " ", 
     RowBox[{"c", "[", "4", "]"}]}], "-", 
    RowBox[{"1.6439728599235828`", " ", 
     RowBox[{"c", "[", "5", "]"}]}], "-", 
    RowBox[{"2.`", " ", 
     RowBox[{"c", "[", "6", "]"}]}], "-", 
    RowBox[{"1.6439728599235828`", " ", 
     RowBox[{"c", "[", "7", "]"}]}]}], ",", 
   RowBox[{
    RowBox[{"0.7377945719330503`", " ", 
     RowBox[{"c", "[", "1", "]"}]}], "+", 
    RowBox[{"0.8908483953921655`", " ", 
     RowBox[{"c", "[", "2", "]"}]}], "+", 
    RowBox[{"0.7357588823428847`", " ", 
     RowBox[{"c", "[", "3", "]"}]}], "+", 
    RowBox[{"0.14244570618273067`", " ", 
     RowBox[{"c", "[", "4", "]"}]}], "-", 
    RowBox[{"0.7788007830714049`", " ", 
     RowBox[{"c", "[", "5", "]"}]}], "-", 
    RowBox[{"1.6439728599235828`", " ", 
     RowBox[{"c", "[", "6", "]"}]}], "-", 
    RowBox[{"2.`", " ", 
     RowBox[{"c", "[", "7", "]"}]}]}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.611440518174902*^9, 3.6114407751693544`*^9, {3.6114653198202467`*^9, 
   3.6114653324495106`*^9}, 3.612471136974785*^9}]
}, Open  ]],

Cell["\<\
Now we create the right hand sides of our interpolation equations.\
\>", "Text",
 CellChangeTimes->{{3.6114704335142794`*^9, 3.6114704752689624`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"newVals", "=", 
  RowBox[{"Rest", "[", 
   RowBox[{"Most", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Exp", "[", 
       RowBox[{"4", "#"}], "]"}], "&"}], "/@", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Range", "[", 
        RowBox[{
         RowBox[{"-", "1"}], ",", "1", ",", 
         FractionBox["1", "4"]}], "]"}], "//", "N"}], ")"}]}], "]"}], 
   "]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.049787068367863944`", ",", "0.1353352832366127`", ",", 
   "0.36787944117144233`", ",", "1.`", ",", "2.718281828459045`", ",", 
   "7.38905609893065`", ",", "20.085536923187668`"}], "}"}]], "Output",
 CellChangeTimes->{3.6114405599927063`*^9, 3.6114653386526227`*^9, 
  3.611470553219514*^9, 3.612471139514473*^9}]
}, Open  ]],

Cell[TextData[{
 "Now we put the lhs and rhs together using Thread. This is a nice function \
in ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 "."
}], "Text",
 CellChangeTimes->{{3.611470487340963*^9, 3.6114705214025445`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Thread", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"d2u", "[", 
      RowBox[{"#", ",", "1"}], "]"}], "&"}], "/@", "data"}], "\[Equal]", 
   "newVals"}], "]"}]], "Input",
 CellChangeTimes->{{3.6112636495993614`*^9, 3.611263663673691*^9}, 
   3.611440794761342*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"-", "2.`"}], " ", 
      RowBox[{"c", "[", "1", "]"}]}], "-", 
     RowBox[{"1.6439728599235828`", " ", 
      RowBox[{"c", "[", "2", "]"}]}], "-", 
     RowBox[{"0.7788007830714049`", " ", 
      RowBox[{"c", "[", "3", "]"}]}], "+", 
     RowBox[{"0.14244570618273067`", " ", 
      RowBox[{"c", "[", "4", "]"}]}], "+", 
     RowBox[{"0.7357588823428847`", " ", 
      RowBox[{"c", "[", "5", "]"}]}], "+", 
     RowBox[{"0.8908483953921655`", " ", 
      RowBox[{"c", "[", "6", "]"}]}], "+", 
     RowBox[{"0.7377945719330503`", " ", 
      RowBox[{"c", "[", "7", "]"}]}]}], "\[Equal]", "0.049787068367863944`"}],
    ",", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"-", "1.6439728599235828`"}], " ", 
      RowBox[{"c", "[", "1", "]"}]}], "-", 
     RowBox[{"2.`", " ", 
      RowBox[{"c", "[", "2", "]"}]}], "-", 
     RowBox[{"1.6439728599235828`", " ", 
      RowBox[{"c", "[", "3", "]"}]}], "-", 
     RowBox[{"0.7788007830714049`", " ", 
      RowBox[{"c", "[", "4", "]"}]}], "+", 
     RowBox[{"0.14244570618273067`", " ", 
      RowBox[{"c", "[", "5", "]"}]}], "+", 
     RowBox[{"0.7357588823428847`", " ", 
      RowBox[{"c", "[", "6", "]"}]}], "+", 
     RowBox[{"0.8908483953921655`", " ", 
      RowBox[{"c", "[", "7", "]"}]}]}], "\[Equal]", "0.1353352832366127`"}], 
   ",", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"-", "0.7788007830714049`"}], " ", 
      RowBox[{"c", "[", "1", "]"}]}], "-", 
     RowBox[{"1.6439728599235828`", " ", 
      RowBox[{"c", "[", "2", "]"}]}], "-", 
     RowBox[{"2.`", " ", 
      RowBox[{"c", "[", "3", "]"}]}], "-", 
     RowBox[{"1.6439728599235828`", " ", 
      RowBox[{"c", "[", "4", "]"}]}], "-", 
     RowBox[{"0.7788007830714049`", " ", 
      RowBox[{"c", "[", "5", "]"}]}], "+", 
     RowBox[{"0.14244570618273067`", " ", 
      RowBox[{"c", "[", "6", "]"}]}], "+", 
     RowBox[{"0.7357588823428847`", " ", 
      RowBox[{"c", "[", "7", "]"}]}]}], "\[Equal]", "0.36787944117144233`"}], 
   ",", 
   RowBox[{
    RowBox[{
     RowBox[{"0.14244570618273067`", " ", 
      RowBox[{"c", "[", "1", "]"}]}], "-", 
     RowBox[{"0.7788007830714049`", " ", 
      RowBox[{"c", "[", "2", "]"}]}], "-", 
     RowBox[{"1.6439728599235828`", " ", 
      RowBox[{"c", "[", "3", "]"}]}], "-", 
     RowBox[{"2.`", " ", 
      RowBox[{"c", "[", "4", "]"}]}], "-", 
     RowBox[{"1.6439728599235828`", " ", 
      RowBox[{"c", "[", "5", "]"}]}], "-", 
     RowBox[{"0.7788007830714049`", " ", 
      RowBox[{"c", "[", "6", "]"}]}], "+", 
     RowBox[{"0.14244570618273067`", " ", 
      RowBox[{"c", "[", "7", "]"}]}]}], "\[Equal]", "1.`"}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"0.7357588823428847`", " ", 
      RowBox[{"c", "[", "1", "]"}]}], "+", 
     RowBox[{"0.14244570618273067`", " ", 
      RowBox[{"c", "[", "2", "]"}]}], "-", 
     RowBox[{"0.7788007830714049`", " ", 
      RowBox[{"c", "[", "3", "]"}]}], "-", 
     RowBox[{"1.6439728599235828`", " ", 
      RowBox[{"c", "[", "4", "]"}]}], "-", 
     RowBox[{"2.`", " ", 
      RowBox[{"c", "[", "5", "]"}]}], "-", 
     RowBox[{"1.6439728599235828`", " ", 
      RowBox[{"c", "[", "6", "]"}]}], "-", 
     RowBox[{"0.7788007830714049`", " ", 
      RowBox[{"c", "[", "7", "]"}]}]}], "\[Equal]", "2.718281828459045`"}], 
   ",", 
   RowBox[{
    RowBox[{
     RowBox[{"0.8908483953921655`", " ", 
      RowBox[{"c", "[", "1", "]"}]}], "+", 
     RowBox[{"0.7357588823428847`", " ", 
      RowBox[{"c", "[", "2", "]"}]}], "+", 
     RowBox[{"0.14244570618273067`", " ", 
      RowBox[{"c", "[", "3", "]"}]}], "-", 
     RowBox[{"0.7788007830714049`", " ", 
      RowBox[{"c", "[", "4", "]"}]}], "-", 
     RowBox[{"1.6439728599235828`", " ", 
      RowBox[{"c", "[", "5", "]"}]}], "-", 
     RowBox[{"2.`", " ", 
      RowBox[{"c", "[", "6", "]"}]}], "-", 
     RowBox[{"1.6439728599235828`", " ", 
      RowBox[{"c", "[", "7", "]"}]}]}], "\[Equal]", "7.38905609893065`"}], 
   ",", 
   RowBox[{
    RowBox[{
     RowBox[{"0.7377945719330503`", " ", 
      RowBox[{"c", "[", "1", "]"}]}], "+", 
     RowBox[{"0.8908483953921655`", " ", 
      RowBox[{"c", "[", "2", "]"}]}], "+", 
     RowBox[{"0.7357588823428847`", " ", 
      RowBox[{"c", "[", "3", "]"}]}], "+", 
     RowBox[{"0.14244570618273067`", " ", 
      RowBox[{"c", "[", "4", "]"}]}], "-", 
     RowBox[{"0.7788007830714049`", " ", 
      RowBox[{"c", "[", "5", "]"}]}], "-", 
     RowBox[{"1.6439728599235828`", " ", 
      RowBox[{"c", "[", "6", "]"}]}], "-", 
     RowBox[{"2.`", " ", 
      RowBox[{"c", "[", "7", "]"}]}]}], "\[Equal]", "20.085536923187668`"}]}],
   "}"}]], "Output",
 CellChangeTimes->{3.611440603568593*^9, 3.6114407972529936`*^9, 
  3.6114653421519423`*^9, 3.611470556226103*^9, 3.612471143187917*^9}]
}, Open  ]],

Cell["Now we add in our boundary values", "Text",
 CellChangeTimes->{{3.611470534815436*^9, 3.6114705430809145`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Reduce", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"u", "[", 
     RowBox[{
      RowBox[{"-", "1"}], ",", "1"}], "]"}], "\[Equal]", "0"}], "&&", 
   RowBox[{
    RowBox[{"u", "[", 
     RowBox[{"1", ",", "1"}], "]"}], "\[Equal]", "0"}], "&&", 
   RowBox[{"And", "@@", 
    RowBox[{"Thread", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"d2u", "[", 
         RowBox[{"#", ",", "1"}], "]"}], "&"}], "/@", "data"}], "\[Equal]", 
      "newVals"}], "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6112635120799665`*^9, 3.611263514826788*^9}, {
   3.6112635483540144`*^9, 3.6112635874871845`*^9}, {3.6112636956308775`*^9, 
   3.611263743757782*^9}, {3.6112639390129337`*^9, 3.611263939512265*^9}, {
   3.611440654161133*^9, 3.6114406716577325`*^9}, 3.611440806019806*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"c", "[", "7", "]"}], "\[Equal]", 
   RowBox[{"-", "637.3737943057056`"}]}], "&&", 
  RowBox[{
   RowBox[{"c", "[", "6", "]"}], "\[Equal]", "2201.501478904786`"}], "&&", 
  RowBox[{
   RowBox[{"c", "[", "5", "]"}], "\[Equal]", 
   RowBox[{"-", "3929.6789661719877`"}]}], "&&", 
  RowBox[{
   RowBox[{"c", "[", "4", "]"}], "\[Equal]", "4409.187649129523`"}], "&&", 
  RowBox[{
   RowBox[{"c", "[", "3", "]"}], "\[Equal]", 
   RowBox[{"-", "3300.3200760907434`"}]}], "&&", 
  RowBox[{
   RowBox[{"c", "[", "2", "]"}], "\[Equal]", "1550.7287151308888`"}], "&&", 
  RowBox[{
   RowBox[{"c", "[", "1", "]"}], "\[Equal]", 
   RowBox[{"-", "375.6935348709493`"}]}], "&&", 
  RowBox[{"b", "\[Equal]", "11.016304113685825`"}], "&&", 
  RowBox[{"a", "\[Equal]", "36.13446726048166`"}]}]], "Output",
 CellChangeTimes->{3.6114407008911204`*^9, 3.6114408087416105`*^9, 
  3.6114653455331864`*^9, 3.6114705589138927`*^9, 3.612471145144216*^9}]
}, Open  ]],

Cell["Now we create rules from these solutions", "Text",
 CellChangeTimes->{{3.611470567511586*^9, 3.6114705796956625`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ToRules", "[", 
  RowBox[{"Reduce", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"u", "[", 
      RowBox[{
       RowBox[{"-", "1"}], ",", "1"}], "]"}], "\[Equal]", "0"}], "&&", 
    RowBox[{
     RowBox[{"u", "[", 
      RowBox[{"1", ",", "1"}], "]"}], "\[Equal]", "0"}], "&&", 
    RowBox[{"And", "@@", 
     RowBox[{"Thread", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"d2u", "[", 
          RowBox[{"#", ",", "1"}], "]"}], "&"}], "/@", "data"}], "\[Equal]", 
       "newVals"}], "]"}]}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.6114408268506155`*^9, 3.611440830793229*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"c", "[", "7", "]"}], "\[Rule]", 
    RowBox[{"-", "637.3737943057056`"}]}], ",", 
   RowBox[{
    RowBox[{"c", "[", "6", "]"}], "\[Rule]", "2201.501478904786`"}], ",", 
   RowBox[{
    RowBox[{"c", "[", "5", "]"}], "\[Rule]", 
    RowBox[{"-", "3929.6789661719877`"}]}], ",", 
   RowBox[{
    RowBox[{"c", "[", "4", "]"}], "\[Rule]", "4409.187649129523`"}], ",", 
   RowBox[{
    RowBox[{"c", "[", "3", "]"}], "\[Rule]", 
    RowBox[{"-", "3300.3200760907434`"}]}], ",", 
   RowBox[{
    RowBox[{"c", "[", "2", "]"}], "\[Rule]", "1550.7287151308888`"}], ",", 
   RowBox[{
    RowBox[{"c", "[", "1", "]"}], "\[Rule]", 
    RowBox[{"-", "375.6935348709493`"}]}], ",", 
   RowBox[{"b", "\[Rule]", "11.016304113685825`"}], ",", 
   RowBox[{"a", "\[Rule]", "36.13446726048166`"}]}], "}"}]], "Output",
 CellChangeTimes->{3.6114408320180435`*^9, 3.611465347339384*^9, 
  3.6124711473536854`*^9}]
}, Open  ]],

Cell["Now we apply those rules to create our solution", "Text",
 CellChangeTimes->{{3.6114705892740126`*^9, 3.61147059769059*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"u", "[", 
   RowBox[{"x", ",", "1"}], "]"}], "/.", 
  RowBox[{"ToRules", "[", 
   RowBox[{"Reduce", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"u", "[", 
       RowBox[{
        RowBox[{"-", "1"}], ",", "1"}], "]"}], "\[Equal]", "0"}], "&&", 
     RowBox[{
      RowBox[{"u", "[", 
       RowBox[{"1", ",", "1"}], "]"}], "\[Equal]", "0"}], "&&", 
     RowBox[{"And", "@@", 
      RowBox[{"Thread", "[", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"d2u", "[", 
            RowBox[{"#", ",", "1"}], "]"}], "&"}], "/@", "data"}], ")"}], 
        "\[Equal]", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"Exp", "[", 
            RowBox[{"4", "#"}], "]"}], "&"}], "/@", "data"}], ")"}]}], 
       "]"}]}]}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6114408586977262`*^9, 3.611440874543233*^9}, {
  3.6114410277650566`*^9, 3.611441119497184*^9}, {3.611441156059424*^9, 
  3.6114412068250885`*^9}, {3.6114418994731765`*^9, 3.6114419044554787`*^9}, {
  3.6114419565420094`*^9, 3.611442012405778*^9}, {3.6114420778141403`*^9, 
  3.6114420931723213`*^9}}],

Cell[BoxData[
 RowBox[{"36.13446726048166`", "\[VeryThinSpace]", "-", 
  RowBox[{"637.3737943057056`", " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "0.75`"}], "+", "x"}], ")"}], "2"]}]]}], "+", 
  RowBox[{"2201.501478904786`", " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "0.5`"}], "+", "x"}], ")"}], "2"]}]]}], "-", 
  RowBox[{"3929.6789661719877`", " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "0.25`"}], "+", "x"}], ")"}], "2"]}]]}], "+", 
  RowBox[{"4409.187649129523`", " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"0.`", "\[VeryThinSpace]", "+", "x"}], ")"}], "2"]}]]}], "-", 
  RowBox[{"3300.3200760907434`", " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"0.25`", "\[VeryThinSpace]", "+", "x"}], ")"}], "2"]}]]}], "+", 
  RowBox[{"1550.7287151308888`", " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"0.5`", "\[VeryThinSpace]", "+", "x"}], ")"}], "2"]}]]}], "-", 
  RowBox[{"375.6935348709493`", " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"0.75`", "\[VeryThinSpace]", "+", "x"}], ")"}], "2"]}]]}], "+", 
  RowBox[{"11.016304113685825`", " ", "x"}]}]], "Output",
 CellChangeTimes->{{3.611441057348668*^9, 3.61144108146297*^9}, 
   3.6114411258564014`*^9, 3.6114411599389944`*^9, 3.61144120785176*^9, 
   3.611441909978141*^9, {3.6114419913918476`*^9, 3.6114420157740107`*^9}, 
   3.611442094787393*^9, 3.611465349672929*^9, 3.612471150173559*^9}]
}, Open  ]],

Cell["\<\
All of this can be zipped up into a single function solve. Note that we leave \
the kernel, and the differential equation as \[OpenCurlyDoubleQuote]hard \
coded\[CloseCurlyDoubleQuote], but it should be easy to create a generic \
solver from this code.\
\>", "Text",
 CellChangeTimes->{{3.6114708784076824`*^9, 3.611470890483691*^9}, {
  3.611470921100089*^9, 3.61147099664417*^9}}],

Cell[BoxData[
 RowBox[{"Clear", "[", "solve", "]"}]], "Input",
 CellChangeTimes->{{3.6114429591196613`*^9, 3.6114429635636063`*^9}, {
  3.61147091728456*^9, 3.611470919206834*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"solve", "[", 
   RowBox[{"n_", ",", "\[Epsilon]_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"data", ",", "u", ",", "d2u", ",", "c", ",", "a", ",", "b"}], 
     "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"data", "=", 
      RowBox[{"Most", "[", 
       RowBox[{"Rest", "[", 
        RowBox[{
         RowBox[{"Range", "[", 
          RowBox[{
           RowBox[{"-", "1"}], ",", "1", ",", 
           FractionBox["1", "n"]}], "]"}], "//", "N"}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"u", "[", 
       RowBox[{"x_", ",", "\[Alpha]_"}], "]"}], "=", 
      RowBox[{
       RowBox[{"Sum", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"c", "[", "j", "]"}], 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"-", "\[Alpha]"}], 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"x", "-", 
               RowBox[{"data", "[", 
                RowBox[{"[", "j", "]"}], "]"}]}], ")"}], "2"]}]]}], ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", "1", ",", 
           RowBox[{
            RowBox[{"2", "n"}], "-", "1"}]}], "}"}]}], "]"}], "+", "a", "+", 
       RowBox[{"b", " ", "x"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"d2u", "[", 
       RowBox[{"x_", ",", "\[Alpha]_"}], "]"}], "=", 
      RowBox[{"D", "[", 
       RowBox[{
        RowBox[{"u", "[", 
         RowBox[{"x", ",", "\[Alpha]"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", "2"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"u", "[", 
       RowBox[{"x", ",", "\[Epsilon]"}], "]"}], "/.", 
      RowBox[{"ToRules", "[", 
       RowBox[{"Reduce", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"u", "[", 
           RowBox[{
            RowBox[{"-", "1"}], ",", "\[Epsilon]"}], "]"}], "\[Equal]", "0"}],
          "&&", 
         RowBox[{
          RowBox[{"u", "[", 
           RowBox[{"1", ",", "\[Epsilon]"}], "]"}], "\[Equal]", "0"}], "&&", 
         RowBox[{"And", "@@", 
          RowBox[{"Thread", "[", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"d2u", "[", 
                RowBox[{"#", ",", "\[Epsilon]"}], "]"}], "&"}], "/@", 
              "data"}], ")"}], "\[Equal]", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"Exp", "[", 
                RowBox[{"4", "#"}], "]"}], "&"}], "/@", "data"}], ")"}]}], 
           "]"}]}]}], "]"}], "]"}]}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6114408586977262`*^9, 3.611440874543233*^9}, {
   3.6114410277650566`*^9, 3.611441119497184*^9}, {3.611441156059424*^9, 
   3.6114412068250885`*^9}, {3.6114418994731765`*^9, 
   3.6114419044554787`*^9}, {3.6114419565420094`*^9, 3.611442012405778*^9}, {
   3.6114420778141403`*^9, 3.6114420931723213`*^9}, {3.6114422542010922`*^9, 
   3.611442302871358*^9}, {3.6114423384015903`*^9, 3.611442342183097*^9}, {
   3.611442532680172*^9, 3.6114425472978625`*^9}, {3.6114425901963015`*^9, 
   3.6114426671102905`*^9}, {3.6114436224870462`*^9, 
   3.6114436437281275`*^9}, {3.6114645605938797`*^9, 
   3.6114645665017986`*^9}, {3.611464652373825*^9, 3.611464674592555*^9}, {
   3.6114647334986057`*^9, 3.6114647371390195`*^9}, 3.611464772866705*^9, {
   3.6114649264543095`*^9, 3.611464932993644*^9}, {3.6114659077829237`*^9, 
   3.6114659211717997`*^9}, 3.6114660328088083`*^9, {3.6114662467138186`*^9, 
   3.611466250969635*^9}, {3.611466389188266*^9, 3.611466458542122*^9}, {
   3.6114710042852345`*^9, 3.6114710059643483`*^9}}],

Cell["Now we test this code.", "Text",
 CellChangeTimes->{{3.611471029599017*^9, 3.6114710362414217`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"f", "=", 
  RowBox[{"solve", "[", 
   RowBox[{"4", ",", "1"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6114423680632544`*^9, 3.611442372176981*^9}, {
  3.6114655801605654`*^9, 3.6114655812162647`*^9}, {3.6114657394874473`*^9, 
  3.6114657633392563`*^9}, {3.61146581113194*^9, 3.6114658129521475`*^9}, {
  3.6114658528636055`*^9, 3.6114658544706707`*^9}, {3.6114659436767187`*^9, 
  3.6114659501970415`*^9}, {3.611465983499119*^9, 3.6114659843436785`*^9}, {
  3.6114660668636646`*^9, 3.6114660675811405`*^9}, {3.6114661023251734`*^9, 
  3.611466103503955*^9}, {3.611466143030158*^9, 3.611466149842675*^9}, {
  3.611466307908382*^9, 3.6114663094714184`*^9}, {3.6114664211933627`*^9, 
  3.6114664214385257`*^9}, {3.6114710129159575`*^9, 3.6114710146701193`*^9}}],

Cell[BoxData[
 RowBox[{"36.13446726048166`", "\[VeryThinSpace]", "-", 
  RowBox[{"637.3737943057056`", " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "0.75`"}], "+", "x"}], ")"}], "2"]}]]}], "+", 
  RowBox[{"2201.501478904786`", " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "0.5`"}], "+", "x"}], ")"}], "2"]}]]}], "-", 
  RowBox[{"3929.6789661719877`", " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "0.25`"}], "+", "x"}], ")"}], "2"]}]]}], "+", 
  RowBox[{"4409.187649129523`", " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"0.`", "\[VeryThinSpace]", "+", "x"}], ")"}], "2"]}]]}], "-", 
  RowBox[{"3300.3200760907434`", " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"0.25`", "\[VeryThinSpace]", "+", "x"}], ")"}], "2"]}]]}], "+", 
  RowBox[{"1550.7287151308888`", " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"0.5`", "\[VeryThinSpace]", "+", "x"}], ")"}], "2"]}]]}], "-", 
  RowBox[{"375.6935348709493`", " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"0.75`", "\[VeryThinSpace]", "+", "x"}], ")"}], "2"]}]]}], "+", 
  RowBox[{"11.016304113685825`", " ", "x"}]}]], "Output",
 CellChangeTimes->{
  3.611442373109599*^9, 3.61144297183609*^9, 3.6114437377044287`*^9, 
   3.611443806042819*^9, 3.611443888115227*^9, {3.611443963362403*^9, 
   3.6114439738973875`*^9}, 3.6114646974637175`*^9, 3.611464743996566*^9, 
   3.611464778504442*^9, 3.611465385589738*^9, 3.6114655821168623`*^9, {
   3.6114657434190507`*^9, 3.6114657641698074`*^9}, 3.6114658138727584`*^9, 
   3.6114658557215085`*^9, {3.61146594473442*^9, 3.6114659511286592`*^9}, 
   3.6114659854804325`*^9, {3.611466044603908*^9, 3.611466068467728*^9}, 
   3.6114661117324133`*^9, {3.6114661447262836`*^9, 3.6114661600454397`*^9}, 
   3.6114662144134808`*^9, 3.6114662623181586`*^9, 3.611466310392028*^9, {
   3.611466401967737*^9, 3.611466481267189*^9}, 3.6114710156958*^9, 
   3.6114711780958757`*^9, 3.6124711657018833`*^9}]
}, Open  ]],

Cell["\<\
Good the same answer! We may plot our approximate solution of course.\
\>", "Text",
 CellChangeTimes->{{3.611471039447545*^9, 3.6114710932592196`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{"f", ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.611464859463898*^9, 3.6114648728447695`*^9}, {
  3.6114658186939526`*^9, 3.611465819441448*^9}, {3.6114659554485254`*^9, 
  3.6114659564241695`*^9}, {3.611465988718579*^9, 3.611465989464073*^9}, {
  3.611466073474047*^9, 3.611466074212537*^9}, {3.611466266231756*^9, 
  3.611466267266439*^9}, {3.611466486684779*^9, 3.6114664886480813`*^9}, {
  3.6114711494588885`*^9, 3.611471150495575*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
Ev5Y
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  Method->{},
  PlotRange->{{-1, 1}, {-2.0621571054433865`, 0.}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{
  3.611464873627289*^9, 3.6114658211095543`*^9, 3.6114659582914076`*^9, 
   3.6114659906748753`*^9, {3.611466049365065*^9, 3.611466075347294*^9}, 
   3.611466268463233*^9, 3.611466312335317*^9, {3.6114664732538757`*^9, 
   3.611466489840871*^9}, {3.611471151488234*^9, 3.6114711800261526`*^9}, 
   3.6124711690310993`*^9}]
}, Open  ]],

Cell["We may plot the approximate solution and the exact solution ", "Text",
 CellChangeTimes->{{3.611471071537819*^9, 3.611471105376666*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"f", ",", "sol"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.61146560949201*^9, 3.6114656150246773`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
Ev5Y
     "]]}, 
   {Hue[0.9060679774997897, 0.6, 0.6], LineBox[CompressedData["
1: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
pf8H01v6sw==
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  Method->{},
  PlotRange->{{-1, 1}, {-2.099151993572981, 0.}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{
  3.6114656158502245`*^9, 3.6114658301495485`*^9, {3.6114659675825677`*^9, 
   3.6114659945754623`*^9}, {3.6114660542913322`*^9, 3.6114660835757446`*^9}, 
   3.61146627592618*^9, 3.6114663184923983`*^9, 3.6114664999285593`*^9, {
   3.6114711357998333`*^9, 3.611471184484109*^9}, 3.6114712256213803`*^9, 
   3.6124711721441646`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Abs", "[", 
    RowBox[{"f", "-", "sol"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", " ", "\"\<error\>\""}]}], "]"}]], "Input",
 CellChangeTimes->{{3.611438624049923*^9, 3.6114386708259335`*^9}, {
  3.6114655664554796`*^9, 3.611465593561449*^9}, {3.611471118854601*^9, 
  3.6114711285930557`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
zOL8FZTUIup++P/vH6AiV6QZxe+s9z/ri5bp
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  Method->{},
  PlotLabel->FormBox["\"error\"", TraditionalForm],
  PlotRange->{{-1, 1}, {0., 0.052237427467418884`}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{{3.6114386644467044`*^9, 3.6114386713132577`*^9}, 
   3.6114655947652473`*^9, 3.6114658358473253`*^9, {3.6114660586572247`*^9, 
   3.611466087149113*^9}, 3.6114662794955463`*^9, 3.61146632333661*^9, 
   3.6114665035419545`*^9, 3.611471129336548*^9, 3.611471188741932*^9, 
   3.611471231781464*^9, 3.612471174791926*^9}]
}, Open  ]],

Cell["We may include the plotting in a modifed routine of course.", "Text",
 CellChangeTimes->{{3.611471260131257*^9, 3.6114712801081004`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"solvePlot", "[", 
   RowBox[{"n_", ",", "\[Epsilon]_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"data", ",", "u", ",", "d2u", ",", "c", ",", "a", ",", "b"}], 
     "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"data", "=", 
      RowBox[{"Most", "[", 
       RowBox[{"Rest", "[", 
        RowBox[{
         RowBox[{"Range", "[", 
          RowBox[{
           RowBox[{"-", "1"}], ",", "1", ",", 
           FractionBox["1", "n"]}], "]"}], "//", "N"}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"u", "[", 
       RowBox[{"x_", ",", "\[Alpha]_"}], "]"}], "=", 
      RowBox[{
       RowBox[{"Sum", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"c", "[", "j", "]"}], 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"-", "\[Alpha]"}], 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"x", "-", 
               RowBox[{"data", "[", 
                RowBox[{"[", "j", "]"}], "]"}]}], ")"}], "2"]}]]}], ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", "1", ",", 
           RowBox[{
            RowBox[{"2", "n"}], "-", "1"}]}], "}"}]}], "]"}], "+", "a", "+", 
       RowBox[{"b", " ", "x"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"d2u", "[", 
       RowBox[{"x_", ",", "\[Alpha]_"}], "]"}], "=", 
      RowBox[{"D", "[", 
       RowBox[{
        RowBox[{"u", "[", 
         RowBox[{"x", ",", "\[Alpha]"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", "2"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"sol", "=", 
      RowBox[{
       RowBox[{"u", "[", 
        RowBox[{"x", ",", "\[Epsilon]"}], "]"}], "/.", 
       RowBox[{"ToRules", "[", 
        RowBox[{"Reduce", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"u", "[", 
            RowBox[{
             RowBox[{"-", "1"}], ",", "\[Epsilon]"}], "]"}], "\[Equal]", 
           "0"}], "&&", 
          RowBox[{
           RowBox[{"u", "[", 
            RowBox[{"1", ",", "\[Epsilon]"}], "]"}], "\[Equal]", "0"}], "&&", 
          RowBox[{"And", "@@", 
           RowBox[{"Thread", "[", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"d2u", "[", 
                 RowBox[{"#", ",", "\[Epsilon]"}], "]"}], "&"}], "/@", 
               "data"}], ")"}], "\[Equal]", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"Exp", "[", 
                 RowBox[{"4", "#"}], "]"}], "&"}], "/@", "data"}], ")"}]}], 
            "]"}]}]}], "]"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Plot", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"sol", ",", 
         RowBox[{"-", 
          FractionBox[
           RowBox[{"1", "+", 
            SuperscriptBox["\[ExponentialE]", "8"], "-", 
            RowBox[{"2", " ", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"4", "+", 
               RowBox[{"4", " ", "x"}]}]]}], "-", "x", "+", 
            RowBox[{
             SuperscriptBox["\[ExponentialE]", "8"], " ", "x"}]}], 
           RowBox[{"32", " ", 
            SuperscriptBox["\[ExponentialE]", "4"]}]]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", 
         RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "]"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6114408586977262`*^9, 3.611440874543233*^9}, {
   3.6114410277650566`*^9, 3.611441119497184*^9}, {3.611441156059424*^9, 
   3.6114412068250885`*^9}, {3.6114418994731765`*^9, 
   3.6114419044554787`*^9}, {3.6114419565420094`*^9, 3.611442012405778*^9}, {
   3.6114420778141403`*^9, 3.6114420931723213`*^9}, {3.6114422542010922`*^9, 
   3.611442302871358*^9}, {3.6114423384015903`*^9, 3.611442342183097*^9}, {
   3.611442532680172*^9, 3.6114425472978625`*^9}, {3.6114425901963015`*^9, 
   3.6114426671102905`*^9}, {3.6114436224870462`*^9, 
   3.6114436437281275`*^9}, {3.6114645605938797`*^9, 
   3.6114645665017986`*^9}, {3.611464652373825*^9, 3.611464674592555*^9}, {
   3.6114647334986057`*^9, 3.6114647371390195`*^9}, 3.611464772866705*^9, {
   3.6114649264543095`*^9, 3.611464932993644*^9}, {3.6114659077829237`*^9, 
   3.6114659211717997`*^9}, 3.6114660328088083`*^9, {3.6114662467138186`*^9, 
   3.611466250969635*^9}, {3.611466389188266*^9, 3.611466458542122*^9}, {
   3.6114674736285095`*^9, 3.611467506059871*^9}, {3.6114675440240383`*^9, 
   3.611467552324541*^9}, {3.611467780065151*^9, 3.611467795003055*^9}, {
   3.611470905919921*^9, 3.611470906316185*^9}}],

Cell["Which we may immediately turn into a Manipulate!", "Text",
 CellChangeTimes->{{3.6114713249328146`*^9, 3.6114713372099543`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"solvePlot", "[", 
    RowBox[{"n", ",", "\[Epsilon]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"n", ",", "4"}], "}"}], ",", "2", ",", "20", ",", "1"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Epsilon]", ",", "1"}], "}"}], ",", ".1", ",", "10"}], 
    "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6114673465072365`*^9, 3.6114674293051257`*^9}, {
  3.611467481268574*^9, 3.611467483595125*^9}, {3.611467564990939*^9, 
  3.6114676127986317`*^9}, {3.6114676577854567`*^9, 3.6114676706656275`*^9}, {
  3.611467747693692*^9, 3.6114677554468317`*^9}, {3.611468000654806*^9, 
  3.611468004033046*^9}, {3.611470908517644*^9, 3.6114709088408585`*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`n$$ = 13, $CellContext`\[Epsilon]$$ = 10., 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`n$$], 4}, 2, 20, 1}, {{
       Hold[$CellContext`\[Epsilon]$$], 1}, 0.1, 10}}, Typeset`size$$ = {
    211., {4., 13.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`n$3461$$ = 
    0, $CellContext`\[Epsilon]$3462$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`n$$ = 4, $CellContext`\[Epsilon]$$ = 1}, 
      "ControllerVariables" :> {
        Hold[$CellContext`n$$, $CellContext`n$3461$$, 0], 
        Hold[$CellContext`\[Epsilon]$$, $CellContext`\[Epsilon]$3462$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, 
      "Body" :> $CellContext`solvePlot[$CellContext`n$$, $CellContext`\
\[Epsilon]$$], 
      "Specifications" :> {{{$CellContext`n$$, 4}, 2, 20, 
         1}, {{$CellContext`\[Epsilon]$$, 1}, 0.1, 10}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{383., {95., 104.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.611467613696227*^9, 3.6114676716973114`*^9, 
  3.6114677569178076`*^9, 3.611468005333908*^9, 3.6114680607708654`*^9, 
  3.6114712887698402`*^9, 3.611471712899995*^9, 3.6124711850497446`*^9}]
}, Open  ]],

Cell[TextData[{
 "And now we can play around! You will note it is fairly easy to break this, \
but for small values of ",
 Cell[BoxData[
  FormBox["n", TraditionalForm]]],
 " it should work. You will note that as ",
 Cell[BoxData[
  FormBox["n", TraditionalForm]]],
 " gets larger you need to localize the kernel more by increasing ",
 Cell[BoxData[
  FormBox["\[Epsilon]", TraditionalForm]]],
 " or you start to get condition warnings. This is a manifestation of a type \
of \[OpenCurlyDoubleQuote]uncertainty principle\[CloseCurlyDoubleQuote] in \
kernel approximation I think. This notion was developed by Schaback, but I \
seem to recall he is sort of revising it. We\[CloseCurlyQuote]ll ask Greg \
about this as I think this is a recent development and perhaps is related to \
Greg\[CloseCurlyQuote]s HS research which says don\[CloseCurlyQuote]t even \
bother forming the ",
 Cell[BoxData[
  FormBox["K", TraditionalForm]]],
 " matrix!? Finally, you will also note that you can still get nice looking \
results with bad condition numbers, but eventually this whole process breaks \
down."
}], "Text",
 CellChangeTimes->{{3.611471348327324*^9, 3.611471389543648*^9}, {
  3.611471434276303*^9, 3.6114714960519342`*^9}, {3.6114716016419334`*^9, 
  3.6114717581760097`*^9}, {3.611499006614253*^9, 3.6114990636765165`*^9}, {
  3.612471266613063*^9, 3.6124712681931133`*^9}}],

Cell[TextData[{
 "Finally, a big point about how this was programmed. There is both a \
strength and a weakness to how this was programmed. The strength is that it  \
was easy! Note that I never formed any matrix myself. I let Reduce detect \
that it had a linear system on its hands and it passed the problem to \
LinearSolve which passed it on to other routines like RowReduce so you are \
still solving a linear system--this has simply been abstracted away in the \
above code. The big weakness is that we only start to see condition number \
warnings when things go awry and that\[CloseCurlyQuote]s bad because \
condition numbers are the main thing we care about. In other words, to make \
this more useful we would need to figure out the actual matrices being used \
or some way for Mathematica to spit out condition numbers all the time. This \
is probably possible I think. Incidentally, this is one reason I told you \
Palmer that I did not recall encountering any condition number problems on \
Monday --I had only done this for ",
 Cell[BoxData[
  FormBox[
   RowBox[{"n", "=", 
    RowBox[{"4", " ", "and", " ", "5"}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " with ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Epsilon]", "=", "1"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "."
}], "Text",
 CellChangeTimes->{{3.611471765374782*^9, 3.6114721379416265`*^9}, {
   3.6114723143323174`*^9, 3.611472324877309*^9}, 3.6114724558759212`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Newtonized Gaussian Kernel basis (Schaback 2008 Paper)\
\>", "Section",
 CellChangeTimes->{
  3.611472214734291*^9, {3.612565051547016*^9, 3.6125650580733585`*^9}}],

Cell["\<\
We attempt to find a fomula for the Newtonized Gaussian Kernel basis. We won\
\[CloseCurlyQuote]t be successful, because we don\[CloseCurlyQuote]t believe \
such a basis exists. In fact, we believe that either we \
don\[CloseCurlyQuote]t understand the process by which a Newton basis is \
supposed to be created or the definition is an example of incorrect \
generalization. In fact, this is the reason I did not do this section before, \
I assumed I was confused\
\>", "Text",
 CellChangeTimes->{{3.611498878290913*^9, 3.611498989170255*^9}, {
  3.612565155026393*^9, 3.612565259176633*^9}, {3.6126785041814623`*^9, 
  3.61267854394762*^9}, {3.6126787299324675`*^9, 3.612678756588176*^9}}],

Cell[TextData[{
 "Note we use the notation of the 2008 paper in which the first point is ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["x", "0"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "."
}], "Text",
 CellChangeTimes->{{3.6126787637129164`*^9, 3.612678786779233*^9}}],

Cell[CellGroupData[{

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{"n", "=", "0"}], TraditionalForm]],
 FormatType->"TraditionalForm"]], "Subsection",
 CellChangeTimes->{{3.612609577841316*^9, 3.6126095830287647`*^9}}],

Cell[TextData[{
 "Since we have one point, this should work. Our goal is to find a formula \
for ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["c", "0"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "."
}], "Text",
 CellChangeTimes->{{3.612678830420225*^9, 3.6126788418758755`*^9}, {
  3.612678906988569*^9, 3.6126789198661404`*^9}}],

Cell[BoxData[
 RowBox[{"Clear", "[", 
  RowBox[{"v", ",", "n", ",", "k", ",", "K", ",", "u"}], "]"}]], "Input",
 CellChangeTimes->{{3.6124741960386515`*^9, 3.612474201449249*^9}, {
  3.612474840719448*^9, 3.612474841033656*^9}, {3.612506143408664*^9, 
  3.612506143646824*^9}, {3.612506176750831*^9, 3.6125061772811832`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"n", "=", "0"}], ";"}]], "Input",
 CellChangeTimes->{{3.612474173418613*^9, 3.6124741757031326`*^9}, {
  3.6124751515776644`*^9, 3.612475151793808*^9}, {3.612479211223221*^9, 
  3.6124792148066034`*^9}, {3.6124793391292686`*^9, 3.61247933940145*^9}, {
  3.612479450416253*^9, 3.6124794511377325`*^9}, {3.612506859837739*^9, 
  3.612506860052882*^9}, {3.612556193385225*^9, 3.6125561937044363`*^9}, {
  3.6125562323839507`*^9, 3.6125562333335824`*^9}, {3.6126093921630955`*^9, 
  3.6126093925033216`*^9}}],

Cell[TextData[{
 "We are given",
 Cell[BoxData[
  FormBox[Cell[""], TraditionalForm]]],
 " a set of points ",
 Cell[BoxData[
  FormBox["X", TraditionalForm]]]
}], "Text",
 CellChangeTimes->{{3.612565300518283*^9, 3.6125653025966654`*^9}, {
  3.612565339097931*^9, 3.6125653709521103`*^9}, {3.6125655681373377`*^9, 
  3.6125656430051203`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"X", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"xp", "[", "l", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"l", ",", "0", ",", "n"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6125656498288035`*^9, 3.612565671087937*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"xp", "[", "0", "]"}], "}"}]], "Output",
 CellChangeTimes->{
  3.6125656728060784`*^9, {3.6126093953752303`*^9, 3.6126094000733533`*^9}, 
   3.612679392664283*^9}]
}, Open  ]],

Cell[TextData[{
 "We are given a kernel ",
 Cell[BoxData[
  FormBox[
   RowBox[{"K", Cell[""]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "with which we can form a basis for interpolation"
}], "Text",
 CellChangeTimes->{{3.612565300518283*^9, 3.6125653025966654`*^9}, {
  3.612565339097931*^9, 3.6125653709521103`*^9}, {3.6125655681373377`*^9, 
  3.612565593581253*^9}, {3.6125656791042657`*^9, 3.6125656954591413`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"K", "[", 
    RowBox[{"x", ",", 
     RowBox[{"xp", "[", "l", "]"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"l", ",", "0", ",", "n"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6125657040648603`*^9, 3.612565721659557*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"K", "[", 
   RowBox[{"x", ",", 
    RowBox[{"xp", "[", "0", "]"}]}], "]"}], "}"}]], "Output",
 CellChangeTimes->{3.612565722240943*^9, 3.6126094054739475`*^9, 
  3.6126793950188475`*^9}]
}, Open  ]],

Cell["\<\
We wish to find a new basis called the Newton basis\
\>", "Text",
 CellChangeTimes->{{3.612565731813307*^9, 3.6125657467292233`*^9}, {
  3.612565812553983*^9, 3.6125658183718505`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"v", "[", 
   RowBox[{"x_", ",", "k_"}], "]"}], ":=", 
  RowBox[{"Sum", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"c", "[", "l", "]"}], 
     RowBox[{"K", "[", 
      RowBox[{"x", ",", 
       RowBox[{"xp", "[", "l", "]"}]}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"l", ",", "0", ",", "k"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.612474017957949*^9, 3.6124740669255037`*^9}, {
  3.6124742789979095`*^9, 3.6124742852030344`*^9}, {3.6124747176759195`*^9, 
  3.6124747627739005`*^9}, {3.612474836352545*^9, 3.612474836937934*^9}, {
  3.6125063428710613`*^9, 3.6125063435835357`*^9}, {3.612556118699576*^9, 
  3.6125561192689514`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"v", "[", 
     RowBox[{"x", ",", "l"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"l", ",", "0", ",", "n"}], "}"}]}], "]"}], "//", 
  "TableForm"}]], "Input",
 CellChangeTimes->{{3.612474486891183*^9, 3.612474510223693*^9}, {
  3.6124745601759014`*^9, 3.612474562311322*^9}, {3.612474772422315*^9, 
  3.612474779510027*^9}, {3.612506315099806*^9, 3.6125063164667144`*^9}, {
  3.6125063842105446`*^9, 3.612506385029089*^9}, {3.6125658599307594`*^9, 
  3.6125658933289623`*^9}}],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      RowBox[{
       RowBox[{"c", "[", "0", "]"}], " ", 
       RowBox[{"K", "[", 
        RowBox[{"x", ",", 
         RowBox[{"xp", "[", "0", "]"}]}], "]"}]}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   Column],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.6124745118727884`*^9, 3.6124745635591507`*^9, 3.612474819941636*^9, 
   3.612474864653364*^9, 3.6124751551446285`*^9, 3.612475806441796*^9, 
   3.6124760349188643`*^9, {3.6125063613963785`*^9, 3.6125063869053364`*^9}, 
   3.612506866172241*^9, 3.612556140863308*^9, {3.6125658771482053`*^9, 
   3.6125658941385*^9}, 3.612609416379194*^9, 3.612679401690279*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"exp1", "=", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"v", "[", 
        RowBox[{
         RowBox[{"xp", "[", "i", "]"}], ",", "j"}], "]"}], "\[Equal]", "0"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{"j", ",", "1", ",", "n"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "0", ",", 
        RowBox[{"j", "-", "1"}]}], "}"}]}], "]"}], "//", "Flatten"}]}], ";", 
  RowBox[{"exp1", "//", "TableForm"}]}]], "Input",
 CellChangeTimes->{{3.612474945120854*^9, 3.6124750214281406`*^9}, {
  3.612475063005782*^9, 3.6124750683383265`*^9}, {3.6124751145180264`*^9, 
  3.6124751765598555`*^9}, {3.612475323487533*^9, 3.612475344685988*^9}, {
  3.612506778662774*^9, 3.6125067797134724`*^9}, {3.612556159050398*^9, 
  3.612556174144432*^9}, {3.6125659860616117`*^9, 3.612566031501992*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"{", "}"}],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.6125660322124653`*^9, 3.6126094334253073`*^9, 
  3.6126794056859336`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"exp2", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"v", "[", 
       RowBox[{
        RowBox[{"xp", "[", "j", "]"}], ",", "j"}], "]"}], "\[Equal]", "1"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "0", ",", "n"}], "}"}]}], "]"}]}], ";", 
  RowBox[{"exp2", "//", "TableForm"}]}]], "Input",
 CellChangeTimes->{{3.612475217263915*^9, 3.612475232164822*^9}, {
  3.6124753481572957`*^9, 3.6124753529424763`*^9}, {3.612506783230811*^9, 
  3.6125067840823765`*^9}, {3.6125563113980584`*^9, 3.6125563136255393`*^9}, {
  3.6125660180060205`*^9, 3.6125660406790943`*^9}}],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      RowBox[{
       RowBox[{
        RowBox[{"c", "[", "0", "]"}], " ", 
        RowBox[{"K", "[", 
         RowBox[{
          RowBox[{"xp", "[", "0", "]"}], ",", 
          RowBox[{"xp", "[", "0", "]"}]}], "]"}]}], "\[Equal]", "1"}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   Column],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.6125660414546103`*^9, 3.61256612605285*^9, 
  3.612609441615753*^9, 3.612679408163591*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Union", "[", 
   RowBox[{"exp1", ",", "exp2"}], "]"}], "//", "TableForm"}]], "Input",
 CellChangeTimes->{{3.612475363076213*^9, 3.612475369997814*^9}, {
  3.612566132831357*^9, 3.61256613516891*^9}}],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      RowBox[{
       RowBox[{
        RowBox[{"c", "[", "0", "]"}], " ", 
        RowBox[{"K", "[", 
         RowBox[{
          RowBox[{"xp", "[", "0", "]"}], ",", 
          RowBox[{"xp", "[", "0", "]"}]}], "]"}]}], "\[Equal]", "1"}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   Column],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.6124753708083534`*^9, 3.6124758131502542`*^9, 
  3.6124760382250605`*^9, 3.6124790001609817`*^9, 3.6124792336741476`*^9, 
  3.612479349200963*^9, 3.6124794581523957`*^9, 3.612506832022247*^9, 
  3.612506879122833*^9, 3.612556333937027*^9, 3.6125661356542344`*^9, 
  3.612609462174423*^9, 3.6126794109964657`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"sol1", "=", 
  RowBox[{"Reduce", "[", 
   RowBox[{
    RowBox[{"Union", "[", 
     RowBox[{"exp1", ",", "exp2"}], "]"}], ",", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"c", "[", "j", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"j", ",", "0", ",", "n"}], "}"}]}], "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.612475430299905*^9, 3.612475432525384*^9}, {
  3.6124754762204323`*^9, 3.6124754979548817`*^9}, {3.6124792399613266`*^9, 
  3.612479240543713*^9}, {3.6125068523687735`*^9, 3.612506852883116*^9}, {
  3.612508068922662*^9, 3.6125080700924397`*^9}, {3.612556344640093*^9, 
  3.6125563485186715`*^9}, {3.6125571167923985`*^9, 3.6125571274755*^9}, {
  3.6126094881096625`*^9, 3.6126094955145855`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"K", "[", 
    RowBox[{
     RowBox[{"xp", "[", "0", "]"}], ",", 
     RowBox[{"xp", "[", "0", "]"}]}], "]"}], "\[NotEqual]", "0"}], "&&", 
  RowBox[{
   RowBox[{"c", "[", "0", "]"}], "\[Equal]", 
   FractionBox["1", 
    RowBox[{"K", "[", 
     RowBox[{
      RowBox[{"xp", "[", "0", "]"}], ",", 
      RowBox[{"xp", "[", "0", "]"}]}], "]"}]]}]}]], "Output",
 CellChangeTimes->{3.6126094886980543`*^9, 3.612679414044486*^9}]
}, Open  ]],

Cell["\<\
Now the kernel we are interested in is the Gaussian kernel which is never \
zero.\
\>", "Text",
 CellChangeTimes->{{3.6125661673142815`*^9, 3.612566203667637*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"sol2", "=", 
  RowBox[{"And", "@@", 
   RowBox[{"Flatten", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"K", "[", 
        RowBox[{
         RowBox[{"xp", "[", "i", "]"}], ",", 
         RowBox[{"xp", "[", "j", "]"}]}], "]"}], "\[NotEqual]", " ", "0"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "0", ",", "n"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"j", ",", "0", ",", "n"}], "}"}]}], "]"}], "]"}], " ", 
   RowBox[{"(*", 
    RowBox[{
    "we", " ", "impose", " ", "this", " ", "since", " ", "we", " ", "will", 
     " ", "use", " ", "Gaussians"}], "*)"}]}]}]], "Input",
 CellChangeTimes->{{3.6125078768701982`*^9, 3.61250804053679*^9}, {
  3.612508080028045*^9, 3.6125080817551937`*^9}, {3.612556366338518*^9, 
  3.6125563718241653`*^9}, {3.612557134889431*^9, 3.6125571530875273`*^9}, {
  3.6125662303543744`*^9, 3.61256623318826*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"K", "[", 
   RowBox[{
    RowBox[{"xp", "[", "0", "]"}], ",", 
    RowBox[{"xp", "[", "0", "]"}]}], "]"}], "\[NotEqual]", "0"}]], "Output",
 CellChangeTimes->{{3.61250797651623*^9, 3.612508005509506*^9}, 
   3.6125080408990345`*^9, 3.612508083374271*^9, 3.6125563844865828`*^9, 
   3.6125571617893333`*^9, 3.612566234501131*^9, 3.6126094805436325`*^9, 
   3.612679422954715*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Reduce", "[", 
  RowBox[{"sol1", "&&", "sol2"}], "]"}]], "Input",
 CellChangeTimes->{{3.6125080929806557`*^9, 3.612508122922561*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"K", "[", 
    RowBox[{
     RowBox[{"xp", "[", "0", "]"}], ",", 
     RowBox[{"xp", "[", "0", "]"}]}], "]"}], "\[NotEqual]", "0"}], "&&", 
  RowBox[{
   RowBox[{"c", "[", "0", "]"}], "\[Equal]", 
   FractionBox["1", 
    RowBox[{"K", "[", 
     RowBox[{
      RowBox[{"xp", "[", "0", "]"}], ",", 
      RowBox[{"xp", "[", "0", "]"}]}], "]"}]]}]}]], "Output",
 CellChangeTimes->{{3.612508104246146*^9, 3.6125081238641863`*^9}, 
   3.6125563864769063`*^9, 3.6125571644630923`*^9, 3.612566244308651*^9, 
   3.6126094993771553`*^9, 3.6126794259857283`*^9}]
}, Open  ]],

Cell[TextData[{
 "So we have ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["c", "0"], "=", 
    FractionBox["1", 
     RowBox[{"K", "(", 
      RowBox[{
       SubscriptBox["x", "0"], ",", 
       SubscriptBox["x", "0"]}], ")"}]]}], TraditionalForm]],
  FormatType->"TraditionalForm"]
}], "Text",
 CellChangeTimes->{{3.6126791512358007`*^9, 3.61267921214927*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{"n", "=", "1"}], TraditionalForm]],
 FormatType->"TraditionalForm"]], "Subsection",
 CellChangeTimes->{{3.6126095969390125`*^9, 3.612609598654152*^9}}],

Cell[TextData[{
 "We do the same thing, but now with two points. Our goal is to find a \
formula for ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["c", "1"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " since we already have ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["c", "0"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "."
}], "Text",
 CellChangeTimes->{{3.6126788879148903`*^9, 3.6126788961643953`*^9}, {
  3.6126789402246466`*^9, 3.612678984959361*^9}}],

Cell[BoxData[
 RowBox[{"Clear", "[", 
  RowBox[{"v", ",", "n", ",", "k", ",", "K", ",", "u"}], "]"}]], "Input",
 CellChangeTimes->{{3.6124741960386515`*^9, 3.612474201449249*^9}, {
  3.612474840719448*^9, 3.612474841033656*^9}, {3.612506143408664*^9, 
  3.612506143646824*^9}, {3.612506176750831*^9, 3.6125061772811832`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"n", "=", "1"}], ";"}]], "Input",
 CellChangeTimes->{{3.612474173418613*^9, 3.6124741757031326`*^9}, {
  3.6124751515776644`*^9, 3.612475151793808*^9}, {3.612479211223221*^9, 
  3.6124792148066034`*^9}, {3.6124793391292686`*^9, 3.61247933940145*^9}, {
  3.612479450416253*^9, 3.6124794511377325`*^9}, {3.612506859837739*^9, 
  3.612506860052882*^9}, {3.612556193385225*^9, 3.6125561937044363`*^9}, {
  3.6125562323839507`*^9, 3.6125562333335824`*^9}, {3.6126093921630955`*^9, 
  3.6126093925033216`*^9}, {3.6126096500961742`*^9, 3.6126096502732916`*^9}}],

Cell[TextData[{
 "We are given",
 Cell[BoxData[
  FormBox[Cell[""], TraditionalForm]]],
 " a set of points ",
 Cell[BoxData[
  FormBox["X", TraditionalForm]]]
}], "Text",
 CellChangeTimes->{{3.612565300518283*^9, 3.6125653025966654`*^9}, {
  3.612565339097931*^9, 3.6125653709521103`*^9}, {3.6125655681373377`*^9, 
  3.6125656430051203`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"X", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"xp", "[", "l", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"l", ",", "0", ",", "n"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6125656498288035`*^9, 3.612565671087937*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"xp", "[", "0", "]"}], ",", 
   RowBox[{"xp", "[", "1", "]"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.6125656728060784`*^9, {3.6126093953752303`*^9, 3.6126094000733533`*^9}, {
   3.6126096584787474`*^9, 3.612609662343318*^9}, 3.6126160059359016`*^9}]
}, Open  ]],

Cell[TextData[{
 "We are given a kernel ",
 Cell[BoxData[
  FormBox[
   RowBox[{"K", Cell[""]}], TraditionalForm]]],
 "with which we can form a basis for interpolation"
}], "Text",
 CellChangeTimes->{{3.612565300518283*^9, 3.6125653025966654`*^9}, {
  3.612565339097931*^9, 3.6125653709521103`*^9}, {3.6125655681373377`*^9, 
  3.612565593581253*^9}, {3.6125656791042657`*^9, 3.6125656954591413`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"K", "[", 
    RowBox[{"x", ",", 
     RowBox[{"xp", "[", "l", "]"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"l", ",", "0", ",", "n"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6125657040648603`*^9, 3.612565721659557*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"K", "[", 
    RowBox[{"x", ",", 
     RowBox[{"xp", "[", "0", "]"}]}], "]"}], ",", 
   RowBox[{"K", "[", 
    RowBox[{"x", ",", 
     RowBox[{"xp", "[", "1", "]"}]}], "]"}]}], "}"}]], "Output",
 CellChangeTimes->{3.612565722240943*^9, 3.6126094054739475`*^9, 
  3.612609667885*^9, 3.6126160081573534`*^9}]
}, Open  ]],

Cell["We wish to find a new basis called the Newton basis", "Text",
 CellChangeTimes->{{3.612565731813307*^9, 3.6125657467292233`*^9}, {
  3.612565812553983*^9, 3.6125658183718505`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"v", "[", 
   RowBox[{"x_", ",", "k_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"Sum", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"c", "[", "l", "]"}], 
      RowBox[{"K", "[", 
       RowBox[{"x", ",", 
        RowBox[{"xp", "[", "l", "]"}]}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"l", ",", "0", ",", "k"}], "}"}]}], "]"}], "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"c", "[", "0", "]"}], "\[Rule]", " ", 
     FractionBox["1", 
      RowBox[{"K", "[", 
       RowBox[{
        RowBox[{"xp", "[", "0", "]"}], ",", 
        RowBox[{"xp", "[", "0", "]"}]}], "]"}]]}], "}"}]}]}]], "Input",
 CellChangeTimes->{{3.612474017957949*^9, 3.6124740669255037`*^9}, {
  3.6124742789979095`*^9, 3.6124742852030344`*^9}, {3.6124747176759195`*^9, 
  3.6124747627739005`*^9}, {3.612474836352545*^9, 3.612474836937934*^9}, {
  3.6125063428710613`*^9, 3.6125063435835357`*^9}, {3.612556118699576*^9, 
  3.6125561192689514`*^9}, {3.6126096884456687`*^9, 3.6126097185857058`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"v", "[", 
     RowBox[{"x", ",", "l"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"l", ",", "0", ",", "n"}], "}"}]}], "]"}], "//", 
  "TableForm"}]], "Input",
 CellChangeTimes->{{3.612474486891183*^9, 3.612474510223693*^9}, {
  3.6124745601759014`*^9, 3.612474562311322*^9}, {3.612474772422315*^9, 
  3.612474779510027*^9}, {3.612506315099806*^9, 3.6125063164667144`*^9}, {
  3.6125063842105446`*^9, 3.612506385029089*^9}, {3.6125658599307594`*^9, 
  3.6125658933289623`*^9}}],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      FractionBox[
       RowBox[{"K", "[", 
        RowBox[{"x", ",", 
         RowBox[{"xp", "[", "0", "]"}]}], "]"}], 
       RowBox[{"K", "[", 
        RowBox[{
         RowBox[{"xp", "[", "0", "]"}], ",", 
         RowBox[{"xp", "[", "0", "]"}]}], "]"}]]},
     {
      RowBox[{
       RowBox[{
        RowBox[{"c", "[", "1", "]"}], " ", 
        RowBox[{"K", "[", 
         RowBox[{"x", ",", 
          RowBox[{"xp", "[", "1", "]"}]}], "]"}]}], "+", 
       FractionBox[
        RowBox[{"K", "[", 
         RowBox[{"x", ",", 
          RowBox[{"xp", "[", "0", "]"}]}], "]"}], 
        RowBox[{"K", "[", 
         RowBox[{
          RowBox[{"xp", "[", "0", "]"}], ",", 
          RowBox[{"xp", "[", "0", "]"}]}], "]"}]]}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   Column],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.6124745118727884`*^9, 3.6124745635591507`*^9, 3.612474819941636*^9, 
   3.612474864653364*^9, 3.6124751551446285`*^9, 3.612475806441796*^9, 
   3.6124760349188643`*^9, {3.6125063613963785`*^9, 3.6125063869053364`*^9}, 
   3.612506866172241*^9, 3.612556140863308*^9, {3.6125658771482053`*^9, 
   3.6125658941385*^9}, 3.612609416379194*^9, 3.6126097309759417`*^9, 
   3.6126160121189904`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"exp1", "=", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"v", "[", 
        RowBox[{
         RowBox[{"xp", "[", "i", "]"}], ",", "j"}], "]"}], "\[Equal]", "0"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{"j", ",", "1", ",", "n"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "0", ",", 
        RowBox[{"j", "-", "1"}]}], "}"}]}], "]"}], "//", "Flatten"}]}], ";", 
  RowBox[{"exp1", "//", "TableForm"}]}]], "Input",
 CellChangeTimes->{{3.612474945120854*^9, 3.6124750214281406`*^9}, {
  3.612475063005782*^9, 3.6124750683383265`*^9}, {3.6124751145180264`*^9, 
  3.6124751765598555`*^9}, {3.612475323487533*^9, 3.612475344685988*^9}, {
  3.612506778662774*^9, 3.6125067797134724`*^9}, {3.612556159050398*^9, 
  3.612556174144432*^9}, {3.6125659860616117`*^9, 3.612566031501992*^9}}],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      RowBox[{
       RowBox[{"1", "+", 
        RowBox[{
         RowBox[{"c", "[", "1", "]"}], " ", 
         RowBox[{"K", "[", 
          RowBox[{
           RowBox[{"xp", "[", "0", "]"}], ",", 
           RowBox[{"xp", "[", "1", "]"}]}], "]"}]}]}], "\[Equal]", "0"}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   Column],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.6125660322124653`*^9, 3.6126094334253073`*^9, 
  3.612609761842462*^9, 3.612616016248731*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"exp2", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"v", "[", 
       RowBox[{
        RowBox[{"xp", "[", "j", "]"}], ",", "j"}], "]"}], "\[Equal]", "1"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "0", ",", "n"}], "}"}]}], "]"}]}], ";", 
  RowBox[{"exp2", "//", "TableForm"}]}]], "Input",
 CellChangeTimes->{{3.612475217263915*^9, 3.612475232164822*^9}, {
  3.6124753481572957`*^9, 3.6124753529424763`*^9}, {3.612506783230811*^9, 
  3.6125067840823765`*^9}, {3.6125563113980584`*^9, 3.6125563136255393`*^9}, {
  3.6125660180060205`*^9, 3.6125660406790943`*^9}}],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {"True"},
     {
      RowBox[{
       RowBox[{
        FractionBox[
         RowBox[{"K", "[", 
          RowBox[{
           RowBox[{"xp", "[", "1", "]"}], ",", 
           RowBox[{"xp", "[", "0", "]"}]}], "]"}], 
         RowBox[{"K", "[", 
          RowBox[{
           RowBox[{"xp", "[", "0", "]"}], ",", 
           RowBox[{"xp", "[", "0", "]"}]}], "]"}]], "+", 
        RowBox[{
         RowBox[{"c", "[", "1", "]"}], " ", 
         RowBox[{"K", "[", 
          RowBox[{
           RowBox[{"xp", "[", "1", "]"}], ",", 
           RowBox[{"xp", "[", "1", "]"}]}], "]"}]}]}], "\[Equal]", "1"}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   Column],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.6125660414546103`*^9, 3.61256612605285*^9, 
  3.612609441615753*^9, 3.612609775466519*^9, 3.6126160179778814`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Union", "[", 
   RowBox[{"exp1", ",", "exp2"}], "]"}], "//", "TableForm"}]], "Input",
 CellChangeTimes->{{3.612475363076213*^9, 3.612475369997814*^9}, {
  3.612566132831357*^9, 3.61256613516891*^9}}],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {"True"},
     {
      RowBox[{
       RowBox[{"1", "+", 
        RowBox[{
         RowBox[{"c", "[", "1", "]"}], " ", 
         RowBox[{"K", "[", 
          RowBox[{
           RowBox[{"xp", "[", "0", "]"}], ",", 
           RowBox[{"xp", "[", "1", "]"}]}], "]"}]}]}], "\[Equal]", "0"}]},
     {
      RowBox[{
       RowBox[{
        FractionBox[
         RowBox[{"K", "[", 
          RowBox[{
           RowBox[{"xp", "[", "1", "]"}], ",", 
           RowBox[{"xp", "[", "0", "]"}]}], "]"}], 
         RowBox[{"K", "[", 
          RowBox[{
           RowBox[{"xp", "[", "0", "]"}], ",", 
           RowBox[{"xp", "[", "0", "]"}]}], "]"}]], "+", 
        RowBox[{
         RowBox[{"c", "[", "1", "]"}], " ", 
         RowBox[{"K", "[", 
          RowBox[{
           RowBox[{"xp", "[", "1", "]"}], ",", 
           RowBox[{"xp", "[", "1", "]"}]}], "]"}]}]}], "\[Equal]", "1"}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   Column],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.6124753708083534`*^9, 3.6124758131502542`*^9, 
  3.6124760382250605`*^9, 3.6124790001609817`*^9, 3.6124792336741476`*^9, 
  3.612479349200963*^9, 3.6124794581523957`*^9, 3.612506832022247*^9, 
  3.612506879122833*^9, 3.612556333937027*^9, 3.6125661356542344`*^9, 
  3.612609462174423*^9, 3.61260979675878*^9, 3.612616022220701*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"sol1revised", "=", 
  RowBox[{"Reduce", "[", 
   RowBox[{"exp1", ",", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"c", "[", "j", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"j", ",", "0", ",", "n"}], "}"}]}], "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6126159620046697`*^9, 3.612615973866555*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"K", "[", 
    RowBox[{
     RowBox[{"xp", "[", "0", "]"}], ",", 
     RowBox[{"xp", "[", "1", "]"}]}], "]"}], "\[NotEqual]", "0"}], "&&", 
  RowBox[{
   RowBox[{"c", "[", "1", "]"}], "\[Equal]", 
   RowBox[{"-", 
    FractionBox["1", 
     RowBox[{"K", "[", 
      RowBox[{
       RowBox[{"xp", "[", "0", "]"}], ",", 
       RowBox[{"xp", "[", "1", "]"}]}], "]"}]]}]}]}]], "Output",
 CellChangeTimes->{3.6126159788408647`*^9, 3.612616028382832*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"sol1", "=", 
  RowBox[{"Reduce", "[", 
   RowBox[{
    RowBox[{"Union", "[", 
     RowBox[{"exp1", ",", "exp2"}], "]"}], ",", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"c", "[", "j", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"j", ",", "0", ",", "n"}], "}"}]}], "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.612475430299905*^9, 3.612475432525384*^9}, {
  3.6124754762204323`*^9, 3.6124754979548817`*^9}, {3.6124792399613266`*^9, 
  3.612479240543713*^9}, {3.6125068523687735`*^9, 3.612506852883116*^9}, {
  3.612508068922662*^9, 3.6125080700924397`*^9}, {3.612556344640093*^9, 
  3.6125563485186715`*^9}, {3.6125571167923985`*^9, 3.6125571274755*^9}, {
  3.6126094881096625`*^9, 3.6126094955145855`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"K", "[", 
      RowBox[{
       RowBox[{"xp", "[", "1", "]"}], ",", 
       RowBox[{"xp", "[", "0", "]"}]}], "]"}], "\[Equal]", "0"}], "&&", 
    RowBox[{
     RowBox[{"K", "[", 
      RowBox[{
       RowBox[{"xp", "[", "0", "]"}], ",", 
       RowBox[{"xp", "[", "1", "]"}]}], "]"}], "\[Equal]", 
     RowBox[{"-", 
      RowBox[{"K", "[", 
       RowBox[{
        RowBox[{"xp", "[", "1", "]"}], ",", 
        RowBox[{"xp", "[", "1", "]"}]}], "]"}]}]}], "&&", 
    RowBox[{
     RowBox[{"K", "[", 
      RowBox[{
       RowBox[{"xp", "[", "1", "]"}], ",", 
       RowBox[{"xp", "[", "1", "]"}]}], "]"}], "\[NotEqual]", "0"}], "&&", 
    RowBox[{
     RowBox[{"c", "[", "1", "]"}], "\[Equal]", 
     FractionBox["1", 
      RowBox[{"K", "[", 
       RowBox[{
        RowBox[{"xp", "[", "1", "]"}], ",", 
        RowBox[{"xp", "[", "1", "]"}]}], "]"}]]}], "&&", 
    RowBox[{
     RowBox[{"K", "[", 
      RowBox[{
       RowBox[{"xp", "[", "0", "]"}], ",", 
       RowBox[{"xp", "[", "0", "]"}]}], "]"}], "\[NotEqual]", "0"}]}], ")"}], 
  "||", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"K", "[", 
       RowBox[{
        RowBox[{"xp", "[", "0", "]"}], ",", 
        RowBox[{"xp", "[", "1", "]"}]}], "]"}], "+", 
      RowBox[{"K", "[", 
       RowBox[{
        RowBox[{"xp", "[", "1", "]"}], ",", 
        RowBox[{"xp", "[", "1", "]"}]}], "]"}]}], "\[NotEqual]", "0"}], "&&", 
    RowBox[{
     RowBox[{"K", "[", 
      RowBox[{
       RowBox[{"xp", "[", "0", "]"}], ",", 
       RowBox[{"xp", "[", "0", "]"}]}], "]"}], "\[Equal]", 
     FractionBox[
      RowBox[{
       RowBox[{"K", "[", 
        RowBox[{
         RowBox[{"xp", "[", "0", "]"}], ",", 
         RowBox[{"xp", "[", "1", "]"}]}], "]"}], " ", 
       RowBox[{"K", "[", 
        RowBox[{
         RowBox[{"xp", "[", "1", "]"}], ",", 
         RowBox[{"xp", "[", "0", "]"}]}], "]"}]}], 
      RowBox[{
       RowBox[{"K", "[", 
        RowBox[{
         RowBox[{"xp", "[", "0", "]"}], ",", 
         RowBox[{"xp", "[", "1", "]"}]}], "]"}], "+", 
       RowBox[{"K", "[", 
        RowBox[{
         RowBox[{"xp", "[", "1", "]"}], ",", 
         RowBox[{"xp", "[", "1", "]"}]}], "]"}]}]]}], "&&", 
    RowBox[{
     RowBox[{"K", "[", 
      RowBox[{
       RowBox[{"xp", "[", "0", "]"}], ",", 
       RowBox[{"xp", "[", "1", "]"}]}], "]"}], "\[NotEqual]", "0"}], "&&", 
    RowBox[{
     RowBox[{"c", "[", "1", "]"}], "\[Equal]", 
     RowBox[{"-", 
      FractionBox["1", 
       RowBox[{"K", "[", 
        RowBox[{
         RowBox[{"xp", "[", "0", "]"}], ",", 
         RowBox[{"xp", "[", "1", "]"}]}], "]"}]]}]}], "&&", 
    RowBox[{
     RowBox[{"K", "[", 
      RowBox[{
       RowBox[{"xp", "[", "1", "]"}], ",", 
       RowBox[{"xp", "[", "0", "]"}]}], "]"}], "\[NotEqual]", "0"}]}], 
   ")"}]}]], "Output",
 CellChangeTimes->{3.6126094886980543`*^9, 3.612609870043496*^9}]
}, Open  ]],

Cell["\<\
Now the kernel we are interested in is the Gaussian kernel which is never \
zero.\
\>", "Text",
 CellChangeTimes->{{3.6125661673142815`*^9, 3.612566203667637*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"sol2", "=", 
  RowBox[{"And", "@@", 
   RowBox[{"Flatten", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"K", "[", 
        RowBox[{
         RowBox[{"xp", "[", "i", "]"}], ",", 
         RowBox[{"xp", "[", "j", "]"}]}], "]"}], "\[NotEqual]", " ", "0"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "0", ",", "n"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"j", ",", "0", ",", "n"}], "}"}]}], "]"}], "]"}], " ", 
   RowBox[{"(*", 
    RowBox[{
    "we", " ", "impose", " ", "this", " ", "since", " ", "we", " ", "will", 
     " ", "use", " ", "Gaussians"}], "*)"}]}]}]], "Input",
 CellChangeTimes->{{3.6125078768701982`*^9, 3.61250804053679*^9}, {
  3.612508080028045*^9, 3.6125080817551937`*^9}, {3.612556366338518*^9, 
  3.6125563718241653`*^9}, {3.612557134889431*^9, 3.6125571530875273`*^9}, {
  3.6125662303543744`*^9, 3.61256623318826*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"K", "[", 
    RowBox[{
     RowBox[{"xp", "[", "0", "]"}], ",", 
     RowBox[{"xp", "[", "0", "]"}]}], "]"}], "\[NotEqual]", "0"}], "&&", 
  RowBox[{
   RowBox[{"K", "[", 
    RowBox[{
     RowBox[{"xp", "[", "0", "]"}], ",", 
     RowBox[{"xp", "[", "1", "]"}]}], "]"}], "\[NotEqual]", "0"}], "&&", 
  RowBox[{
   RowBox[{"K", "[", 
    RowBox[{
     RowBox[{"xp", "[", "1", "]"}], ",", 
     RowBox[{"xp", "[", "0", "]"}]}], "]"}], "\[NotEqual]", "0"}], "&&", 
  RowBox[{
   RowBox[{"K", "[", 
    RowBox[{
     RowBox[{"xp", "[", "1", "]"}], ",", 
     RowBox[{"xp", "[", "1", "]"}]}], "]"}], "\[NotEqual]", "0"}]}]], "Output",
 CellChangeTimes->{{3.61250797651623*^9, 3.612508005509506*^9}, 
   3.6125080408990345`*^9, 3.612508083374271*^9, 3.6125563844865828`*^9, 
   3.6125571617893333`*^9, 3.612566234501131*^9, 3.6126094805436325`*^9, 
   3.612609894968066*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Reduce", "[", 
  RowBox[{"sol1", "&&", "sol2"}], "]"}]], "Input",
 CellChangeTimes->{{3.6125080929806557`*^9, 3.612508122922561*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"K", "[", 
     RowBox[{
      RowBox[{"xp", "[", "0", "]"}], ",", 
      RowBox[{"xp", "[", "1", "]"}]}], "]"}], "+", 
    RowBox[{"K", "[", 
     RowBox[{
      RowBox[{"xp", "[", "1", "]"}], ",", 
      RowBox[{"xp", "[", "1", "]"}]}], "]"}]}], "\[NotEqual]", "0"}], "&&", 
  RowBox[{
   RowBox[{"K", "[", 
    RowBox[{
     RowBox[{"xp", "[", "0", "]"}], ",", 
     RowBox[{"xp", "[", "0", "]"}]}], "]"}], "\[Equal]", 
   FractionBox[
    RowBox[{
     RowBox[{"K", "[", 
      RowBox[{
       RowBox[{"xp", "[", "0", "]"}], ",", 
       RowBox[{"xp", "[", "1", "]"}]}], "]"}], " ", 
     RowBox[{"K", "[", 
      RowBox[{
       RowBox[{"xp", "[", "1", "]"}], ",", 
       RowBox[{"xp", "[", "0", "]"}]}], "]"}]}], 
    RowBox[{
     RowBox[{"K", "[", 
      RowBox[{
       RowBox[{"xp", "[", "0", "]"}], ",", 
       RowBox[{"xp", "[", "1", "]"}]}], "]"}], "+", 
     RowBox[{"K", "[", 
      RowBox[{
       RowBox[{"xp", "[", "1", "]"}], ",", 
       RowBox[{"xp", "[", "1", "]"}]}], "]"}]}]]}], "&&", 
  RowBox[{
   RowBox[{"K", "[", 
    RowBox[{
     RowBox[{"xp", "[", "0", "]"}], ",", 
     RowBox[{"xp", "[", "1", "]"}]}], "]"}], "\[NotEqual]", "0"}], "&&", 
  RowBox[{
   RowBox[{"c", "[", "1", "]"}], "\[Equal]", 
   RowBox[{"-", 
    FractionBox["1", 
     RowBox[{"K", "[", 
      RowBox[{
       RowBox[{"xp", "[", "0", "]"}], ",", 
       RowBox[{"xp", "[", "1", "]"}]}], "]"}]]}]}], "&&", 
  RowBox[{
   RowBox[{
    RowBox[{"K", "[", 
     RowBox[{
      RowBox[{"xp", "[", "1", "]"}], ",", 
      RowBox[{"xp", "[", "0", "]"}]}], "]"}], " ", 
    RowBox[{"K", "[", 
     RowBox[{
      RowBox[{"xp", "[", "1", "]"}], ",", 
      RowBox[{"xp", "[", "1", "]"}]}], "]"}]}], "\[NotEqual]", 
   "0"}]}]], "Output",
 CellChangeTimes->{{3.612508104246146*^9, 3.6125081238641863`*^9}, 
   3.6125563864769063`*^9, 3.6125571644630923`*^9, 3.612566244308651*^9, 
   3.6126094993771553`*^9, 3.6126099017946043`*^9}]
}, Open  ]],

Cell[TextData[{
 "So we have ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["c", "1"], "=", 
    RowBox[{"-", 
     FractionBox["1", 
      RowBox[{"K", "(", 
       RowBox[{
        SubscriptBox["x", "0"], ",", 
        SubscriptBox["x", "1"]}], ")"}]]}]}], TraditionalForm]],
  FormatType->"TraditionalForm"]
}], "Text",
 CellChangeTimes->{{3.6126791512358007`*^9, 3.6126791817650843`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{"n", "=", "2"}], TraditionalForm]],
 FormatType->"TraditionalForm"]], "Subsection",
 CellChangeTimes->{{3.6126095969390125`*^9, 3.612609598654152*^9}, {
  3.6126115942670135`*^9, 3.612611596087223*^9}}],

Cell[BoxData[
 RowBox[{"Clear", "[", 
  RowBox[{"v", ",", "n", ",", "k", ",", "K", ",", "u"}], "]"}]], "Input",
 CellChangeTimes->{{3.6124741960386515`*^9, 3.612474201449249*^9}, {
  3.612474840719448*^9, 3.612474841033656*^9}, {3.612506143408664*^9, 
  3.612506143646824*^9}, {3.612506176750831*^9, 3.6125061772811832`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"n", "=", "2"}], ";"}]], "Input",
 CellChangeTimes->{{3.612474173418613*^9, 3.6124741757031326`*^9}, {
  3.6124751515776644`*^9, 3.612475151793808*^9}, {3.612479211223221*^9, 
  3.6124792148066034`*^9}, {3.6124793391292686`*^9, 3.61247933940145*^9}, {
  3.612479450416253*^9, 3.6124794511377325`*^9}, {3.612506859837739*^9, 
  3.612506860052882*^9}, {3.612556193385225*^9, 3.6125561937044363`*^9}, {
  3.6125562323839507`*^9, 3.6125562333335824`*^9}, {3.6126093921630955`*^9, 
  3.6126093925033216`*^9}, {3.6126096500961742`*^9, 3.6126096502732916`*^9}, {
  3.6126116006265855`*^9, 3.612611600981822*^9}}],

Cell[TextData[{
 "We are given",
 Cell[BoxData[
  FormBox[Cell[""], TraditionalForm]]],
 " a set of points ",
 Cell[BoxData[
  FormBox["X", TraditionalForm]]]
}], "Text",
 CellChangeTimes->{{3.612565300518283*^9, 3.6125653025966654`*^9}, {
  3.612565339097931*^9, 3.6125653709521103`*^9}, {3.6125655681373377`*^9, 
  3.6125656430051203`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"X", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"xp", "[", "l", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"l", ",", "0", ",", "n"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6125656498288035`*^9, 3.612565671087937*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"xp", "[", "0", "]"}], ",", 
   RowBox[{"xp", "[", "1", "]"}], ",", 
   RowBox[{"xp", "[", "2", "]"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.6125656728060784`*^9, {3.6126093953752303`*^9, 3.6126094000733533`*^9}, {
   3.6126096584787474`*^9, 3.612609662343318*^9}, 3.6126116041689405`*^9, 
   3.612616070945095*^9, 3.6126166296809835`*^9, 3.61261672612372*^9, 
   3.612679445139453*^9}]
}, Open  ]],

Cell[TextData[{
 "We are given a kernel ",
 Cell[BoxData[
  FormBox[
   RowBox[{"K", Cell[""]}], TraditionalForm]]],
 "with which we can form a basis for interpolation"
}], "Text",
 CellChangeTimes->{{3.612565300518283*^9, 3.6125653025966654`*^9}, {
  3.612565339097931*^9, 3.6125653709521103`*^9}, {3.6125655681373377`*^9, 
  3.612565593581253*^9}, {3.6125656791042657`*^9, 3.6125656954591413`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"K", "[", 
    RowBox[{"x", ",", 
     RowBox[{"xp", "[", "l", "]"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"l", ",", "0", ",", "n"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6125657040648603`*^9, 3.612565721659557*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"K", "[", 
    RowBox[{"x", ",", 
     RowBox[{"xp", "[", "0", "]"}]}], "]"}], ",", 
   RowBox[{"K", "[", 
    RowBox[{"x", ",", 
     RowBox[{"xp", "[", "1", "]"}]}], "]"}], ",", 
   RowBox[{"K", "[", 
    RowBox[{"x", ",", 
     RowBox[{"xp", "[", "2", "]"}]}], "]"}]}], "}"}]], "Output",
 CellChangeTimes->{3.612565722240943*^9, 3.6126094054739475`*^9, 
  3.612609667885*^9, 3.6126116181402297`*^9, 3.6126160727262783`*^9, 
  3.6126166311889877`*^9, 3.612616727646729*^9, 3.6126794465023594`*^9}]
}, Open  ]],

Cell["We wish to find a new basis called the Newton basis", "Text",
 CellChangeTimes->{{3.612565731813307*^9, 3.6125657467292233`*^9}, {
  3.612565812553983*^9, 3.6125658183718505`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"v", "[", 
   RowBox[{"x_", ",", "k_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"Sum", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"c", "[", "l", "]"}], 
      RowBox[{"K", "[", 
       RowBox[{"x", ",", 
        RowBox[{"xp", "[", "l", "]"}]}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"l", ",", "0", ",", "k"}], "}"}]}], "]"}], "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"c", "[", "0", "]"}], "\[Rule]", " ", 
      FractionBox["1", 
       RowBox[{"K", "[", 
        RowBox[{
         RowBox[{"xp", "[", "0", "]"}], ",", 
         RowBox[{"xp", "[", "0", "]"}]}], "]"}]]}], ",", 
     RowBox[{
      RowBox[{"c", "[", "1", "]"}], "\[Rule]", " ", 
      RowBox[{"-", 
       FractionBox["1", 
        RowBox[{"K", "[", 
         RowBox[{
          RowBox[{"xp", "[", "0", "]"}], ",", 
          RowBox[{"xp", "[", "1", "]"}]}], "]"}]]}]}]}], "}"}]}]}]], "Input",
 CellChangeTimes->{{3.612474017957949*^9, 3.6124740669255037`*^9}, {
  3.6124742789979095`*^9, 3.6124742852030344`*^9}, {3.6124747176759195`*^9, 
  3.6124747627739005`*^9}, {3.612474836352545*^9, 3.612474836937934*^9}, {
  3.6125063428710613`*^9, 3.6125063435835357`*^9}, {3.612556118699576*^9, 
  3.6125561192689514`*^9}, {3.6126096884456687`*^9, 3.6126097185857058`*^9}, {
  3.6126116353296566`*^9, 3.6126116420821457`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"v", "[", 
     RowBox[{"x", ",", "l"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"l", ",", "0", ",", "n"}], "}"}]}], "]"}], "//", 
  "TableForm"}]], "Input",
 CellChangeTimes->{{3.612474486891183*^9, 3.612474510223693*^9}, {
  3.6124745601759014`*^9, 3.612474562311322*^9}, {3.612474772422315*^9, 
  3.612474779510027*^9}, {3.612506315099806*^9, 3.6125063164667144`*^9}, {
  3.6125063842105446`*^9, 3.612506385029089*^9}, {3.6125658599307594`*^9, 
  3.6125658933289623`*^9}}],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      FractionBox[
       RowBox[{"K", "[", 
        RowBox[{"x", ",", 
         RowBox[{"xp", "[", "0", "]"}]}], "]"}], 
       RowBox[{"K", "[", 
        RowBox[{
         RowBox[{"xp", "[", "0", "]"}], ",", 
         RowBox[{"xp", "[", "0", "]"}]}], "]"}]]},
     {
      RowBox[{
       FractionBox[
        RowBox[{"K", "[", 
         RowBox[{"x", ",", 
          RowBox[{"xp", "[", "0", "]"}]}], "]"}], 
        RowBox[{"K", "[", 
         RowBox[{
          RowBox[{"xp", "[", "0", "]"}], ",", 
          RowBox[{"xp", "[", "0", "]"}]}], "]"}]], "-", 
       FractionBox[
        RowBox[{"K", "[", 
         RowBox[{"x", ",", 
          RowBox[{"xp", "[", "1", "]"}]}], "]"}], 
        RowBox[{"K", "[", 
         RowBox[{
          RowBox[{"xp", "[", "0", "]"}], ",", 
          RowBox[{"xp", "[", "1", "]"}]}], "]"}]]}]},
     {
      RowBox[{
       RowBox[{
        RowBox[{"c", "[", "2", "]"}], " ", 
        RowBox[{"K", "[", 
         RowBox[{"x", ",", 
          RowBox[{"xp", "[", "2", "]"}]}], "]"}]}], "+", 
       FractionBox[
        RowBox[{"K", "[", 
         RowBox[{"x", ",", 
          RowBox[{"xp", "[", "0", "]"}]}], "]"}], 
        RowBox[{"K", "[", 
         RowBox[{
          RowBox[{"xp", "[", "0", "]"}], ",", 
          RowBox[{"xp", "[", "0", "]"}]}], "]"}]], "-", 
       FractionBox[
        RowBox[{"K", "[", 
         RowBox[{"x", ",", 
          RowBox[{"xp", "[", "1", "]"}]}], "]"}], 
        RowBox[{"K", "[", 
         RowBox[{
          RowBox[{"xp", "[", "0", "]"}], ",", 
          RowBox[{"xp", "[", "1", "]"}]}], "]"}]]}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   Column],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.6124745118727884`*^9, 3.6124745635591507`*^9, 3.612474819941636*^9, 
   3.612474864653364*^9, 3.6124751551446285`*^9, 3.612475806441796*^9, 
   3.6124760349188643`*^9, {3.6125063613963785`*^9, 3.6125063869053364`*^9}, 
   3.612506866172241*^9, 3.612556140863308*^9, {3.6125658771482053`*^9, 
   3.6125658941385*^9}, 3.612609416379194*^9, 3.6126097309759417`*^9, 
   3.612611656427681*^9, 3.612616083376359*^9, 3.61261663559992*^9, 
   3.61261673352964*^9, 3.6126794579319506`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"exp1", "=", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"v", "[", 
        RowBox[{
         RowBox[{"xp", "[", "i", "]"}], ",", "j"}], "]"}], "\[Equal]", "0"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{"j", ",", "1", ",", "n"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "0", ",", 
        RowBox[{"j", "-", "1"}]}], "}"}]}], "]"}], "//", "Flatten"}]}], ";", 
  RowBox[{"exp1", "//", "TableForm"}]}]], "Input",
 CellChangeTimes->{{3.612474945120854*^9, 3.6124750214281406`*^9}, {
  3.612475063005782*^9, 3.6124750683383265`*^9}, {3.6124751145180264`*^9, 
  3.6124751765598555`*^9}, {3.612475323487533*^9, 3.612475344685988*^9}, {
  3.612506778662774*^9, 3.6125067797134724`*^9}, {3.612556159050398*^9, 
  3.612556174144432*^9}, {3.6125659860616117`*^9, 3.612566031501992*^9}}],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {"True"},
     {
      RowBox[{
       RowBox[{
        RowBox[{"c", "[", "2", "]"}], " ", 
        RowBox[{"K", "[", 
         RowBox[{
          RowBox[{"xp", "[", "0", "]"}], ",", 
          RowBox[{"xp", "[", "2", "]"}]}], "]"}]}], "\[Equal]", "0"}]},
     {
      RowBox[{
       RowBox[{
        FractionBox[
         RowBox[{"K", "[", 
          RowBox[{
           RowBox[{"xp", "[", "1", "]"}], ",", 
           RowBox[{"xp", "[", "0", "]"}]}], "]"}], 
         RowBox[{"K", "[", 
          RowBox[{
           RowBox[{"xp", "[", "0", "]"}], ",", 
           RowBox[{"xp", "[", "0", "]"}]}], "]"}]], "-", 
        FractionBox[
         RowBox[{"K", "[", 
          RowBox[{
           RowBox[{"xp", "[", "1", "]"}], ",", 
           RowBox[{"xp", "[", "1", "]"}]}], "]"}], 
         RowBox[{"K", "[", 
          RowBox[{
           RowBox[{"xp", "[", "0", "]"}], ",", 
           RowBox[{"xp", "[", "1", "]"}]}], "]"}]], "+", 
        RowBox[{
         RowBox[{"c", "[", "2", "]"}], " ", 
         RowBox[{"K", "[", 
          RowBox[{
           RowBox[{"xp", "[", "1", "]"}], ",", 
           RowBox[{"xp", "[", "2", "]"}]}], "]"}]}]}], "\[Equal]", "0"}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   Column],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.6125660322124653`*^9, 3.6126094334253073`*^9, 
  3.612609761842462*^9, 3.6126116818155622`*^9, 3.6126166388871036`*^9, 
  3.6126167362464476`*^9, 3.6126794618275375`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"exp2", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"v", "[", 
       RowBox[{
        RowBox[{"xp", "[", "j", "]"}], ",", "j"}], "]"}], "\[Equal]", "1"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "0", ",", "n"}], "}"}]}], "]"}]}], ";", 
  RowBox[{"exp2", "//", "TableForm"}]}]], "Input",
 CellChangeTimes->{{3.612475217263915*^9, 3.612475232164822*^9}, {
  3.6124753481572957`*^9, 3.6124753529424763`*^9}, {3.612506783230811*^9, 
  3.6125067840823765`*^9}, {3.6125563113980584`*^9, 3.6125563136255393`*^9}, {
  3.6125660180060205`*^9, 3.6125660406790943`*^9}}],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {"True"},
     {
      RowBox[{
       RowBox[{
        FractionBox[
         RowBox[{"K", "[", 
          RowBox[{
           RowBox[{"xp", "[", "1", "]"}], ",", 
           RowBox[{"xp", "[", "0", "]"}]}], "]"}], 
         RowBox[{"K", "[", 
          RowBox[{
           RowBox[{"xp", "[", "0", "]"}], ",", 
           RowBox[{"xp", "[", "0", "]"}]}], "]"}]], "-", 
        FractionBox[
         RowBox[{"K", "[", 
          RowBox[{
           RowBox[{"xp", "[", "1", "]"}], ",", 
           RowBox[{"xp", "[", "1", "]"}]}], "]"}], 
         RowBox[{"K", "[", 
          RowBox[{
           RowBox[{"xp", "[", "0", "]"}], ",", 
           RowBox[{"xp", "[", "1", "]"}]}], "]"}]]}], "\[Equal]", "1"}]},
     {
      RowBox[{
       RowBox[{
        FractionBox[
         RowBox[{"K", "[", 
          RowBox[{
           RowBox[{"xp", "[", "2", "]"}], ",", 
           RowBox[{"xp", "[", "0", "]"}]}], "]"}], 
         RowBox[{"K", "[", 
          RowBox[{
           RowBox[{"xp", "[", "0", "]"}], ",", 
           RowBox[{"xp", "[", "0", "]"}]}], "]"}]], "-", 
        FractionBox[
         RowBox[{"K", "[", 
          RowBox[{
           RowBox[{"xp", "[", "2", "]"}], ",", 
           RowBox[{"xp", "[", "1", "]"}]}], "]"}], 
         RowBox[{"K", "[", 
          RowBox[{
           RowBox[{"xp", "[", "0", "]"}], ",", 
           RowBox[{"xp", "[", "1", "]"}]}], "]"}]], "+", 
        RowBox[{
         RowBox[{"c", "[", "2", "]"}], " ", 
         RowBox[{"K", "[", 
          RowBox[{
           RowBox[{"xp", "[", "2", "]"}], ",", 
           RowBox[{"xp", "[", "2", "]"}]}], "]"}]}]}], "\[Equal]", "1"}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   Column],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.6125660414546103`*^9, 3.61256612605285*^9, 
  3.612609441615753*^9, 3.612609775466519*^9, 3.6126117596032734`*^9, 
  3.612616642290366*^9, 3.612616742404542*^9, 3.6126794649776306`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Union", "[", 
   RowBox[{"exp1", ",", "exp2"}], "]"}], "//", "TableForm"}]], "Input",
 CellChangeTimes->{{3.612475363076213*^9, 3.612475369997814*^9}, {
  3.612566132831357*^9, 3.61256613516891*^9}}],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {"True"},
     {
      RowBox[{
       RowBox[{
        RowBox[{"c", "[", "2", "]"}], " ", 
        RowBox[{"K", "[", 
         RowBox[{
          RowBox[{"xp", "[", "0", "]"}], ",", 
          RowBox[{"xp", "[", "2", "]"}]}], "]"}]}], "\[Equal]", "0"}]},
     {
      RowBox[{
       RowBox[{
        FractionBox[
         RowBox[{"K", "[", 
          RowBox[{
           RowBox[{"xp", "[", "1", "]"}], ",", 
           RowBox[{"xp", "[", "0", "]"}]}], "]"}], 
         RowBox[{"K", "[", 
          RowBox[{
           RowBox[{"xp", "[", "0", "]"}], ",", 
           RowBox[{"xp", "[", "0", "]"}]}], "]"}]], "-", 
        FractionBox[
         RowBox[{"K", "[", 
          RowBox[{
           RowBox[{"xp", "[", "1", "]"}], ",", 
           RowBox[{"xp", "[", "1", "]"}]}], "]"}], 
         RowBox[{"K", "[", 
          RowBox[{
           RowBox[{"xp", "[", "0", "]"}], ",", 
           RowBox[{"xp", "[", "1", "]"}]}], "]"}]]}], "\[Equal]", "1"}]},
     {
      RowBox[{
       RowBox[{
        FractionBox[
         RowBox[{"K", "[", 
          RowBox[{
           RowBox[{"xp", "[", "1", "]"}], ",", 
           RowBox[{"xp", "[", "0", "]"}]}], "]"}], 
         RowBox[{"K", "[", 
          RowBox[{
           RowBox[{"xp", "[", "0", "]"}], ",", 
           RowBox[{"xp", "[", "0", "]"}]}], "]"}]], "-", 
        FractionBox[
         RowBox[{"K", "[", 
          RowBox[{
           RowBox[{"xp", "[", "1", "]"}], ",", 
           RowBox[{"xp", "[", "1", "]"}]}], "]"}], 
         RowBox[{"K", "[", 
          RowBox[{
           RowBox[{"xp", "[", "0", "]"}], ",", 
           RowBox[{"xp", "[", "1", "]"}]}], "]"}]], "+", 
        RowBox[{
         RowBox[{"c", "[", "2", "]"}], " ", 
         RowBox[{"K", "[", 
          RowBox[{
           RowBox[{"xp", "[", "1", "]"}], ",", 
           RowBox[{"xp", "[", "2", "]"}]}], "]"}]}]}], "\[Equal]", "0"}]},
     {
      RowBox[{
       RowBox[{
        FractionBox[
         RowBox[{"K", "[", 
          RowBox[{
           RowBox[{"xp", "[", "2", "]"}], ",", 
           RowBox[{"xp", "[", "0", "]"}]}], "]"}], 
         RowBox[{"K", "[", 
          RowBox[{
           RowBox[{"xp", "[", "0", "]"}], ",", 
           RowBox[{"xp", "[", "0", "]"}]}], "]"}]], "-", 
        FractionBox[
         RowBox[{"K", "[", 
          RowBox[{
           RowBox[{"xp", "[", "2", "]"}], ",", 
           RowBox[{"xp", "[", "1", "]"}]}], "]"}], 
         RowBox[{"K", "[", 
          RowBox[{
           RowBox[{"xp", "[", "0", "]"}], ",", 
           RowBox[{"xp", "[", "1", "]"}]}], "]"}]], "+", 
        RowBox[{
         RowBox[{"c", "[", "2", "]"}], " ", 
         RowBox[{"K", "[", 
          RowBox[{
           RowBox[{"xp", "[", "2", "]"}], ",", 
           RowBox[{"xp", "[", "2", "]"}]}], "]"}]}]}], "\[Equal]", "1"}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   Column],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.6124753708083534`*^9, 3.6124758131502542`*^9, 
  3.6124760382250605`*^9, 3.6124790001609817`*^9, 3.6124792336741476`*^9, 
  3.612479349200963*^9, 3.6124794581523957`*^9, 3.612506832022247*^9, 
  3.612506879122833*^9, 3.612556333937027*^9, 3.6125661356542344`*^9, 
  3.612609462174423*^9, 3.61260979675878*^9, 3.612611777349803*^9, 
  3.6126166441195846`*^9, 3.6126167503097973`*^9, 3.6126794664355993`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"sol1", "=", 
    RowBox[{"Reduce", "[", 
     RowBox[{
      RowBox[{"Union", "[", 
       RowBox[{"exp1", ",", "exp2"}], "]"}], ",", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"c", "[", "j", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", "0", ",", "n"}], "}"}]}], "]"}]}], "]"}]}], ";"}], 
  RowBox[{"(*", " ", 
   RowBox[{"a", " ", "mess"}], " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.612475430299905*^9, 3.612475432525384*^9}, {
   3.6124754762204323`*^9, 3.6124754979548817`*^9}, {3.6124792399613266`*^9, 
   3.612479240543713*^9}, {3.6125068523687735`*^9, 3.612506852883116*^9}, {
   3.612508068922662*^9, 3.6125080700924397`*^9}, {3.612556344640093*^9, 
   3.6125563485186715`*^9}, {3.6125571167923985`*^9, 3.6125571274755*^9}, {
   3.6126094881096625`*^9, 3.6126094955145855`*^9}, {3.612611805863761*^9, 
   3.612611810043539*^9}, 3.612612607008027*^9}],

Cell["\<\
If the kernel we are interested in is the Gaussian kernel which is positive \
and therefore never zero then it seems likely that there is no solution.\
\>", "Text",
 CellChangeTimes->{{3.6125661673142815`*^9, 3.612566203667637*^9}, {
  3.6126126218108892`*^9, 3.612612687292488*^9}, {3.6126792845414534`*^9, 
  3.612679300233878*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"sol2", "=", 
  RowBox[{"And", "@@", 
   RowBox[{"Flatten", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"K", "[", 
        RowBox[{
         RowBox[{"xp", "[", "i", "]"}], ",", 
         RowBox[{"xp", "[", "j", "]"}]}], "]"}], "\[NotEqual]", " ", "0"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "0", ",", "n"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"j", ",", "0", ",", "n"}], "}"}]}], "]"}], "]"}], " ", 
   RowBox[{"(*", 
    RowBox[{
    "we", " ", "impose", " ", "this", " ", "since", " ", "we", " ", "will", 
     " ", "use", " ", "Gaussians"}], "*)"}]}]}]], "Input",
 CellChangeTimes->{{3.6125078768701982`*^9, 3.61250804053679*^9}, {
  3.612508080028045*^9, 3.6125080817551937`*^9}, {3.612556366338518*^9, 
  3.6125563718241653`*^9}, {3.612557134889431*^9, 3.6125571530875273`*^9}, {
  3.6125662303543744`*^9, 3.61256623318826*^9}, {3.612616846858971*^9, 
  3.612616847808605*^9}, {3.6126794918104563`*^9, 3.6126794936056485`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"K", "[", 
    RowBox[{
     RowBox[{"xp", "[", "0", "]"}], ",", 
     RowBox[{"xp", "[", "0", "]"}]}], "]"}], "\[NotEqual]", "0"}], "&&", 
  RowBox[{
   RowBox[{"K", "[", 
    RowBox[{
     RowBox[{"xp", "[", "0", "]"}], ",", 
     RowBox[{"xp", "[", "1", "]"}]}], "]"}], "\[NotEqual]", "0"}], "&&", 
  RowBox[{
   RowBox[{"K", "[", 
    RowBox[{
     RowBox[{"xp", "[", "0", "]"}], ",", 
     RowBox[{"xp", "[", "2", "]"}]}], "]"}], "\[NotEqual]", "0"}], "&&", 
  RowBox[{
   RowBox[{"K", "[", 
    RowBox[{
     RowBox[{"xp", "[", "1", "]"}], ",", 
     RowBox[{"xp", "[", "0", "]"}]}], "]"}], "\[NotEqual]", "0"}], "&&", 
  RowBox[{
   RowBox[{"K", "[", 
    RowBox[{
     RowBox[{"xp", "[", "1", "]"}], ",", 
     RowBox[{"xp", "[", "1", "]"}]}], "]"}], "\[NotEqual]", "0"}], "&&", 
  RowBox[{
   RowBox[{"K", "[", 
    RowBox[{
     RowBox[{"xp", "[", "1", "]"}], ",", 
     RowBox[{"xp", "[", "2", "]"}]}], "]"}], "\[NotEqual]", "0"}], "&&", 
  RowBox[{
   RowBox[{"K", "[", 
    RowBox[{
     RowBox[{"xp", "[", "2", "]"}], ",", 
     RowBox[{"xp", "[", "0", "]"}]}], "]"}], "\[NotEqual]", "0"}], "&&", 
  RowBox[{
   RowBox[{"K", "[", 
    RowBox[{
     RowBox[{"xp", "[", "2", "]"}], ",", 
     RowBox[{"xp", "[", "1", "]"}]}], "]"}], "\[NotEqual]", "0"}], "&&", 
  RowBox[{
   RowBox[{"K", "[", 
    RowBox[{
     RowBox[{"xp", "[", "2", "]"}], ",", 
     RowBox[{"xp", "[", "2", "]"}]}], "]"}], "\[NotEqual]", "0"}]}]], "Output",
 CellChangeTimes->{
  3.612679373637642*^9, {3.6126794737824807`*^9, 3.6126794950145845`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Reduce", "[", 
  RowBox[{"sol1", "&&", "sol2"}], "]"}]], "Input",
 CellChangeTimes->{{3.6125080929806557`*^9, 3.612508122922561*^9}}],

Cell[BoxData["False"], "Output",
 CellChangeTimes->{3.612679527534189*^9}]
}, Open  ]],

Cell["\<\
As we expected. Actually, you can see what the problem is just by inspection. \
This system is overdetermined. If we relax requirements and allow for compact \
support or remove some of the requirements we have imposed then perhaps we \
can find a solution but I am still skeptical.\
\>", "Text",
 CellChangeTimes->{{3.612612709952551*^9, 3.6126127340405846`*^9}, {
  3.612612936326325*^9, 3.61261294998741*^9}, {3.6126795320541925`*^9, 
  3.6126795916788087`*^9}, {3.612681209566062*^9, 3.612681224167903*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Newtonized Gaussian Kernel basis (Schaback 2011 Paper)\
\>", "Section",
 CellChangeTimes->{{3.6125668631434126`*^9, 3.6125668712237835`*^9}}],

Cell["\<\
This time we follow the procedure for creating a basis in the 2011 paper. We \
will first do four iterations of a data set with 10 points so that we can see \
the process at work. Then we will create a function which does the same thing.\
\>", "Text",
 CellChangeTimes->{{3.6126763775074244`*^9, 3.6126764502877755`*^9}}],

Cell[TextData[{
 "Note we use the notation of the 2008 paper in which the first point is ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["x", "1"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "."
}], "Text",
 CellChangeTimes->{{3.6126787637129164`*^9, 3.612678813286844*^9}}],

Cell[CellGroupData[{

Cell["Some practice calculations", "Subsection",
 CellChangeTimes->{{3.612676461547256*^9, 3.612676479472176*^9}}],

Cell[TextData[{
 "We advise rerunning the code in this section carefully. In particular, don\
\[CloseCurlyQuote]t re-run the definition of ",
 Cell[BoxData[
  FormBox["X", TraditionalForm]],
  FormatType->"TraditionalForm"],
 " and generate a new set of random points."
}], "Text",
 CellChangeTimes->{{3.612677337344101*^9, 3.6126773848766727`*^9}}],

Cell[BoxData[
 RowBox[{"Clear", "[", 
  RowBox[{
  "v", ",", "n", ",", "k", ",", "K", ",", "Nt", ",", "u", ",", "x", ",", 
   "X"}], "]"}]], "Input",
 CellChangeTimes->{{3.6124741960386515`*^9, 3.612474201449249*^9}, {
  3.612474840719448*^9, 3.612474841033656*^9}, {3.612506143408664*^9, 
  3.612506143646824*^9}, {3.612506176750831*^9, 3.6125061772811832`*^9}, {
  3.6125675869996233`*^9, 3.61256758839255*^9}, {3.6126327154021597`*^9, 
  3.612632716253726*^9}, {3.612634052451976*^9, 3.6126340528952703`*^9}}],

Cell[TextData[{
 "We are given a kernel ",
 Cell[BoxData[
  FormBox[
   RowBox[{"K", Cell[""]}], TraditionalForm]]],
 "."
}], "Text",
 CellChangeTimes->{{3.612676545861181*^9, 3.6126765593011312`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"K", "[", 
   RowBox[{"x_", ",", "y_"}], "]"}], ":=", 
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{"-", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"x", "-", "y"}], ")"}], "2"]}]]}]], "Input",
 CellChangeTimes->{{3.6124757756903524`*^9, 3.612475800854081*^9}, {
  3.6124760203271627`*^9, 3.6124760284565673`*^9}, {3.612477252868359*^9, 
  3.612477257782626*^9}, {3.6125063363297133`*^9, 3.6125063370241747`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"n", "=", "10"}], ";"}]], "Input",
 CellChangeTimes->{{3.612474173418613*^9, 3.6124741757031326`*^9}, {
  3.6124751515776644`*^9, 3.612475151793808*^9}, {3.612479211223221*^9, 
  3.6124792148066034`*^9}, {3.6124793391292686`*^9, 3.61247933940145*^9}, {
  3.612479450416253*^9, 3.6124794511377325`*^9}, {3.612506859837739*^9, 
  3.612506860052882*^9}, {3.612556193385225*^9, 3.6125561937044363`*^9}, {
  3.6125562323839507`*^9, 3.6125562333335824`*^9}, {3.612567023982095*^9, 
  3.612567024297303*^9}, {3.612631754279673*^9, 3.612631754422768*^9}, {
  3.6126318372788515`*^9, 3.6126318376631064`*^9}}],

Cell[TextData[{
 "We are given",
 Cell[BoxData[
  FormBox[Cell[""], TraditionalForm]]],
 " a set of  ",
 Cell[BoxData[
  FormBox["n", TraditionalForm]],
  FormatType->"TraditionalForm"],
 " points ",
 Cell[BoxData[
  FormBox["X", TraditionalForm]]]
}], "Text",
 CellChangeTimes->{{3.612565300518283*^9, 3.6125653025966654`*^9}, {
  3.612565339097931*^9, 3.6125653709521103`*^9}, {3.6125655681373377`*^9, 
  3.6125656430051203`*^9}, {3.612676565464224*^9, 3.61267656779976*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"X", "=", 
    RowBox[{"Sort", "[", 
     RowBox[{"RandomReal", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "1"}], "}"}], ",", "n"}], "]"}], "]"}]}], "*)"}], 
  "  ", 
  RowBox[{"(*", " ", 
   RowBox[{
   "this", " ", "is", " ", "how", " ", "we", " ", "created", " ", "the", " ", 
    "list", " ", "but", " ", "we", " ", "leave", " ", "it", " ", "fixed", " ",
     "now"}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.6125656498288035`*^9, 3.612565671087937*^9}, {
   3.6125670277626066`*^9, 3.612567027955735*^9}, {3.6125675216882033`*^9, 
   3.6125675373306046`*^9}, {3.6125675934969435`*^9, 3.612567594250445*^9}, {
   3.612631760082531*^9, 3.612631845392245*^9}, 3.6126473215737033`*^9, {
   3.6126762474410934`*^9, 3.6126762835210633`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"X", "=", 
   RowBox[{"{", 
    RowBox[{
    "0.010751868788584362`", ",", "0.03334836660416385`", ",", 
     "0.05614908871468738`", ",", "0.09820795361143042`", ",", 
     "0.1933411720333036`", ",", "0.2561805393968408`", ",", 
     "0.5155414010088102`", ",", "0.7366490068724552`", ",", 
     "0.8370847087665922`", ",", "0.9607561192208478`"}], "}"}]}], ";"}]], \
"Input",
 CellChangeTimes->{{3.6126762868192573`*^9, 3.612676291098096*^9}}],

Cell[TextData[{
 "W",
 Cell[BoxData[
  FormBox[Cell[""], TraditionalForm]]],
 "e can form the standard basis for interpolation using ",
 Cell[BoxData[
  FormBox["K", TraditionalForm]],
  FormatType->"TraditionalForm"]
}], "Text",
 CellChangeTimes->{{3.612565300518283*^9, 3.6125653025966654`*^9}, {
  3.612565339097931*^9, 3.6125653709521103`*^9}, {3.6125655681373377`*^9, 
  3.612565593581253*^9}, {3.6125656791042657`*^9, 3.6125656954591413`*^9}, {
  3.6126765743661184`*^9, 3.6126765917966995`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"K", "[", 
    RowBox[{"x", ",", 
     RowBox[{"X", "[", 
      RowBox[{"[", "l", "]"}], "]"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"l", ",", "1", ",", "n"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6125657040648603`*^9, 3.612565721659557*^9}, {
  3.6125670410264244`*^9, 3.612567041255577*^9}, {3.6125675657645073`*^9, 
  3.6125675682451563`*^9}, {3.6126324237597413`*^9, 3.612632426778983*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "0.010751868788584362`"}], "+", "x"}], ")"}], "2"]}]], 
   ",", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "0.03334836660416385`"}], "+", "x"}], ")"}], "2"]}]], 
   ",", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "0.05614908871468738`"}], "+", "x"}], ")"}], "2"]}]], 
   ",", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "0.09820795361143042`"}], "+", "x"}], ")"}], "2"]}]], 
   ",", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "0.1933411720333036`"}], "+", "x"}], ")"}], "2"]}]], ",", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "0.2561805393968408`"}], "+", "x"}], ")"}], "2"]}]], ",", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "0.5155414010088102`"}], "+", "x"}], ")"}], "2"]}]], ",", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "0.7366490068724552`"}], "+", "x"}], ")"}], "2"]}]], ",", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "0.8370847087665922`"}], "+", "x"}], ")"}], "2"]}]], ",", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "0.9607561192208478`"}], "+", "x"}], ")"}], "2"]}]]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.612565722240943*^9, 3.6125670099477634`*^9, 3.6125670442225533`*^9, 
   3.612567189124261*^9, 3.61256757474648*^9, 3.612567607803455*^9, 
   3.612631029843772*^9, {3.612632407776119*^9, 3.612632427849695*^9}, 
   3.612632722010553*^9, 3.6126442320336113`*^9, 3.6126452340337567`*^9, 
   3.6126472964690247`*^9, 3.612647329841195*^9, 3.6126480301863456`*^9, 
   3.6126508731549835`*^9, 3.61265137464273*^9}]
}, Open  ]],

Cell["\<\
We wish to find a new basis called the Newton basis. With the Gaussian kernel \
our first Newton basis will be the same as the the first kernel basis.\
\>", "Text",
 CellChangeTimes->{{3.612565731813307*^9, 3.6125657467292233`*^9}, {
   3.612565812553983*^9, 3.6125658183718505`*^9}, 3.612676310897251*^9, {
   3.612676612988778*^9, 3.612676653967021*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"Max", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"K", "[", 
       RowBox[{
        RowBox[{"X", "[", 
         RowBox[{"[", "i", "]"}], "]"}], ",", 
        RowBox[{"X", "[", 
         RowBox[{"[", "i", "]"}], "]"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}], "]"}], ",", 
   RowBox[{"First", "[", 
    RowBox[{"Position", "[", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"K", "[", 
         RowBox[{
          RowBox[{"X", "[", 
           RowBox[{"[", "i", "]"}], "]"}], ",", 
          RowBox[{"X", "[", 
           RowBox[{"[", "i", "]"}], "]"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}], ",", 
      RowBox[{"Max", "[", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"K", "[", 
          RowBox[{
           RowBox[{"X", "[", 
            RowBox[{"[", "i", "]"}], "]"}], ",", 
           RowBox[{"X", "[", 
            RowBox[{"[", "i", "]"}], "]"}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}], "]"}]}], "]"}], 
    "]"}]}], "}"}]], "Input",
 CellChangeTimes->{{3.61263096790545*^9, 3.6126310182870893`*^9}, {
  3.612633711337276*^9, 3.612633750634401*^9}, {3.612633793930184*^9, 
  3.612633852891381*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"1.`", ",", 
    RowBox[{"{", "1", "}"}]}], "}"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
   "since", " ", "they", " ", "are", " ", "all", " ", "the", " ", "same", " ",
     "1", " ", "we", " ", "take", " ", "the", " ", "first", " ", "one", " ", 
    "as", " ", "our", " ", "max"}], " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.6126766592665415`*^9, 3.612676706489893*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Nt", "[", 
   RowBox[{"1", ",", "x_"}], "]"}], ":=", 
  FractionBox[
   RowBox[{"K", "[", 
    RowBox[{"x", ",", 
     RowBox[{"X", "[", 
      RowBox[{"[", "1", "]"}], "]"}]}], "]"}], 
   SqrtBox[
    RowBox[{"K", "[", 
     RowBox[{
      RowBox[{"X", "[", 
       RowBox[{"[", "1", "]"}], "]"}], ",", 
      RowBox[{"X", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], "]"}]]]}]], "Input",
 CellChangeTimes->{{3.6125670853879185`*^9, 3.6125671310716677`*^9}, {
   3.612567193246003*^9, 3.612567196857402*^9}, {3.6125676287473783`*^9, 
   3.6125676718432713`*^9}, 3.6126314482426677`*^9, {3.612632498620743*^9, 
   3.6126325133565397`*^9}, 3.6126327320102005`*^9, {3.6126466281930733`*^9, 
   3.612646642807784*^9}, {3.612646693981781*^9, 3.61264669435703*^9}, {
   3.612647394246086*^9, 3.6126474043968296`*^9}, {3.6126503307695827`*^9, 
   3.6126503336514983`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"K", "[", 
       RowBox[{"#", ",", "#"}], "]"}], "-", 
      RowBox[{
       UnderoverscriptBox["\[Sum]", 
        RowBox[{"j", "=", "1"}], "1"], 
       SuperscriptBox[
        RowBox[{"Nt", "[", 
         RowBox[{"j", ",", "#"}], "]"}], "2"]}]}], ")"}], "&"}], "/@", " ", 
   "X"}], "//", "N"}]], "Input",
 CellChangeTimes->{{3.6125673692107515`*^9, 3.612567433334382*^9}, {
   3.612567723063323*^9, 3.6125677262294273`*^9}, {3.6126312942070904`*^9, 
   3.612631331517896*^9}, {3.61263140776476*^9, 3.612631409894174*^9}, {
   3.6126314567273097`*^9, 3.61263151388931*^9}, {3.6126316956549435`*^9, 
   3.612631699312374*^9}, {3.6126319011957436`*^9, 3.612631905076322*^9}, {
   3.61263231560484*^9, 3.6126323661104155`*^9}, {3.612632588942789*^9, 
   3.612632608488083*^9}, {3.6126326635346785`*^9, 3.6126326663555536`*^9}, 
   3.6126327002030554`*^9, {3.612632896195943*^9, 3.612632899977457*^9}, {
   3.612645259377595*^9, 3.6126452605513735`*^9}, {3.612650341677829*^9, 
   3.6126503439943686`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.`", ",", "0.0010206821762887008`", ",", "0.004113332133106384`", ",", 
   "0.015180726717209936`", ",", "0.06450334351854037`", ",", 
   "0.11349672991283632`", ",", "0.39927915928439495`", ",", 
   "0.6514080749676818`", ",", "0.7447857587640105`", ",", 
   "0.835528199939974`"}], "}"}]], "Output",
 CellChangeTimes->{
  3.612632562235035*^9, 3.612632610162196*^9, {3.6126326601114025`*^9, 
   3.612632667350215*^9}, 3.6126327018811736`*^9, 3.61263274984906*^9, 
   3.612632901183258*^9, 3.612644243924819*^9, {3.612645250862941*^9, 
   3.612645261300873*^9}, 3.612646660104273*^9, 3.6126466970197983`*^9, 
   3.6126474092800727`*^9, 3.6126480589044237`*^9, 3.612650346509042*^9, 
   3.612650890400442*^9, 3.612651382534975*^9}]
}, Open  ]],

Cell["\<\
Note that the maximum now occurs in position 10.\
\>", "Text",
 CellChangeTimes->{{3.6126767707166653`*^9, 3.6126767944474306`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"Max", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"K", "[", 
          RowBox[{"#", ",", "#"}], "]"}], "-", 
         RowBox[{
          UnderoverscriptBox["\[Sum]", 
           RowBox[{"j", "=", "1"}], "1"], 
          SuperscriptBox[
           RowBox[{"Nt", "[", 
            RowBox[{"j", ",", "#"}], "]"}], "2"]}]}], ")"}], "&"}], "/@", " ",
       "X"}], "//", "N"}], "]"}], ",", 
   RowBox[{"First", "[", 
    RowBox[{"Position", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"K", "[", 
            RowBox[{"#", ",", "#"}], "]"}], "-", 
           RowBox[{
            UnderoverscriptBox["\[Sum]", 
             RowBox[{"j", "=", "1"}], "1"], 
            SuperscriptBox[
             RowBox[{"Nt", "[", 
              RowBox[{"j", ",", "#"}], "]"}], "2"]}]}], ")"}], "&"}], "/@", 
        " ", "X"}], "//", "N"}], ",", 
      RowBox[{"Max", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"K", "[", 
             RowBox[{"#", ",", "#"}], "]"}], "-", 
            RowBox[{
             UnderoverscriptBox["\[Sum]", 
              RowBox[{"j", "=", "1"}], "1"], 
             SuperscriptBox[
              RowBox[{"Nt", "[", 
               RowBox[{"j", ",", "#"}], "]"}], "2"]}]}], ")"}], "&"}], "/@", 
         " ", "X"}], "//", "N"}], "]"}]}], "]"}], "]"}]}], "}"}]], "Input",
 CellChangeTimes->{{3.612632915379696*^9, 3.612632947841277*^9}, {
  3.61263300256195*^9, 3.6126330091022983`*^9}, {3.6126332254238477`*^9, 
  3.6126333166855183`*^9}, {3.612633459836463*^9, 3.6126335007556667`*^9}, {
  3.612647440874063*^9, 3.6126474543450127`*^9}, {3.612650350888948*^9, 
  3.6126503660940514`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.835528199939974`", ",", 
   RowBox[{"{", "10", "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.612632984762117*^9, 3.6126330106092997`*^9}, 
   3.6126332431976657`*^9, 3.612633317175847*^9, {3.6126334730282335`*^9, 
   3.612633501216976*^9}, 3.6126442498626103`*^9, 3.612645272596377*^9, 
   3.6126466673440943`*^9, 3.612646698061489*^9, 3.6126474550935106`*^9, 
   3.6126480662843266`*^9, 3.6126503709322634`*^9, 3.612650902818699*^9, 
   3.6126513924735775`*^9}]
}, Open  ]],

Cell[TextData[{
 "We form our ",
 Cell[BoxData[
  FormBox["u", TraditionalForm]],
  FormatType->"TraditionalForm"]
}], "Text",
 CellChangeTimes->{{3.61267680052847*^9, 3.6126768057789607`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"u", "[", "x_", "]"}], ":=", 
  RowBox[{
   RowBox[{"K", "[", 
    RowBox[{"x", ",", 
     RowBox[{"X", "[", 
      RowBox[{"[", "10", "]"}], "]"}]}], "]"}], "-", 
   RowBox[{
    UnderoverscriptBox["\[Sum]", 
     RowBox[{"j", "=", "1"}], "1"], 
    RowBox[{
     RowBox[{"Nt", "[", 
      RowBox[{"j", ",", "x"}], "]"}], 
     RowBox[{"Nt", "[", 
      RowBox[{"j", ",", 
       RowBox[{"X", "[", 
        RowBox[{"[", "10", "]"}], "]"}]}], "]"}]}]}]}]}]], "Input",
 CellChangeTimes->{{3.6126340714205866`*^9, 3.6126340850036163`*^9}, {
  3.6126341273537726`*^9, 3.612634168735284*^9}, {3.612644262847644*^9, 
  3.612644267347863*^9}, {3.6126457999857955`*^9, 3.612645804680914*^9}, {
  3.6126503783942223`*^9, 3.6126503832124224`*^9}, {3.6126504227166653`*^9, 
  3.612650425592578*^9}}],

Cell["\<\
So we can form our second Newton basis element\
\>", "Text",
 CellChangeTimes->{{3.61267681637504*^9, 3.612676829819936*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Nt", "[", 
   RowBox[{"2", ",", "x_"}], "]"}], ":=", 
  FractionBox[
   RowBox[{"u", "[", "x", "]"}], 
   SqrtBox[
    RowBox[{
     RowBox[{"K", "[", 
      RowBox[{
       RowBox[{"X", "[", 
        RowBox[{"[", "10", "]"}], "]"}], ",", 
       RowBox[{"X", "[", 
        RowBox[{"[", "10", "]"}], "]"}]}], "]"}], "-", 
     RowBox[{
      UnderoverscriptBox["\[Sum]", 
       RowBox[{"j", "=", "1"}], "1"], 
      SuperscriptBox[
       RowBox[{"Nt", "[", 
        RowBox[{"j", ",", 
         RowBox[{"X", "[", 
          RowBox[{"[", "10", "]"}], "]"}]}], "]"}], "2"]}]}]]]}]], "Input",
 CellChangeTimes->{{3.6126342114656887`*^9, 3.6126342449719234`*^9}, {
   3.61263427733744*^9, 3.6126343346985826`*^9}, {3.6126442881613827`*^9, 
   3.612644294240451*^9}, {3.612645809632204*^9, 3.6126458172912903`*^9}, {
   3.612650390500263*^9, 3.6126503933281436`*^9}, {3.612650463471855*^9, 
   3.6126504656583076`*^9}, 3.612650537330922*^9}],

Cell["\<\
And we can plot first two elements of the standard basis next to the first \
two elements of the Newton basis\
\>", "Text",
 CellChangeTimes->{{3.612676841233514*^9, 3.612676917258149*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"K", "[", 
        RowBox[{"x", ",", 
         RowBox[{"X", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ",", 
       RowBox[{"K", "[", 
        RowBox[{"x", ",", 
         RowBox[{"X", "[", 
          RowBox[{"[", "10", "]"}], "]"}]}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "2"}], ",", "13"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], ",", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Nt", "[", 
        RowBox[{"1", ",", "x"}], "]"}], ",", 
       RowBox[{"Nt", "[", 
        RowBox[{"2", ",", "x"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "2"}], ",", "13"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}], "}"}]], "Input",
 CellChangeTimes->{{3.612634372120452*^9, 3.612634465326731*^9}, {
  3.612634527465041*^9, 3.612634564117408*^9}, {3.612634594847596*^9, 
  3.6126345951838207`*^9}, {3.6126443419927897`*^9, 3.6126443424303355`*^9}, {
  3.612645827737231*^9, 3.612645829550435*^9}, {3.612646238602352*^9, 
  3.6126462560049133`*^9}, {3.612650952822909*^9, 3.6126509593962755`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[{{}, {}, 
     {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
       "]]}, 
     {Hue[0.9060679774997897, 0.6, 0.6], LineBox[CompressedData["
1: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
       "]]}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->True,
    AxesLabel->{None, None},
    AxesOrigin->{0, 0},
    Method->{},
    PlotRange->{All, All},
    PlotRangeClipping->True,
    PlotRangePadding->{Automatic, Automatic}], ",", 
   GraphicsBox[{{}, {}, 
     {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
       "]]}, 
     {Hue[0.9060679774997897, 0.6, 0.6], LineBox[CompressedData["
1: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
J9M4dGRIELOTq9v20idCs9BZ5fO4AAYpgH+hKREOjk4cDcb5MPspNoNSCyIk
YncrIsd4saDmUdZqSyL0rvf1n3/Bg1Umhr1rtSfCrbT/1Df1uLCBgPPePZeI
kE54UnRAkhPbsZcDI65EuHulafaJIAemK/+rc8mHCGOYHoxe1GDDLrClpG3e
IsLlUvFW+hwW7Pb6DU+yoAM8D2OXcUrmg/nMTcMWSYSvjT2JLmv0WHfGVCvv
IyIcemt2hzaGDvsbWfJaOJ4I0+e+Usxp0GIaZ23UlV4TYUJAPu5fTYVZaiuR
a6YRoVcRsUQ/lRLzFSL/ib8jQvfHaTGPH1Ngn6cznM0LiHD+MQjweUaG/fnp
p2xZfKBPYksNh92+3krh8R2bMiKMLuU0Ucna1Tt8dz7e4wcRik6mvOQL3tI7
5Vhp59tIhCs2/FrXmf7pXTeKlb/7mwhn/MYvd+f81ctjV/se00OEH1mpujIl
1/VIfV0XXo0RoTPM00kbXdFTyAxYySYR4d1oK9bi/iU9t+vCUWV/ifDnp9YH
LPwLeh90vos2kfPDbo5G+u+Ds3rTVJdLehn5oZxS7qLp1pSe9G8Gi1lufigi
Y0p313lCzyUpb/qfMD/MLUi7wsM9ppfhdDqYXo4fnsoLaS+iGtEbO7TBy6fG
D9X/ZundtBrUE9tM+iiD80NV/he3r7H06dlXY0Zax/lhBbGj5qNgt96bmJFB
o9P80MGx5VPe3Q69QctQv3MX+eHanWu8I5J/9AREZVkuu/DDe66ksTcsrXov
iq5jYbf54XR45JwoS5Mer8lX97eP+GEpF9u/ous/9LpVAhMs4/nhIDfvfWvz
Gr0X/AbltM/54ZezmZoyut/1BEi/GV1T+SHL+ZYOMfBNTyR26oPiZ35YGW85
d6a0TG/EP7dt6Cs/tPM1M30CS/XSHLy3Yiv4oewSR0dG71c9SdV949Vafrg7
JbMEjhXryXXyzHzp4Yejt2JXskcK9OYq+9muDvJDrq6KiqT5fL2cd2laxDF+
+PXsNa3bVPl6ircUI+7M88OBoknbtvwcPVWBY9JH9g/4J7ADR7J3enqOvpca
JQRgaHPAHdaQ13q7JroPA2QFoBpr1q+u6Zd6larkRQqKArBK9+L9kEsv9CD1
Q6rHmgIwUz+GYunlMz3DrIz0MyYC0IYtR8xnOE7PfOHPSP81AcgZZ7mhyhOh
Z39bxXax9CCfN8NAiLe3nqtR2wZ1lQBcVIlK/HPcS8+Hy+uxwA8BeIRVX65L
6YZeRF5BlfFvAVgz/DHlu42nXsGosnjGmADsei5TqPHxsh7FCaXp80yC8BlF
89ZNdFEvg1/Bq9pGEObZu/dJbBnoTZVLhj0lE4KfbBU8uu9x6w1P8WXHKQvD
C6FpOv2rJbrHlWpfGB8SgROuIWtkURd10aru9t9fInBmtXS8+b8VnWsKKr2t
l0ShPHNjMGiI0sEXnNut6MXgEa9uHR9uHp1jEgQz5jQx6P80bPCn1Ftt2eAo
/2pNcSgcQfTi/66iLX9JG0n2isM/m7t+NuSFWi6VVx58viEBPSckc0pn1bSq
Utqdl7klYVNWrWed03vN9az9v0pfJCH715+RF+UENJ0ls+lfmEnBT2kh5UUl
8RorcvEahUtS0MlHrsL87bZ6Scb2yHqENCy+5ErDsXdF3dpAHOoKyUAl6oE3
tI861AQ8wksUq2Qg2w/BeNqOw2o8DO4FZudkoVaWS6B0e7xqxtG7t5esZOGq
Bf78ZvwTVZW7j47GX5SFh1TUNORlHquaL+V3dDvIwpMJkhHStyJUwzvX/zm5
y8L+exY7fIqBqptpQfq378lCXnGZ881jLqq9uvF/MrNl4Ut9yjGcXUf1im/G
K+O8g3h29c+87JqqG3lFl+bzZaH3zFw091U1VQ6x7r+Hi2Xh09sMFhlrSqon
6AQFKqpk4cxEfAFVnLhqeXum858OWRhanMylZMysasLy9ZBftyw8MStrFDtO
r9pt1LBB6JOF786yGxiO06iulc5F2A7LQimj+NX6MXLVQ6nKuTOzB/x+VyxF
dq6rlPce8YshycIbPBYdJaarKiZcZ4DSkizclhg4qcGyrOIS7tvqsy4Lo08V
2SSkzaqsVYW94N2UhYnT9a9QxJRKyNYzp9ItWWjAx7HM3DSuwqb2XsFmVxYC
DSjWaTuqkuxRur6/Lws9o5nr3usMq/wPOB/kVA==
       "]]}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->True,
    AxesLabel->{None, None},
    AxesOrigin->{0, 0},
    Method->{},
    PlotRange->{All, All},
    PlotRangeClipping->True,
    PlotRangePadding->{Automatic, Automatic}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.6126343956180744`*^9, {3.612634433198373*^9, 3.6126344547937307`*^9}, 
   3.612634566759164*^9, 3.612634598283882*^9, {3.6126443212105227`*^9, 
   3.612644345946108*^9}, 3.6126458314316854`*^9, 3.612646257246745*^9, {
   3.61264667642912*^9, 3.6126467004270625`*^9}, 3.6126475074703045`*^9, 
   3.612648095101433*^9, 3.612648659864447*^9, 3.61265043338175*^9, 
   3.6126504678737803`*^9, 3.612650542080079*^9, {3.612650937395661*^9, 
   3.6126509602158194`*^9}, 3.612651351384279*^9, 3.6126514135765963`*^9}]
}, Open  ]],

Cell[TextData[{
 "We will now repeat this, with less text and less ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " ceremony since we can inspect our list and find the position of the \
remaining maximal element manually. The reason we did it the first time was \
so that we could write a program in the next section."
}], "Text",
 CellChangeTimes->{{3.612676923633382*^9, 3.612677014871994*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"K", "[", 
       RowBox[{"#", ",", "#"}], "]"}], "-", 
      RowBox[{
       UnderoverscriptBox["\[Sum]", 
        RowBox[{"k", "=", "1"}], "2"], 
       SuperscriptBox[
        RowBox[{"Nt", "[", 
         RowBox[{"k", ",", "#"}], "]"}], "2"]}]}], ")"}], "&"}], "/@", " ", 
   "X"}], "//", "N"}]], "Input",
 CellChangeTimes->{{3.612647703242781*^9, 3.6126477034619274`*^9}, {
  3.6126483873709135`*^9, 3.6126483906430874`*^9}, {3.6126504399162073`*^9, 
  3.612650441793453*^9}, {3.6126505710343137`*^9, 3.612650579684061*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.`", ",", "0.0006422459573810491`", ",", "0.0025224455649921484`", ",", 
   "0.008845784865447404`", ",", "0.03283307779430633`", ",", 
   "0.05190155831967114`", ",", "0.09300622179144424`", ",", 
   "0.045402303561742574`", ",", "0.016731148684104857`", ",", "0.`"}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.6126477317336454`*^9, 3.612647889403818*^9, 3.6126482391581345`*^9, 
   3.6126483939242687`*^9, 3.612648661327421*^9, 3.6126501909445395`*^9, {
   3.6126504439959173`*^9, 3.6126504690285473`*^9}, 3.6126505519776525`*^9, 
   3.6126509693408823`*^9, 3.6126514230388813`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Max", "[", "%", "]"}]], "Input",
 CellChangeTimes->{{3.6126505817094064`*^9, 3.612650584809464*^9}}],

Cell[BoxData["0.09300622179144424`"], "Output",
 CellChangeTimes->{3.612650585196722*^9, 3.6126509763402147`*^9, 
  3.6126514264561515`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"u", "[", "x_", "]"}], ":=", 
  RowBox[{
   RowBox[{"K", "[", 
    RowBox[{"x", ",", 
     RowBox[{"X", "[", 
      RowBox[{"[", "7", "]"}], "]"}]}], "]"}], "-", 
   RowBox[{
    UnderoverscriptBox["\[Sum]", 
     RowBox[{"j", "=", "1"}], "2"], 
    RowBox[{
     RowBox[{"Nt", "[", 
      RowBox[{"j", ",", "x"}], "]"}], 
     RowBox[{"Nt", "[", 
      RowBox[{"j", ",", 
       RowBox[{"X", "[", 
        RowBox[{"[", "7", "]"}], "]"}]}], "]"}]}]}]}]}]], "Input",
 CellChangeTimes->{{3.6126506292458715`*^9, 3.612650643293205*^9}, {
  3.6126509935426397`*^9, 3.6126509995626388`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Nt", "[", 
   RowBox[{"3", ",", "x_"}], "]"}], ":=", 
  FractionBox[
   RowBox[{
    RowBox[{"K", "[", 
     RowBox[{"x", ",", 
      RowBox[{"X", "[", 
       RowBox[{"[", "7", "]"}], "]"}]}], "]"}], "-", 
    RowBox[{
     UnderoverscriptBox["\[Sum]", 
      RowBox[{"j", "=", "1"}], "2"], 
     RowBox[{
      RowBox[{"Nt", "[", 
       RowBox[{"j", ",", "x"}], "]"}], 
      RowBox[{"Nt", "[", 
       RowBox[{"j", ",", 
        RowBox[{"X", "[", 
         RowBox[{"[", "7", "]"}], "]"}]}], "]"}]}]}]}], 
   SqrtBox[
    RowBox[{
     RowBox[{"K", "[", 
      RowBox[{
       RowBox[{"X", "[", 
        RowBox[{"[", "7", "]"}], "]"}], ",", 
       RowBox[{"X", "[", 
        RowBox[{"[", "7", "]"}], "]"}]}], "]"}], "-", 
     RowBox[{
      UnderoverscriptBox["\[Sum]", 
       RowBox[{"j", "=", "1"}], "2"], 
      SuperscriptBox[
       RowBox[{"Nt", "[", 
        RowBox[{"j", ",", 
         RowBox[{"X", "[", 
          RowBox[{"[", "7", "]"}], "]"}]}], "]"}], "2"]}]}]]]}]], "Input",
 CellChangeTimes->{{3.6126506745029373`*^9, 3.6126507126122556`*^9}, {
   3.612651051760315*^9, 3.6126510578273473`*^9}, {3.612651119850551*^9, 
   3.6126511214075856`*^9}, 3.6126512762945857`*^9, {3.6126515999941587`*^9, 
   3.6126516029261074`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"K", "[", 
        RowBox[{"x", ",", 
         RowBox[{"X", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ",", 
       RowBox[{"K", "[", 
        RowBox[{"x", ",", 
         RowBox[{"X", "[", 
          RowBox[{"[", "10", "]"}], "]"}]}], "]"}], ",", 
       RowBox[{"K", "[", 
        RowBox[{"x", ",", 
         RowBox[{"X", "[", 
          RowBox[{"[", "7", "]"}], "]"}]}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "2"}], ",", "13"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], ",", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Nt", "[", 
        RowBox[{"1", ",", "x"}], "]"}], ",", 
       RowBox[{"Nt", "[", 
        RowBox[{"2", ",", "x"}], "]"}], ",", 
       RowBox[{"Nt", "[", 
        RowBox[{"3", ",", "x"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "2"}], ",", "13"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}], "}"}]], "Input",
 CellChangeTimes->{{3.612634372120452*^9, 3.612634465326731*^9}, {
  3.612634527465041*^9, 3.612634564117408*^9}, {3.612634594847596*^9, 
  3.6126345951838207`*^9}, {3.6126443419927897`*^9, 3.6126443424303355`*^9}, {
  3.612645827737231*^9, 3.612645829550435*^9}, {3.612646238602352*^9, 
  3.6126462560049133`*^9}, {3.612650749275611*^9, 3.61265077593332*^9}, {
  3.6126511382827964`*^9, 3.6126511410706477`*^9}, {3.612651470165189*^9, 
  3.6126514705464416`*^9}, {3.612651617439749*^9, 3.612651620773964*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[{{}, {}, 
     {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
       "]]}, 
     {Hue[0.9060679774997897, 0.6, 0.6], LineBox[CompressedData["
1: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
       "]]}, 
     {Hue[0.1421359549995791, 0.6, 0.6], LineBox[CompressedData["
1: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
       "]]}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->True,
    AxesLabel->{None, None},
    AxesOrigin->{0, 0},
    Method->{},
    PlotRange->{All, All},
    PlotRangeClipping->True,
    PlotRangePadding->{Automatic, Automatic}], ",", 
   GraphicsBox[{{}, {}, 
     {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
       "]]}, 
     {Hue[0.9060679774997897, 0.6, 0.6], LineBox[CompressedData["
1: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
J9M4dGRIELOTq9v20idCs9BZ5fO4AAYpgH+hKREOjk4cDcb5MPspNoNSCyIk
YncrIsd4saDmUdZqSyL0rvf1n3/Bg1Umhr1rtSfCrbT/1Df1uLCBgPPePZeI
kE54UnRAkhPbsZcDI65EuHulafaJIAemK/+rc8mHCGOYHoxe1GDDLrClpG3e
IsLlUvFW+hwW7Pb6DU+yoAM8D2OXcUrmg/nMTcMWSYSvjT2JLmv0WHfGVCvv
IyIcemt2hzaGDvsbWfJaOJ4I0+e+Usxp0GIaZ23UlV4TYUJAPu5fTYVZaiuR
a6YRoVcRsUQ/lRLzFSL/ib8jQvfHaTGPH1Ngn6cznM0LiHD+MQjweUaG/fnp
p2xZfKBPYksNh92+3krh8R2bMiKMLuU0Ucna1Tt8dz7e4wcRik6mvOQL3tI7
5Vhp59tIhCs2/FrXmf7pXTeKlb/7mwhn/MYvd+f81ctjV/se00OEH1mpujIl
1/VIfV0XXo0RoTPM00kbXdFTyAxYySYR4d1oK9bi/iU9t+vCUWV/ifDnp9YH
LPwLeh90vos2kfPDbo5G+u+Ds3rTVJdLehn5oZxS7qLp1pSe9G8Gi1lufigi
Y0p313lCzyUpb/qfMD/MLUi7wsM9ppfhdDqYXo4fnsoLaS+iGtEbO7TBy6fG
D9X/ZundtBrUE9tM+iiD80NV/he3r7H06dlXY0Zax/lhBbGj5qNgt96bmJFB
o9P80MGx5VPe3Q69QctQv3MX+eHanWu8I5J/9AREZVkuu/DDe66ksTcsrXov
iq5jYbf54XR45JwoS5Mer8lX97eP+GEpF9u/ous/9LpVAhMs4/nhIDfvfWvz
Gr0X/AbltM/54ZezmZoyut/1BEi/GV1T+SHL+ZYOMfBNTyR26oPiZ35YGW85
d6a0TG/EP7dt6Cs/tPM1M30CS/XSHLy3Yiv4oewSR0dG71c9SdV949Vafrg7
JbMEjhXryXXyzHzp4Yejt2JXskcK9OYq+9muDvJDrq6KiqT5fL2cd2laxDF+
+PXsNa3bVPl6ircUI+7M88OBoknbtvwcPVWBY9JH9g/4J7ADR7J3enqOvpca
JQRgaHPAHdaQ13q7JroPA2QFoBpr1q+u6Zd6larkRQqKArBK9+L9kEsv9CD1
Q6rHmgIwUz+GYunlMz3DrIz0MyYC0IYtR8xnOE7PfOHPSP81AcgZZ7mhyhOh
Z39bxXax9CCfN8NAiLe3nqtR2wZ1lQBcVIlK/HPcS8+Hy+uxwA8BeIRVX65L
6YZeRF5BlfFvAVgz/DHlu42nXsGosnjGmADsei5TqPHxsh7FCaXp80yC8BlF
89ZNdFEvg1/Bq9pGEObZu/dJbBnoTZVLhj0lE4KfbBU8uu9x6w1P8WXHKQvD
C6FpOv2rJbrHlWpfGB8SgROuIWtkURd10aru9t9fInBmtXS8+b8VnWsKKr2t
l0ShPHNjMGiI0sEXnNut6MXgEa9uHR9uHp1jEgQz5jQx6P80bPCn1Ftt2eAo
/2pNcSgcQfTi/66iLX9JG0n2isM/m7t+NuSFWi6VVx58viEBPSckc0pn1bSq
Utqdl7klYVNWrWed03vN9az9v0pfJCH715+RF+UENJ0ls+lfmEnBT2kh5UUl
8RorcvEahUtS0MlHrsL87bZ6Scb2yHqENCy+5ErDsXdF3dpAHOoKyUAl6oE3
tI861AQ8wksUq2Qg2w/BeNqOw2o8DO4FZudkoVaWS6B0e7xqxtG7t5esZOGq
Bf78ZvwTVZW7j47GX5SFh1TUNORlHquaL+V3dDvIwpMJkhHStyJUwzvX/zm5
y8L+exY7fIqBqptpQfq378lCXnGZ881jLqq9uvF/MrNl4Ut9yjGcXUf1im/G
K+O8g3h29c+87JqqG3lFl+bzZaH3zFw091U1VQ6x7r+Hi2Xh09sMFhlrSqon
6AQFKqpk4cxEfAFVnLhqeXum858OWRhanMylZMysasLy9ZBftyw8MStrFDtO
r9pt1LBB6JOF786yGxiO06iulc5F2A7LQimj+NX6MXLVQ6nKuTOzB/x+VyxF
dq6rlPce8YshycIbPBYdJaarKiZcZ4DSkizclhg4qcGyrOIS7tvqsy4Lo08V
2SSkzaqsVYW94N2UhYnT9a9QxJRKyNYzp9ItWWjAx7HM3DSuwqb2XsFmVxYC
DSjWaTuqkuxRur6/Lws9o5nr3usMq/wPOB/kVA==
       "]]}, 
     {Hue[0.1421359549995791, 0.6, 0.6], LineBox[CompressedData["
1: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
l4qT71euHx4e4T6G3uOPFor/B6Zx/jo=
       "]]}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->True,
    AxesLabel->{None, None},
    AxesOrigin->{0, 0},
    Method->{},
    PlotRange->{All, All},
    PlotRangeClipping->True,
    PlotRangePadding->{Automatic, Automatic}]}], "}"}]], "Output",
 CellChangeTimes->{3.612650784084738*^9, 3.61265106744874*^9, 
  3.6126511472317424`*^9, 3.6126512970743904`*^9, 3.6126514840744295`*^9, 
  3.612651622607182*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"K", "[", 
       RowBox[{"#", ",", "#"}], "]"}], "-", 
      RowBox[{
       UnderoverscriptBox["\[Sum]", 
        RowBox[{"j", "=", "1"}], "3"], 
       SuperscriptBox[
        RowBox[{"Nt", "[", 
         RowBox[{"j", ",", "#"}], "]"}], "2"]}]}], ")"}], "&"}], "/@", " ", 
   "X"}], "//", "N"}]], "Input",
 CellChangeTimes->{{3.612651801910243*^9, 3.6126518020113096`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.`", ",", "0.0000987670639004401`", ",", "0.00035416078162653353`", ",", 
   "0.0010353670241006752`", ",", "0.002335549188631214`", ",", 
   "0.0024169598303732664`", ",", "0.`", ",", "0.0015534746074291617`", ",", 
   "0.0011950915422082042`", ",", "0.`"}], "}"}]], "Output",
 CellChangeTimes->{3.612651811131369*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Max", "[", "%", "]"}]], "Input",
 CellChangeTimes->{{3.61265181992021*^9, 3.6126518230272713`*^9}}],

Cell[BoxData["0.0024169598303732664`"], "Output",
 CellChangeTimes->{3.612651823379506*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Nt", "[", 
   RowBox[{"4", ",", "x_"}], "]"}], ":=", 
  FractionBox[
   RowBox[{
    RowBox[{"K", "[", 
     RowBox[{"x", ",", 
      RowBox[{"X", "[", 
       RowBox[{"[", "6", "]"}], "]"}]}], "]"}], "-", 
    RowBox[{
     UnderoverscriptBox["\[Sum]", 
      RowBox[{"j", "=", "1"}], "3"], 
     RowBox[{
      RowBox[{"Nt", "[", 
       RowBox[{"j", ",", "x"}], "]"}], 
      RowBox[{"Nt", "[", 
       RowBox[{"j", ",", 
        RowBox[{"X", "[", 
         RowBox[{"[", "6", "]"}], "]"}]}], "]"}]}]}]}], 
   SqrtBox[
    RowBox[{
     RowBox[{"K", "[", 
      RowBox[{
       RowBox[{"X", "[", 
        RowBox[{"[", "6", "]"}], "]"}], ",", 
       RowBox[{"X", "[", 
        RowBox[{"[", "6", "]"}], "]"}]}], "]"}], "-", 
     RowBox[{
      UnderoverscriptBox["\[Sum]", 
       RowBox[{"j", "=", "1"}], "3"], 
      SuperscriptBox[
       RowBox[{"Nt", "[", 
        RowBox[{"j", ",", 
         RowBox[{"X", "[", 
          RowBox[{"[", "6", "]"}], "]"}]}], "]"}], "2"]}]}]]]}]], "Input",
 CellChangeTimes->{{3.6126518530992494`*^9, 3.612651879709984*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"K", "[", 
        RowBox[{"x", ",", 
         RowBox[{"X", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ",", 
       RowBox[{"K", "[", 
        RowBox[{"x", ",", 
         RowBox[{"X", "[", 
          RowBox[{"[", "10", "]"}], "]"}]}], "]"}], ",", 
       RowBox[{"K", "[", 
        RowBox[{"x", ",", 
         RowBox[{"X", "[", 
          RowBox[{"[", "7", "]"}], "]"}]}], "]"}], ",", 
       RowBox[{"K", "[", 
        RowBox[{"x", ",", 
         RowBox[{"X", "[", 
          RowBox[{"[", "6", "]"}], "]"}]}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "2"}], ",", "13"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], ",", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Nt", "[", 
        RowBox[{"1", ",", "x"}], "]"}], ",", 
       RowBox[{"Nt", "[", 
        RowBox[{"2", ",", "x"}], "]"}], ",", 
       RowBox[{"Nt", "[", 
        RowBox[{"3", ",", "x"}], "]"}], ",", 
       RowBox[{"Nt", "[", 
        RowBox[{"4", ",", "x"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "2"}], ",", "13"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}], "}"}]], "Input",
 CellChangeTimes->{{3.612634372120452*^9, 3.612634465326731*^9}, {
  3.612634527465041*^9, 3.612634564117408*^9}, {3.612634594847596*^9, 
  3.6126345951838207`*^9}, {3.6126443419927897`*^9, 3.6126443424303355`*^9}, {
  3.612645827737231*^9, 3.612645829550435*^9}, {3.612646238602352*^9, 
  3.6126462560049133`*^9}, {3.612650749275611*^9, 3.61265077593332*^9}, {
  3.6126511382827964`*^9, 3.6126511410706477`*^9}, {3.612651470165189*^9, 
  3.6126514705464416`*^9}, {3.612651617439749*^9, 3.612651620773964*^9}, {
  3.612651907417391*^9, 3.6126519224013467`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[{{}, {}, 
     {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
       "]]}, 
     {Hue[0.9060679774997897, 0.6, 0.6], LineBox[CompressedData["
1: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
       "]]}, 
     {Hue[0.1421359549995791, 0.6, 0.6], LineBox[CompressedData["
1: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
       "]]}, 
     {Hue[0.37820393249936934`, 0.6, 0.6], LineBox[CompressedData["
1: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
e+Pu3mW5/wEjhzfu
       "]]}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->True,
    AxesLabel->{None, None},
    AxesOrigin->{0, 0},
    Method->{},
    PlotRange->{All, All},
    PlotRangeClipping->True,
    PlotRangePadding->{Automatic, Automatic}], ",", 
   GraphicsBox[{{}, {}, 
     {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJwVV3c41t8btvd4eV9775lN4v18zklGVoUQSVZaFL6JolIkIdnJykqISCpZ
Hysjo+yZ7OxX9vbz++tc9/Vc130/z3M/13POEXG6bX6FgoyMTI2SjOz/56Jb
V8Hh4SFWwL505eNGFHD6G1wltXiIPdv2xPmYRINeR62fZwcPMZ1viZEZmdGg
yip9+U3JIXa5JkkQtYoBkfC2Krx+iAmV74mwtsUCqnJR3WtWh1jnJ5Y/oQpx
wFe993zkqUPs4iYhPSYqDjjKIndHBQ4xYZbCOAe7eKBCYPwW0HmA5eppad2j
TgDZEVXNOdgBNheY2bb4XwLgo/ca/JV/gHnt/D7BM5kAqA76d4WfHWBdsaXG
ec2vQc/fbLRG+wA7OV5ldTYvCfiW69STv93HSuiq6+Ia3oAF9Y1umeh9TGuz
PzxMJg04FOVOmT3ax/7LMIM9HmnA8C2ONsNmH8OnRLW9pEgHvC9HDHVY9rGz
+TUdGyoZoNLp/s8nPnvYnh7ap/sjC6j8Pjaa57KHdfC+sg0RfQuyrceWO832
MPpHrXs0/m9BhMlpdjH5PQzQ8efUqmQDBw1Oy7rRXSxs/2rCy8J3gIKheJDS
aBdLLGB8eH02D5iv7kvFq+9iGvrSxqoO70HmsKG3tMguFqdtnvGh/z3QLRxj
Nd3awXA/Ki+3tOeD4PNsevHZO9h8V3wG168PgP6NR6E05Q7GWxWidSPuI7AN
qdgrW9rG8LIPy5z+fAR5nnRGpoPbWEOzhoK1bDEw0k2b9Py4jWEL2xixrhiE
z/7kKb+8jQmiN1k1yUsATk0xyLRiC3Nk+zTYV/gFOAj4dfx5t4U9RoIa4xi+
go80jYJeMVvYB5t+Wy/Xr8B8wP5b/I0t7NbO/shLkVIQ+zBi6Q/3FnbAdiE9
/u03wNW8eMHLexOb1i7jTpyuANeKT2RTOW5i3/pFuTTPV4LSpKer8SabGPak
8yehrhJcuCUQUS62iREurQ5HZVWBRLxpHVXnBqZ+tSTeVbsaCNrnH3ulsIE5
jmQETsnXgr+a0oxBfBvY3kePhxXXa0ERPmvGg24Dc22I55V9VwtONSdlGo2v
Y9UsSy9bxOrANbUwnoO4dcydSUf+uHg9+MRwg/rK/hq2b/xiT0ynAfhPTY2b
za1hBhE+sVkhDUC/2rEa7VvDdilNsup+NoB+bxs/7o9r2ArXTPLI5UZwMHr6
X4vLGsayM8Af9awJnP4q9VuldRWrm3vPJrb+A7BFZ5YJfVvFnHuHzxTotYBB
N6EEpuxVTMLQBRuIbwHuolwW049WMTl27BGPdiuIfkHT/Fp1FUtLr9NSD2sD
w85TJWRJK9gjsd66GfFfwBOXGd5+/R82ysqJeyrUBR7SNKryWf/D0g2yHrec
6wLhe3ODV3X/YRSE+pSLT7pAzoyKDLnQP+xe0MJT6+kuMFpd+121exmDLKmq
JR+7wTnP8YMEdBkz9eSB7yx7waWsU+MNkkvYJ8PfMRvtA6Bf6uT75XuzmJ4t
zxZ90SjI//fNy95sFhO7UpWp0TkKAspVtFqlZ7GISctmr7VRIH1WvPld3wxm
tmAeynliDNy7S/vXXn0Ga4PyuRu1Y4D3e5to2/I0xk31kfN6/zi46GSbmHt1
EpMnkLQ0qKaAknyXIxeYxIRc9TOrJKcA1YaxzFPOSUwqMtBW23AK5D9HSh2+
T2AnUxOWmCOmwF6RcC+X2AR2YNdOsc85DZIPp9mCR8awW+XS72Ql/oLyE3/Z
v+eNYMp3jCrH5WaBfkzCOMPlEayPssjk8PQs6FwwLD6HH8F0xFKubVyZBXNv
8s2G/X5j4hce4zzfzAJuGq/IVZNh7N7zoarHuDlwp3OPWZQ0gFlk4+Uuz80B
MvkPv69mDmDcoifUv1PNg7CnlwsKrAcwSXtBlW3BeZChWWtyorofW6Ad2mg0
nwcdqc/CzkX1YSyvLj2d/zoPFG6y0z9S7cGWawzZ3/osgLL6uv76v91Y0cn9
uciIBaAn6J3DkNyNpb2iogBvF4BdR59BPFU3dlkqXO5PxwIIO54SXNDTif3u
tgvml14EnFFnrFafd2JO3+460iKLIGPuUOIE2omZ9dBIFJotgrIUp+/12R1Y
KXp1UOX+IpihlKYa9vmFzSe+idtuXAR3Lg10icj/wqwZxkDZ4CI4cOcw+Fn9
EyPcvLSgsrgIjnUPPp2OasduqL7ZN2RbAqFpVyg51FoxStrKs4eWSyDdoikj
LbkFO9X2yMTDdQmU0sjpyFO3YENRHFOxd5fAX7flgFO9zZj988o/G3FLQPeE
34GnbyOWUbiuhutYAkTn9CdnuxuwJy3+OZqjS0DtRSPNMaUGTMIotYeCtAQk
xvCsM3/rsXvLBxL3GUlAkFEr5vupesz/+w0NSR4S4FR34Mp8U4eJpQwNekqS
AM3zfCF761pMTsZudAqQwEFxZ6b2pxrM4224EbMJCWwMb0nxsNZgpkb4i53W
JNDmGOqQ8wLD8uY2c1RvkUDEx/LHsW5lmDN/pK1BPAk8pKYLPSv+DctoKofn
3pDAbZvz0QzDX7HZGvH01XckcI58MSPA+DNWs6LxhK6UBKDliffalCVYsq/O
lXsYCSjnPv20UVaMvd2weRbYQALsZoL1brJF2ECVvK9TFwlQG/UknK0vwBi3
7zRpDJDA9D/33O+q77F5kXnbzBESaHhNU6admYNpe6ntvJsggXcn3/z4yJ6N
cSGkO7ozJBAye3xI6kkmNsbzJcV3gQSuRf2aT/mXhuHaRI11l0kg2qtzS6o2
GSsj/bJ+t0oC52speQnpr7B7lg4Z6RtH/WNX1yYLiMZeKfkwq26TwIe61tL+
ylBMa63u0cVdElBxVtwt8gvArqwdTPDuk0A3w+kN8elrWGndvLTnAQkI+Rwj
uy/qAMrP2J60PySB5/5mfuFx/uBTiZT4+BGuEdTfXQwPAe2/0da9I/wG8xwO
vRoFytoTND8c4ZHbsDw1JB4EfSO6bRzx8QuzJhbnJoGeFnCr50jv2MwtovOV
NHC3rN7QeI8ETGCv3OJ6BtBn2GW+sEMCNxMQPp/gtyCGU7B9d5MEQpezGMi5
cgB1z3/pGuskkHeaaSf0XR6QtDbOpFshgea0/2YJmgXgG/3uiucSCcxsDfan
NhWCrY8jn7zmSCBIWsQlVv4jWJG2ZGacJoHY7u6LA3eKAdpTKas9RgKZASEW
gpWfgOqEtzblMAkUyxONnak/gxXtHi/nXhKo7Sfp5Jh+Afe15ejsfpHAmJK1
ispIKfh0qRThqiOB5WEGWR/JMpBgpeMwWE4CZM+rRCpulYNLpg5TGiUkIDwm
waZ/WAk84kf1KzNJQOnFAF2YAQaen/hQ/zeRBNKS9clmDKqBvtLw3/woEig8
vbMpH1kDahs1wugeHvmtGyNpplwLKqU8DDv+I4E7UN7Su7MW3IlqbThxnQS0
NO2LKwn1gLX2RuS8+dF8SdW6nXndADA1Ru4RERLIFbuY5KXVCPZ2u24XEUgg
XGitOX6oEfhVW5NL0pKAOZek1B+BZmBj+qRtb24JjNCEjt3OaAF66r/fXP2w
BGooxHCxp1rB7BSbrlPqEsg6KEdLJ1tB9s/Am1QRS+D6xmISmVQ7kD7Zl3HS
bQnsrEi/b7L8BZgEqBeLxJdA8Hj4FZvBTuB4Ymxs/eki8HUY8J+X7QKTZ0ez
P3ssgusjErEP/LrA5Zf4PKmLi8BksKo2nb8bxKlOekkoLgL2zmWhOfsewKdA
UZfStQBSa84P3p/oA8JzgUvqrAvgcxr/2eSFYcDtcVOPznoO1F/Ilag//hsk
vmFQeac9BzpxGnvzT36D69rSwbzCc2Ap4GyuNs8IWLon4/d4ZhZIOj6hHNL7
Azq28OauPrOgBbc2FP5zFHAoKI9pRcwA7Q6byBbpCTCgf/9RzNtpwG8usX16
6C9YN2Jx98geBzd/ad2ko5oBJaHz9eGB46DszLnfjfIzoJ6BtemDwziwNvar
0X84AwRjBqRp+caP/Ox4risyC3g8iTbCkWOA7vgDXnh1Dsx1XdfK9h8F63w9
2sdXF0B2EaZzsmkY6CbOFWzwLQLRF+HJvcHDIJqbTPiL7iJQIbu/lqU3DJQ4
5KjU4xdBdUmh+L+6IeDG8rhV5cQSYD9eK+paNwjGyY5dUnhEAhXT7lHv2vvB
Xy8dLJr6H8i5HPypiL8HxEOBmVfc/8DFVIvFrb/dQJdlC5ci9w/cXDU/Hfqp
G2TkFji9M/sHQu/c5g817gZ2o9w0FSn/wFhdXjT9oy7wy5RkMqW+AjDcLYL1
Wgd4yPfDe+70ClgMaMPb13eAY7NZqaSLK8BY2DjyU2wHCA2yXd5+vAIMMjUn
jDQ6gG759xiW9hXwWdfRU+nBL1AqnTx43HUVcKq1CKyotgPXjbuUyL1V0BuQ
tbv5uw1w1JvJ64SvAipctNCbkDbgdZn2oUnxKmg1y3nU8acVyMd7iTgerILi
yNwLjXEtII3S8Fpo/BrAZsXH54WaQcjI+vpwwzrIXsgqK39fD1YipS2fDKyD
q66CjZs36oHdqYslUgvr4FKS9FajbD1Qyqn28mLbAC6TDDOi+XWg3zOMRGu3
AaatEhU/f64FUtQisyr/NoB8v51i10Q1iPxqcbqfchMMxCux4fOrwc714HcP
ODfB8KS13sidatDePn+lSXsT/OAdJBDoqsHdhC/jl4I3Ae2N960916tAg5zJ
cAjfFkjUzcqxOlsOlEYeaisobIE0Yt2N1OUykBj5MbELboFTqWaB09Fl4NY6
p42g6xag9QzJ9xz8BjiwsZ5PRVvg+/j37dPepcDF3OfniN42yD3dFJjc/xm0
U+UpBF3YBl95bfUVn38Gml+HX8jc3AZXv0CJXK3PgIlfx+RO5Dawfq+QZ5xW
AkqmmJrph7bBRgNjgcDdT4DyXkatmscOsLZ5e++x0UcQWUGcuh20A9q/9rQr
U34EgmR9tO8TdsC4KnVpZ0UR0HrGaCpSswNYHlz99FulCHjF3eljZt8FKZ1h
aaUWH8DoR/2F6U+7wHQm6rx2YN5RPaMsok27oBJ7HFWAywN7mn7Kl4Z3wbkm
xq6KN7mAq7rwbhfVHhg15UpPr80BZ9q5yast90DIPfEGVr53oGJujuP15h5o
NmilmWLPAkYKTzW7GfeBkWbiwfHSzCP/hC6yCu8DhcHXKdP2mWB1yyLt6el9
4MOiTjAoygCytJWyXq/3QV5R4PA7p3RQamRtWlCwD356y0/eYE8H+hH/bs/U
7IM7XlaZN+rSgCOH5Gf7uX3Q/0dSi+3of5og9hIYax+AbO0IVwnqVCB5VcYp
+OwB0HE38Mz2SQEleXVBNc4HIP6S6/yVhWTwU3mr+Xj4Aei+H/s6cDgJ0EDH
8+K/D8AtN8fMO72vgbed6vX9h4eAmu4ns6JcPAj9kLL7O+oQBJn1lER/jwOp
ZHQRVVmH4JXpk6hwxzjQlDVc/OjHIbgvdMZdITUWRGzoHJAxksG3hK6IFJkY
kCDka+BJIIO7VQe+Er+iQebpgsgxATK4KX7wkc83GpQmconVKpHBW8FWs6A1
CoyjCwaBVmRQiOdW6URQJFi4KhK1epkMHlP6wG2rEQk2I60Gna+Twd6g3+Kq
nS8B00S1m64/GWTWFmKoz4oAGs/ioqgzyODMiokhcjUcPP+JDj1bJIN9Z6kH
FW1DQOzWf+JbG2QwVXKXF44/A6kiue7XyMihJ+vrvktuz0Dxf3gyQzw5jH8k
eT8zOBgMc82IM5wgh11JejPPOoPANBS4dV+HHDa9iN9UvREE/l03/zpnTA5p
PpHTfqIMAjQVFYYt9uRQ3sbrJgsxECg5RN0KDyKH7hVtEf41j4HW84avey/I
oeDw3nmKq4+BXvEumfsrcihw6lyeBMtjYEvlGmOaRw5/bs5VyjkGgKAcrVKW
X+Swte5qEZvqQ9C/PEEexUcBiw7nEyuT74E7463yrRIU8NyOjMg7hnuArfuz
Na0SBSxsO9/12M8XGH19VvBAlwLOcjwX6L3iA8ofyNnccKeAsSJburEXvcGF
24Sgtz4UUFJ8s+vNnztgzWH/w+hjCnjjIgurpusdIK/7k8o6ngJqHxzP+3P/
P5DK8F/RKYwC+ur5L7RWewKtvYtDD5spoGzkAfeBtSfoW9SlKeuigKYNVglO
/zwAroPTTmmGAuKxNMpkWQ/w5FUZrQAbJfSz8+Z3v+kOrohTXN5wooQfzj2j
8ja5Big4558ru1PCFNbgX1KlV0EqbXeJmw8lzCkWJuOWugp6594yTIRRwlUs
QtWDxRWc/mj45WcJJdR9w33KhNwFTGaojDFglDCxqSxJ7akzeBzLx6TfTAm9
y7JcRxmdQZnPomPFb0poYPKN30jECcijUcy5NFSQrPF67+wNB9CkeF9zEkcF
66+Odd2mdABXRJydhfiooLeWYk8K8TJIpVL/FqdIBfOuLJL9/HwJsLb0uzy5
QAX3yLiYPIZtQX5FzctKJyq4rllD8layBac/5JVtuVFByfUSB+8QGxAQ5Y+7
/ZgK2vnf02XSvQBWrIUrLuZRwaF6y177v5ZgQVud4moJFTxbRMUWfNESTAsZ
nfaqooIEy7tPZjrPg8G//3WHdFLBclfRLZ4WC1Dn07jweYcKajWk6V36Ywaq
Lg6r1FBRQzJaQYrQm2agFPzzbWWhhn6l9b23d86BfFo+6glRapjUwGgjJ3wO
xL66JYAzpoa3T8b4Z+BNQYRfoDOfJTXUaGZwvHbeBIRcTsiVvEwNT3uIT1S/
Ngb+UrXqyH/UsM+ecaJO2Qi4fOU4cyOJGj5RXOZ1iTUA9kmysd5vqaGRaGYa
86Y+uPAIDAYUUsMHLEoPQy/pAxOD666v6qjhMBWNxTt1PaDeV/Gwfp4aZily
/BTHnQJK5R31P9epoXnsoa3ASx0g+2aaYeiQGi7KVxnos+kAwau4V//wNDDL
zMnpj+BJQLPpXChIpIHygR9e+pehgGzId11GnwbOVKpFvfiLgJ2qF9rq52gg
36tz9XM8CFgK/tpo7EIDl6Za85kitEEvJ+OobzgNvBNbLfSuSBP82hGSDIqn
gSQXm6dtVJrgx4ia28s0GmjfhThZXToOqrLtt96W0MAbEedxknwa4J1GMa5r
mAbWVnHo7TSoggzeRquRaRr4YrH8nLu2Kkg+GEqeXaaBl3u9OB9+UgGRDdQy
ZNS08BInXk/4gzLwtbI5eewYLXTkGNOQj1cEX05agTANWnhYSdZlWqcA1uQt
kFlAC1taRahT1o+B25SmJ96a00LNsPIS4+vywLUIKgv40kKWw7sfa57LgKwk
RNHvMS3Umf43KPpbGowFax0bCKWFFO87PX6pSQO7S2oycSm08C0TdvL9siSw
YJAWYa6jhX/1Ly98fiUOItfFhW620sInyu17rQzioH1URKC5hxYyp6U3eD0W
O9onfDxPZ2hh+EQdgeOeKIAurGz7zHQwDz3G7PtSGDw8y8R6kYsOXnfe3q7n
FwYVWvTM34TpYLCAwQcKWyFwnI2S3luVDl7TV4smzxcAClUbZIsX6GBvyca5
u5G8wC139cDIiQ6uly9n6vTygNzY5b2cm3Qww4wdmRDmAeI357ZcHtLBg1uf
cmTquQAf98jycCYdtLh10/g94AAXKIeWtAroIGARb1nLIYD4pb6FhC90MHmp
UUmNkwDYv3fMnG+mg0WTXELKe+yAzuv7aOsSHVSykGQIXcUB/Uu1I7JbR/xq
x3FT93Ag6DQ2HEJOD2N+CfI/oMSBQ8Fv/boEevjAZMhSDLKAjZb8XxUn6OF5
faZBw20GoPY1t533FD18XbPYdE+dAXhmZLf6mtDD4dJ5+3936cGCb1qT2mV6
yOxW9EeBng5MSMRW5wfRQ/4dIxeLq9SgeEA3rSeCHnZGC1eyVVKBJy/WHx0k
0MOzfiHxA1xUQHTdCpwroIf+lAdJG0MUYCWHVujeV3r4TtsiiEaPAtTYlR6k
19BD3mYX27hicuBQz1O12kMP5+VkmQoTyYCS748U/lF6iK29ztglkIFDOb8H
enP0cDs6XixO8hBNjRkmvjqghx6tOnGbGvvosNObci0pBnjA/kX6wodtNJ/z
XJKzMgOUGHO4wfR7C/X7QeYXrs0AQ9dfVvOzb6G8Kk5aI2cZ4PjgivuriA10
boqdl9aWAdLl7TS961lHy17XbSu6MMAn55SVHETXURtyiW+PfRlgOOVFQ9HW
VVT6c09C3hMG6OhG5zwkvYpuXQv27QpngN/Vaw2TQlfQhF9/j0ukM0A3Hj/J
RLt/aO+bvC9NzQzwlWir6C33JTTb4mL8vy4GiNSt/Q28vYh60zLd5R1hgDWL
d8qC7i2ghNvu6m4rDHDsYcbfC1lz6KSoIEfcHgMs4PTl/lY/i5b0tq9V0jDC
zdB/CwILM6gFqlTCyscI7Yg3A4XP/kVFV0ZjNCUY4c8/5k+sQ6fRlbdR/zkq
MsJ7Ch9Cv7dModHMqyqfTjHCTz6zTSEOk+iv4c8frdwYoePnE+71rWNoWqRr
1KO7jLBn01WpVm0Mva3L5ZkTwAiv2bd6JKePoiz5vko7sYzwuHly3Bv2P+jI
ZRmc2BtGqKTCFl1NO4J+wA+SjHMZoXPV+30f6t+oqZ92YUolI/z+NBek8gyh
/IoLEQ2NjLDqyoe9MMVBdGE8+RapgxH6R6gOMZsOoOFGB8dOTjNCxdqtnT8p
fegPnpr8SRYmmCzxWi8pshv93W2j68DNBAuKVVdrZ7rQ5ZcrQ0MiTNDE3P4y
i34XykUjztilxgTxzexRPqydqGxNRcYZlAle//b1ubFfB4r6W2r9MGCCK7O4
14Xzv1CXleDrNbZM0MhKpg/99BP1KRAiR1yYYPvPzy86C9rR0GulCaXuTJAa
xpc+LGpDi0ZmGwsDmOCN0vNZ8m0t6P4PE8nUbCZYmKgXGn2pCcUFT1XyFDFB
S3K9mcjoRlT85EPLuG9M8J1vUuxcWwNq9LUwKLyVCbal0fAtWX1HL3md5qfr
ZYIKpfzPtLLqUY9jY58C/zDBBrW35lKbdWh8JvvE/RUmeLrW/ql6QS2aa//+
/sYuEzxFk1xNiatFK3h02b2omaEPhdlKi08NOvHS++R1bmbo0fW8osiyGlXy
739jjTLDsUny6vwXFeip457HuwyYYWKBJH4xsRy1WqH/ecaMGbrwkSRWCsvQ
B9e0D/RcmGHR8Bn+C8ulaKRYd1yNOzOsHFFU0+UrRbNG3I4hPsyQfPHkRUbT
r+iP86l2aqHM8MnJzmyL+s/ob9bja4UxzPCx+7KEO/1ndPnHzzC5FGaIL98x
jz5fgnKeJC8XLWKGH5nQIbhXjDofc+Fh6z3Kb61HRze8CL07s1cU/ocZ4ppd
X4dvF6KhmXGn6WaZoeus5ZWViQ9oEU+jz+EuMzR3qov+2pWP1nVfZvWjZoFq
3Q31wf3v0d6XW9kbLCwwUdtF8dVUHrpHLdu7KMIC35omvfbiykVZa2rdr8ux
wOCEXMYq7RxU1P8i9ZQaC4xENx4YX32HGq6Eqw0bsMAmrS8UOl1v0fgRUvQP
dxao93L/dfxWBqrtRGRi82WBfwl/qPlOZaCjUyFPrZ+wQMpTGS+Pxaajsosi
vpPxLBCq/PLlMExDf3rc+iebzgKvF35r2LzwBr2zVnbD8z0L3DEd/C4ul4pi
uxaXDjAWyK+3x824nIS6PErr1f3BAsXkpJsoxhNRBsrFs2HdR3pTccJ9v1+j
5xmCdbhnWaD/aOGFz/9eoTPcpVIq7Kww5nLVTYPHseiLZKp0X35WSN14mMn8
LQZVETbjxSRZoUuZy03NrWjUX2qOyUSbFTIPn7QuCotCRd5rBEfrsULtxt7A
B38i0QaFwMP+s6zwWHenTOGJSBSnwb9yxYUV9mWPt34gi0A/f7t2M/8WKwwL
//pfZX84aot8nlzxZYWeMZGVfeVhaJbumb5HL1ihVViQRlL6c/SERUDF6y+s
cIRxsBc39hQd6W1VH61mhYcjBp4ctE/RIFueQskWVqh61UzIQj0IbXcsTv/0
hxUaijIHGOY+Qf+bOuDdmT3SA9NlHkuPUe7rxrFwjRXmTgotFGg9RpU1vepc
qXDw7NiCxPf2RyjVfW6yUHoc9BIMpC6NeIj2llcRC1hwcEw148aI7QPUDzB+
WeXGwSiVDqN9Dj/0u35WTsAxHLylq2UxxeiDJoQYTWWq4GDuuTu/v4rcRW/8
WBZpPI6DKSGnml9CbxR3Bkli1sFByqfNQTuv/kPHX070KRngoMnDzfNzP73Q
zx3PCedNcFCGac7sNasXamvZ+yLRCgfrL4rJsLz1QOVf+f+ovHjEb+adGrF2
Gz3sF6Udc8DBaf87HCb5t9Asu9sBUjdx8Pr+Fn/+STd0yZnuv5JHOPjQ9A09
5+ZVdDlVtxILwkHF0LBhHcqr6L+BANqW5ziIcHEJDHK7omtnt5PGYnBQ53TH
xXF7F3Q9VH16IQEHRWc7U3IinNGN755KWylH+kkMyYENTui29lw9Sw4O/uv9
aXHK1BHduSvJyluAg46y482xSQ7o3kcnG4liHDyIawjOGbuMHkgNLWpX4CBv
+4NCSftLKBWhlfP6LxzUXLvvf3RjoTRn6Rzv9OBg1k0X30dT1ihtqO77R4M4
SEf9mPfZohXKQFYJ4idxsMn3nmQ4ryXKpL39PH0WB19Oxoe2oedR5rvq3flL
OFj8/YFBzU0LFLdQcK1uCwcbF89NuI2YoexSc8Xt+zh47WysWKCYGYp3ktwf
oGCDC6+29Og8zqGc/alRy0xsUCvlJZcv8QzKV/+yTECEDU6vMYz8fGmI8h+2
UMlIskH+rGrBg8enUUEturNqcmzQR6moivyRASpcFDBhpM4Go7ze3Rt+pYeK
zlccs9Jig6yuaZZ/i3VRMcltH0fAdvS++dCo0HcKlUz2ZPI1ZIMyknfFqbR0
UOm+AqvAM0f6wiFcEz4nURn2ubQICzaocGjjkVYJUfkQJ/W3l9jgte6tqs0q
FFW5Y2Hf6ckG1dSXLANmT6BqhS9zft9lg2HfHsswdWmi6nMtKzN+bLDC3DVr
r/E4qumg++zwKRtUoVuuAZ3q6ImkgA6GMDYYMfg++Ou0GqrVW8HHGckGL5/9
Pv6bSg1FTNSL5BPZILOkWWmBnQqKPvPcOf6GDe5E5FklxymjsLZA91QWG/Rr
jnhR16uE6mhKDth8YIPirnd8B0YV0NPiXBTPatlgoEdN9pV/Mui8k0GOdiMb
vJt/ttByRhqNSPc5s9zCdjRP2iWvZqXQHsH+RJseNvhq+EVjEL0k6nuJ7iTL
IBu8tRR210tKAuVP1vxbO8IGz9rNCx8/I4468bxWlZ9hg/CW4l9SiShKfaF5
YHThqL88SwIn10TQnPjtR3H/2KBluI6JmLYIuoS3bT3YYYOaTVKzsxVCqB8L
35UOZnbID7q2P//lRQVNjRmD2dkh6eTbVptfPGhtmN9HLS52eGma8QtzPTdK
Rz+8nynMDi8unvm89oMTfW/AlHVBgh2eprtua/ObAz0TTDRilmWHPfb+s0rb
BDSWMiX+rio7rKxjRr8b49HjOm1EOU12KP3Hcv3XY3Z0MGB//A+RHd6eED6x
iLGhIgeXFA312eFQuewctwUO/bAl2MRnww41L7t1WicyombHz976dYkd/qCr
vyntw4CueT8iPHVih6+ELz8tvkyPaq/+cVi6yQ6br04oCJvToiPKONpMD3Z4
itfEQuIiDfrEAxZYe7ND4xfdrZK3qNGmxbTt6ofsUCaAoPuyiBK9Kd/xxjuQ
HSYv7jBr/qFAWW6S68uGsMMo52/+DpwU6PkZx+iYqCPMvtI7mEyGjo2Lyrlm
scOfKvvBbyn3kCARiw7eXHbYH7Qtfr9vB5F2CPT5WcAO05a3h1593UZu/Z6o
0/zKDimejvyoSNxE2PgJNxbL2SHRpF2mL3kDKbHVxWVUs0OztZpoh9x1ZKcv
y47xBzukZ4rY4hpdRVI4eyiq29mhraUjhT/9KgItqXPvdLHDb07Mo2XaK8iz
zivrv4fZoZH3wenL35YRQptkRBHpqJ4PhyeA8AJCtqz09scaO5Q3mPpD3zOH
LLBrV0xus8O/GvKBlQmzSP2Fs3PcVHiYbhpjZWD0FynysyFXpcfDQaoVmgmN
aSQ51ZnblAUPu/IRwRXFKcR70kf/MTceGjAzqCJ6E4gT7ZNLSQJ4mKBFvOvp
MI6ckQ2/81kUD3V+T8rRB48hkh5pGbPyeCh4uF4h9PsPwh6T941SBQ9dYm2a
TzmOIAefS34JHD+Ka9rSlm0MI727TQdmJ/Ew87rQdIT5IFIr2MXhpo+HDNmy
MX5cA8iHk7/lg43xUGb+dlfPXB/y7Nk/2zJLPCzrWMrQLetB7uTtenbb4uHi
5dFasc/diEMb9fOly3jYKbC+R1XRhWjieb+K3jjKt4O8JG++AxHXEG8n3sbD
FLuLCW74DgRnozBldQcPK2ZVJmT1fiEzqTr4sId4qKLXF/bueRvSXWMi+zYQ
D4OGH461irUi1ZNWJ7EQPFSspLoT2v4DeS178/ZqNB42IX8qu8ybkGBT72Dm
BDwk+zontynbiHh5PEqRSsHDsH6KsDFcA2L0Jabl4js8TAviMXxJWY9oDKSM
e+fj4ZMCGktJ1jpEdO/d9suPeBhBts4qJ1mL7JyskKovx0OltOrRm3eqkWmX
BnSkGg/pXcTeX7TEkM5nvyy3vuPhDS+Xax3dlcj7tslA+V946N9LiBCmL0cS
lpcS9XvwkFW3+L1NxTckCL/90WEQD9krqeROPSpF7GyYR2Mn8bDwzuqSofIX
5LQ/1+aHWTyMS7uPZxb6jKi9EWFpXsJDzarctBaeEoRpSp24v4WHLwk0LwZU
i5EtWmjBdYCHxR2YI735R2RS1uiGMiUBvuJXJK3dL0IqPewTrjAT4HodnR9D
bwGSF3Ot8BE7ATJ+ps2+65SPxH/xanjNRYADOfRRqWTvkVt7wWttIgT4L79O
bfBWDmIrFMU4I0mAI15bzE7IO0RfJ0mUQp4Apdc/sLzgzUYEQwrPaWgQ4O6s
WTXhIBPJ/1BQt61FgAFslgru+ExEq+e9RiUgQHttC+nzqhmIlWgOv64hAZbT
QK2NyDRk8nT2S9ozBNh+K9M1K+kN4nU7i6LFnAD70j/x7UmmIhEVaTNmdgTY
9vww9s7tJIR/IvUihyMB0ilNPRaSS0Ty6FPa+68QjvazSsuD9QSkwep1yeXb
RziL6XvVp3jk/INXUmJ3CPBTcUnAtew4ZDwzLnHalwBdPtfgLd7GIvvLUQHu
Twhwsw0VqPkejYRyRa4qPTvi10Sb0OkohBuNcF0LI0CjH21K/3BRiFpYqIlf
HAGeo6TLN6J5idR+DMHQRAK0UHt/LyHmBXKuP1iF4g0BCkKLiAnlcMRNIpD7
eQ4BVj3tZ3dLfY7sGD8OMyk4qt95cVH7ZggS4vXogLWYAPNqH8of03+GZGF+
k/HlBFhWHElYEnuKqEzfs7atJkDhC/uvwyWCkGom3x8C3wmwNkszdVYlEBm2
uVOU1U6Ab5oGbtbfeozcCPASu9ZFgMH/2j+dSg5AtrI94uX6CdAtgG+G9t0j
hLDm5l88RoD4tM1QpnJ/JIP3Jsl7mgAXGVI8Z+z9EKWT151OzBPgAxextTX2
+4hJxJXT1WsEWPGiMv5Tjg8yWOJcHrhNgNS/GF2pnt9Frg05KhgcHPkjN+1d
e9cbCZK2J7TTcsADRbunXL7/Iexn7Z5FMXHAq9cT/EJCvZA0b9ud82wckGhb
Rcmb44mU11qNDvFywL9S298SKDyQ07PnLd4IcUCKKxt1og9uIb2sFg1O4hxw
UIyf9wmtO7JidzZ/9hgHLKD5nn7s3A0kINBUqECFA9JQO7pPMF1HWPKMoz2O
c0C7ObOEgf6riOymge8m5IDvXz+oLE+6gpQK6M+X6XFAD10MWEW5IPq6uvYP
jTjgm+O4+y9inBGnKKhLfZ4Dzih3Xg0od0SWv6Jfmy5wwPa0vwTxUQfk4QhR
NvwSBzRe3O1SZXVAEuVO4PBXOaAD7b0zVhyXEGvjtsiqmxyQbTOhE366iBBu
OrLd8OCAn0SpzcscbZEXec/Za+5xwHuDMswXFq0Rox8CMW4POaCVtVMVrtkK
oZn7iOcO5ID/RQbEBBRbIgEyg4Tb4RyQ5+ycB3W+BYIY3orjjeKA+JIo24Uy
c2TnGgVnQxwHfGdLHXKsxwz5L0eWS+ANB2zajR/PkzmHKDVVvWrK5IDrRWIW
/d/PIAt/zbnv5HDA7qYUTNTYFHGV8uNp+XiE3/ZeTA41QsQMWBPvfuGATlNE
AblThsioayavaPlRvpFhe4DxNGKT3cJ3r54D/sxxaRJq1EM4Gy4nizdzwHSj
Kbuob7pI59Qq/682DphHW5fWU3oKMZHgF5TqO/KLXOe4z9BJhF6vKLVziAPy
9onZfNmHSIOLrtDDUQ44wNcrEyYLEZjlJtwzywEt+1oED04hyH4dWXrA0lF/
KJQNnPq0kbKJWBH5VQ64FcldQ/TXQlTFKkUD9zjghdgaC8LmcWRZxyxTgZwT
Jvg+lHneooHkO02JDVJzQgumS4tOH9QRyQxmCWVWTvgW198Um6yKTNSkvx3G
c8IbU6YPcrJVkLQxdckQbk64biSb/qpCGeEVsZf6I8IJPXL/k/pJr4T0wZV3
oZKckDLv0jJngAIS6xAsrSHHCSOulW8QyI4hzGkfZF6oHen/QIXWNWSRH5hO
nuYJTjh1+8IT/gVpJPhPr+wkwgmpm8pazT9KIWRCh3LaBpwQns+VmLwmgVSi
MfnTxpyQ49zd3g4bceS+vdSx6HOcML40aWTFWgxZTTmrMGvDCYkMEaQz90SQ
osqJD7H2nHBoceK9XZIw4vbbRxE6c8LUFsOFoEghZJo/TemVGyf0/n7fkvkx
P5JJVPuo48kJefy2Ygc4+BAHuyblJW9O+OL7cNp/FTzIQNKyit4jTijIrEfI
1+ZC4suDPi0HcsKOAIYXH9k5EfMhbrXkEE441plCbr5FQFp5T6qvRnHCwvrD
yIQFdqRTsFCS6hUnLJP4KTU9xYb0iwpwcyRzwgcDGDtxEYdMyG7vaGRzwsUi
ZRkFfRZkRuHqgsF7TlgqGO34MI0JWVLp+X2hiBNuvoi4ep2NEdnR+lh9v4wT
LsTHCtuq0CFkQKg4DOOEXt8Lm+VGaRCaUy8yk+s5IYVSaYJCGjXCZnw9uKqd
E1olX+3aNqdEOM/2+fzs4oRdFvHtO6coEH4Lveuj/ZxwT1GwIfkUOSJ9UcSE
YoITUqmnRDj3HRAVLr9E8DOcUFNduPKGxD5RzXlfQXyRE9ox6lOthe4Swc0B
Nv3NIz9pg+6/frVF1L1tQGm9dzQ/fVHIFeIm0ei/z2tXybmgRP52BG5tnWjl
F9X3nJEL5u2K1tElrBKdAt3L3nNwwSBKLjIm/39E9zDDlDYhLlidZcjaoUIi
+sZIBJBkuKBke6y8Vvc8MSiJ3JlNjQuekEs4eNExQ4zM/K2ninLB1hejouIi
08Sk99+kLU9zwcYDPcXzZRPE7E9xjD7mXJCUJZZ4MW6MWFzuuZRgxwWVzAcC
wq3+EKvqTDvKXLngC6j8snh+iNjcIlMy7MEF436HArI//cTuLupXB/e54G7O
9dG7kr3E0aGxe8JPj+LJLH5i37qIm/OvgctrLjgu8su45+RPIsueGXVOARdM
s3nx5R3WRJRgYmiZr+GCDvTW7A9i64hE/tpIxV4uKN/9WoZvvYo4KSY+MjvI
Bd0fvtZwMq0khskFy2X94YKe5rjLlBXlxEEtowbuWS74Tv5vcUVfKdHXpnOX
fI8L9lZkPCUsfCIKO6oZVpBxQ80nSxQ1A8XExmvx8XepuWFbpT/ffs9HIqev
rfI8Cze8+1+m4amlQuLn+HHXbhFu6Hd6wlgvOpdol6pbEiHJDUFFkSKjUg6R
Kjub3FCOGxruahMqRrOJ5z/fSK5U44bNkzWxpLtZxJWulY5sA25I3hft2nUp
jajARoncc+eGzmMJXzImY4m93FdCVb24ofuWd0EdFkN8INzYt3iXG/6JedP7
LS+a2KoY5uUUwA2vlFShv/IjiTfO4HOMY7hhjzPtJevXocTsMDG84DduqNSs
Mv9+PIAoRKM7W0vFAx2OCTXKHd4g4lYevRun54G3herD7OyuE8lGyq9QsPLA
MV3Tk2mdV4njn1XHT/LwQJNUpbwQqivErCtiQ9XHeGD2L6szz20ciNLfKdqq
rHhgSbHzGe9KC6JSUE1RWQ4PDFQpIDEHEImQAvgWm/DCoqbMIZs4JiKXUanb
2wg+2I7rCrj+NU/b4b6KPamMH976p34qpd5Y+2+FRHAcmSAczapxdW8c1Rr9
y/M+WkkIerxcWg2j99E6rdiQaHhMGHq/DFi4I8Gsha1q7262C0PdlHfbRS9i
T9yWVxnsuCICdXDSNh+lRE6gSy7dNvSi0FzovAChN1VTX5zblDlDFP5J3fAX
rhXWlAkI9a09LgaVuqxH2ljSj8tdOYFJDIrBApaA0tp5tuOuVdeCSjzFYbl2
Ufrit2ca1WndLv84JCDb6er6Y+dI6us5h5uKXyWge2h5miG3hbqLxHv6RFNJ
GHTjseiZ5Cq1FdkYjeJlSUjExMIo3LjUvmXtjq2HSMGGtsa7l9h8VS/qikFt
QWlYx3SR7tVQnwq/+7NvCtXScIZZD4ZkSahwMrh9NLWWgQIdKinZvn7KWace
3F+2kYFUuaO3KQV8lVUeRJyKsZOBmV6lhbKy3spnlot6+h1lYHnSc/Xbph7K
z3rXt53dZOBVOd1dMUtn5a2MRzr3H8tA4ehRR1VBY+VB7Ziu7Pcy0BYvpxJ+
jVf5mndWsuEHGVhyLJpJQJxLeePD5ysLRTLQIvpgdEKfoMwu2r+p/EUGxkW0
R+WIsCob0wnwV1bLwCu+tMnBlhTKFd3ZLl09MvCC6DHZWftZJSOW0mN3+2Xg
No+vXZDGtFK/QfMG95AMpCYV0N73mlBaK5sPsR+VgX58oQxx7b+VjqUrFczO
yUC8+mhRysMOpYrBk3fDF2Vg17zhFP2bdiUjggVQXJaBafNrHeytP5Rcn3l3
3FmXgTN6Zgo/g+qV1qqDE7m2ZKBjcgQb11qN0pOdV85lOzLwUeKybfANTAmn
lit/aV8GjhZOmp/2L1dKdS9bPzyUgRw9RcrJjKVK/wNNHMXh
       "]]}, 
     {Hue[0.9060679774997897, 0.6, 0.6], LineBox[CompressedData["
1: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
J9M4dGRIELOTq9v20idCs9BZ5fO4AAYpgH+hKREOjk4cDcb5MPspNoNSCyIk
YncrIsd4saDmUdZqSyL0rvf1n3/Bg1Umhr1rtSfCrbT/1Df1uLCBgPPePZeI
kE54UnRAkhPbsZcDI65EuHulafaJIAemK/+rc8mHCGOYHoxe1GDDLrClpG3e
IsLlUvFW+hwW7Pb6DU+yoAM8D2OXcUrmg/nMTcMWSYSvjT2JLmv0WHfGVCvv
IyIcemt2hzaGDvsbWfJaOJ4I0+e+Usxp0GIaZ23UlV4TYUJAPu5fTYVZaiuR
a6YRoVcRsUQ/lRLzFSL/ib8jQvfHaTGPH1Ngn6cznM0LiHD+MQjweUaG/fnp
p2xZfKBPYksNh92+3krh8R2bMiKMLuU0Ucna1Tt8dz7e4wcRik6mvOQL3tI7
5Vhp59tIhCs2/FrXmf7pXTeKlb/7mwhn/MYvd+f81ctjV/se00OEH1mpujIl
1/VIfV0XXo0RoTPM00kbXdFTyAxYySYR4d1oK9bi/iU9t+vCUWV/ifDnp9YH
LPwLeh90vos2kfPDbo5G+u+Ds3rTVJdLehn5oZxS7qLp1pSe9G8Gi1lufigi
Y0p313lCzyUpb/qfMD/MLUi7wsM9ppfhdDqYXo4fnsoLaS+iGtEbO7TBy6fG
D9X/ZundtBrUE9tM+iiD80NV/he3r7H06dlXY0Zax/lhBbGj5qNgt96bmJFB
o9P80MGx5VPe3Q69QctQv3MX+eHanWu8I5J/9AREZVkuu/DDe66ksTcsrXov
iq5jYbf54XR45JwoS5Mer8lX97eP+GEpF9u/ous/9LpVAhMs4/nhIDfvfWvz
Gr0X/AbltM/54ZezmZoyut/1BEi/GV1T+SHL+ZYOMfBNTyR26oPiZ35YGW85
d6a0TG/EP7dt6Cs/tPM1M30CS/XSHLy3Yiv4oewSR0dG71c9SdV949Vafrg7
JbMEjhXryXXyzHzp4Yejt2JXskcK9OYq+9muDvJDrq6KiqT5fL2cd2laxDF+
+PXsNa3bVPl6ircUI+7M88OBoknbtvwcPVWBY9JH9g/4J7ADR7J3enqOvpca
JQRgaHPAHdaQ13q7JroPA2QFoBpr1q+u6Zd6larkRQqKArBK9+L9kEsv9CD1
Q6rHmgIwUz+GYunlMz3DrIz0MyYC0IYtR8xnOE7PfOHPSP81AcgZZ7mhyhOh
Z39bxXax9CCfN8NAiLe3nqtR2wZ1lQBcVIlK/HPcS8+Hy+uxwA8BeIRVX65L
6YZeRF5BlfFvAVgz/DHlu42nXsGosnjGmADsei5TqPHxsh7FCaXp80yC8BlF
89ZNdFEvg1/Bq9pGEObZu/dJbBnoTZVLhj0lE4KfbBU8uu9x6w1P8WXHKQvD
C6FpOv2rJbrHlWpfGB8SgROuIWtkURd10aru9t9fInBmtXS8+b8VnWsKKr2t
l0ShPHNjMGiI0sEXnNut6MXgEa9uHR9uHp1jEgQz5jQx6P80bPCn1Ftt2eAo
/2pNcSgcQfTi/66iLX9JG0n2isM/m7t+NuSFWi6VVx58viEBPSckc0pn1bSq
Utqdl7klYVNWrWed03vN9az9v0pfJCH715+RF+UENJ0ls+lfmEnBT2kh5UUl
8RorcvEahUtS0MlHrsL87bZ6Scb2yHqENCy+5ErDsXdF3dpAHOoKyUAl6oE3
tI861AQ8wksUq2Qg2w/BeNqOw2o8DO4FZudkoVaWS6B0e7xqxtG7t5esZOGq
Bf78ZvwTVZW7j47GX5SFh1TUNORlHquaL+V3dDvIwpMJkhHStyJUwzvX/zm5
y8L+exY7fIqBqptpQfq378lCXnGZ881jLqq9uvF/MrNl4Ut9yjGcXUf1im/G
K+O8g3h29c+87JqqG3lFl+bzZaH3zFw091U1VQ6x7r+Hi2Xh09sMFhlrSqon
6AQFKqpk4cxEfAFVnLhqeXum858OWRhanMylZMysasLy9ZBftyw8MStrFDtO
r9pt1LBB6JOF786yGxiO06iulc5F2A7LQimj+NX6MXLVQ6nKuTOzB/x+VyxF
dq6rlPce8YshycIbPBYdJaarKiZcZ4DSkizclhg4qcGyrOIS7tvqsy4Lo08V
2SSkzaqsVYW94N2UhYnT9a9QxJRKyNYzp9ItWWjAx7HM3DSuwqb2XsFmVxYC
DSjWaTuqkuxRur6/Lws9o5nr3usMq/wPOB/kVA==
       "]]}, 
     {Hue[0.1421359549995791, 0.6, 0.6], LineBox[CompressedData["
1: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
l4qT71euHx4e4T6G3uOPFor/B6Zx/jo=
       "]]}, 
     {Hue[0.37820393249936934`, 0.6, 0.6], LineBox[CompressedData["
1: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
R+5/Eeg3HA==
       "]]}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->True,
    AxesLabel->{None, None},
    AxesOrigin->{0, 0},
    Method->{},
    PlotRange->{All, All},
    PlotRangeClipping->True,
    PlotRangePadding->{Automatic, Automatic}]}], "}"}]], "Output",
 CellChangeTimes->{3.6126519346744995`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Creating a Program", "Subsection",
 CellChangeTimes->{{3.612652324765609*^9, 3.612652328774272*^9}, {
  3.612677028704206*^9, 3.6126770346111064`*^9}}],

Cell[BoxData[
 RowBox[{"Clear", "[", 
  RowBox[{
  "v", ",", "n", ",", "m", ",", "k", ",", "K", ",", "Nt", ",", "u", ",", "x", 
   ",", "X"}], "]"}]], "Input",
 CellChangeTimes->{{3.6124741960386515`*^9, 3.612474201449249*^9}, {
  3.612474840719448*^9, 3.612474841033656*^9}, {3.612506143408664*^9, 
  3.612506143646824*^9}, {3.612506176750831*^9, 3.6125061772811832`*^9}, {
  3.6125675869996233`*^9, 3.61256758839255*^9}, {3.6126327154021597`*^9, 
  3.612632716253726*^9}, {3.612634052451976*^9, 3.6126340528952703`*^9}, {
  3.612674607772254*^9, 3.6126746087549076`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"K", "[", 
   RowBox[{"x_", ",", "y_"}], "]"}], ":=", 
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{"-", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"x", "-", "y"}], ")"}], "2"]}]]}]], "Input",
 CellChangeTimes->{{3.6124757756903524`*^9, 3.612475800854081*^9}, {
  3.6124760203271627`*^9, 3.6124760284565673`*^9}, {3.612477252868359*^9, 
  3.612477257782626*^9}, {3.6125063363297133`*^9, 3.6125063370241747`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"n", "=", "4"}], ";"}]], "Input",
 CellChangeTimes->{{3.612474173418613*^9, 3.6124741757031326`*^9}, {
  3.6124751515776644`*^9, 3.612475151793808*^9}, {3.612479211223221*^9, 
  3.6124792148066034`*^9}, {3.6124793391292686`*^9, 3.61247933940145*^9}, {
  3.612479450416253*^9, 3.6124794511377325`*^9}, {3.612506859837739*^9, 
  3.612506860052882*^9}, {3.612556193385225*^9, 3.6125561937044363`*^9}, {
  3.6125562323839507`*^9, 3.6125562333335824`*^9}, {3.612567023982095*^9, 
  3.612567024297303*^9}, {3.612631754279673*^9, 3.612631754422768*^9}, {
  3.6126318372788515`*^9, 3.6126318376631064`*^9}, {3.612674537300894*^9, 
  3.6126745380313787`*^9}}],

Cell[TextData[{
 "We are given",
 Cell[BoxData[
  FormBox[Cell[""], TraditionalForm]]],
 " a set of points ",
 Cell[BoxData[
  FormBox["X", TraditionalForm]]]
}], "Text",
 CellChangeTimes->{{3.612565300518283*^9, 3.6125653025966654`*^9}, {
  3.612565339097931*^9, 3.6125653709521103`*^9}, {3.6125655681373377`*^9, 
  3.6125656430051203`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"X", "=", 
  RowBox[{"Sort", "[", 
   RowBox[{"RandomReal", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "1"}], "}"}], ",", "n"}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6125656498288035`*^9, 3.612565671087937*^9}, {
   3.6125670277626066`*^9, 3.612567027955735*^9}, {3.6125675216882033`*^9, 
   3.6125675373306046`*^9}, {3.6125675934969435`*^9, 3.612567594250445*^9}, {
   3.612631760082531*^9, 3.612631845392245*^9}, 3.6126473215737033`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.2259948490948278`", ",", "0.27258489389450036`", ",", 
   "0.36831261151702854`", ",", "0.7794545338464165`"}], "}"}]], "Output",
 CellChangeTimes->{
  3.6125656728060784`*^9, {3.6125670059461036`*^9, 3.6125670370287685`*^9}, 
   3.6125671867867107`*^9, {3.612567541327261*^9, 3.6125675487051644`*^9}, 
   3.6125675959735904`*^9, 3.6126310262553864`*^9, {3.61263180538665*^9, 
   3.612631815921653*^9}, 3.612632388862543*^9, 3.612632720176334*^9, 
   3.6126442273771334`*^9, 3.6126472828479843`*^9, 3.6126473222701674`*^9, 
   3.612648024415514*^9, 3.612650864067947*^9, 3.6126513718658857`*^9, 
   3.6126588073554144`*^9, 3.6126742251878185`*^9, 3.6126745442935963`*^9, 
   3.6126746204416714`*^9, 3.6126754494443464`*^9, 3.6126773025199633`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Clear", "[", "Newtonize", "]"}]], "Input",
 CellChangeTimes->{{3.612674709780023*^9, 3.612674716418433*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Newtonize", "[", 
   RowBox[{"X_", ",", "K_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "Nt", ",", "basis", ",", "n", ",", "m", ",", "temp", ",", "pos", ",", 
      "u"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"Nt", "[", 
       RowBox[{"1", ",", "x_"}], "]"}], "=", 
      FractionBox[
       RowBox[{"K", "[", 
        RowBox[{"x", ",", 
         RowBox[{"X", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], "]"}], 
       SqrtBox[
        RowBox[{"K", "[", 
         RowBox[{
          RowBox[{"X", "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", 
          RowBox[{"X", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], "]"}]]]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"basis", "=", 
      RowBox[{"{", 
       RowBox[{"Nt", "[", 
        RowBox[{"1", ",", "x"}], "]"}], "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"n", "=", 
      RowBox[{"Length", "[", "X", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"m", "=", "1"}], ",", 
       RowBox[{"m", "\[LessEqual]", 
        RowBox[{"n", "-", "1"}]}], ",", 
       RowBox[{"m", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"temp", "=", 
         RowBox[{"N", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"K", "[", 
               RowBox[{"#", ",", "#"}], "]"}], "-", 
              RowBox[{
               UnderoverscriptBox["\[Sum]", 
                RowBox[{"j", "=", "1"}], "m"], 
               SuperscriptBox[
                RowBox[{"Nt", "[", 
                 RowBox[{"j", ",", "#"}], "]"}], "2"]}]}], ")"}], "&"}], "/@",
            " ", "X"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"pos", "=", 
         RowBox[{
          RowBox[{"First", "[", 
           RowBox[{"Position", "[", 
            RowBox[{"temp", ",", 
             RowBox[{"Max", "[", "temp", "]"}]}], "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"u", "[", "x_", "]"}], ":=", 
         RowBox[{
          RowBox[{"K", "[", 
           RowBox[{"x", ",", 
            RowBox[{"X", "[", 
             RowBox[{"[", "pos", "]"}], "]"}]}], "]"}], "-", 
          RowBox[{
           UnderoverscriptBox["\[Sum]", 
            RowBox[{"j", "=", "1"}], "m"], 
           RowBox[{
            RowBox[{"Nt", "[", 
             RowBox[{"j", ",", "x"}], "]"}], 
            RowBox[{"Nt", "[", 
             RowBox[{"j", ",", 
              RowBox[{"X", "[", 
               RowBox[{"[", "pos", "]"}], "]"}]}], "]"}]}]}]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Nt", "[", 
          RowBox[{
           RowBox[{"m", "+", "1"}], ",", "x_"}], "]"}], "=", 
         FractionBox[
          RowBox[{"u", "[", "x", "]"}], 
          SqrtBox[
           RowBox[{"u", "[", 
            RowBox[{"X", "[", 
             RowBox[{"[", "pos", "]"}], "]"}], "]"}]]]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"AppendTo", "[", 
         RowBox[{"basis", ",", 
          RowBox[{"Nt", "[", 
           RowBox[{
            RowBox[{"m", "+", "1"}], ",", "x"}], "]"}]}], "]"}]}]}], "]"}], 
     ";", "\[IndentingNewLine]", "basis"}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.6126532455045776`*^9, 3.6126532976161985`*^9}, {
   3.612653393596018*^9, 3.612653413447206*^9}, {3.612653566858719*^9, 
   3.612653567399078*^9}, {3.612654733604848*^9, 3.612654759108791*^9}, {
   3.612654791826846*^9, 3.612654852028843*^9}, {3.6126551537910337`*^9, 
   3.612655174318673*^9}, {3.6126552242088156`*^9, 3.612655231924943*^9}, {
   3.612655345747341*^9, 3.612655367312667*^9}, {3.612655405830264*^9, 
   3.6126554375453253`*^9}, {3.6126555712974586`*^9, 3.612655575331139*^9}, {
   3.6126557558854265`*^9, 3.6126557628740687`*^9}, {3.61265725412957*^9, 
   3.6126573592070065`*^9}, {3.6126573916825805`*^9, 3.612657410479065*^9}, 
   3.6126574694062138`*^9, {3.6126575017056713`*^9, 3.6126575188100348`*^9}, {
   3.6126575489163485`*^9, 3.61265755033329*^9}, {3.612657598369201*^9, 
   3.612657621619647*^9}, {3.6126576631062083`*^9, 3.6126577332911425`*^9}, {
   3.612657793279996*^9, 3.6126578868931875`*^9}, {3.612657944346691*^9, 
   3.6126579934012785`*^9}, {3.612658080390788*^9, 3.6126580910938997`*^9}, 
   3.612674567937792*^9, {3.6126747031175966`*^9, 3.6126747033817725`*^9}, {
   3.6126753749768724`*^9, 3.612675389391448*^9}, {3.6126758586479387`*^9, 
   3.612675905206869*^9}, {3.61267595990621*^9, 3.6126759600803237`*^9}}],

Cell[TextData[{
 "This is probably not a good way to program this in ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " since we violate several principles of good Mathematica program design. It \
is however a transparent translation of the algorithm in the 2011 paper and \
it should be possible to create a matrix/values based version for use by \
Matlab programmers."
}], "Text",
 CellChangeTimes->{{3.612681674606044*^9, 3.6126817966644955`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"newtonBasis", "=", 
  RowBox[{"Newtonize", "[", 
   RowBox[{"X", ",", "K"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6126586280952053`*^9, 3.612658636708929*^9}, {
  3.612677272024702*^9, 3.612677280201135*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"1.`", " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"-", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "0.2259948490948278`"}], "+", "x"}], ")"}], "2"]}]]}], 
   ",", 
   RowBox[{"1.477507714541293`", " ", 
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"-", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "0.7794545338464165`"}], "+", "x"}], ")"}], "2"]}]], 
      "-", 
      RowBox[{"0.7361527635309792`", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"-", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "0.2259948490948278`"}], "+", "x"}], ")"}], 
          "2"]}]]}]}], ")"}]}], ",", 
   RowBox[{"12.28435160594933`", " ", 
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"-", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "0.36831261151702854`"}], "+", "x"}], ")"}], "2"]}]], 
      "-", 
      RowBox[{"0.9799493958868878`", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"-", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "0.2259948490948278`"}], "+", "x"}], ")"}], 
          "2"]}]]}], "-", 
      RowBox[{"0.2686973153477286`", " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"-", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "0.7794545338464165`"}], "+", "x"}], ")"}], 
            "2"]}]], "-", 
         RowBox[{"0.7361527635309792`", " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"-", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "0.2259948490948278`"}], "+", "x"}], ")"}], 
             "2"]}]]}]}], ")"}]}]}], ")"}]}], ",", 
   RowBox[{"393.47110269382944`", " ", 
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"-", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "0.27258489389450036`"}], "+", "x"}], ")"}], "2"]}]], 
      "-", 
      RowBox[{"0.9978317218441832`", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"-", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "0.2259948490948278`"}], "+", "x"}], ")"}], 
          "2"]}]]}], "-", 
      RowBox[{"0.08486734209131042`", " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"-", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "0.7794545338464165`"}], "+", "x"}], ")"}], 
            "2"]}]], "-", 
         RowBox[{"0.7361527635309792`", " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"-", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "0.2259948490948278`"}], "+", "x"}], ")"}], 
             "2"]}]]}]}], ")"}]}], "-", 
      RowBox[{"0.39350148364046666`", " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"-", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "0.36831261151702854`"}], "+", "x"}], ")"}], 
            "2"]}]], "-", 
         RowBox[{"0.9799493958868878`", " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"-", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "0.2259948490948278`"}], "+", "x"}], ")"}], 
             "2"]}]]}], "-", 
         RowBox[{"0.2686973153477286`", " ", 
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"-", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "0.7794545338464165`"}], "+", "x"}], ")"}], 
               "2"]}]], "-", 
            RowBox[{"0.7361527635309792`", " ", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"-", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "0.2259948490948278`"}], "+", "x"}], ")"}], 
                "2"]}]]}]}], ")"}]}]}], ")"}]}]}], ")"}]}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.6126586375935173`*^9, 3.612658739833437*^9, 3.612658817197939*^9, 
   3.6126744603928003`*^9, 3.6126745251298065`*^9, 3.6126746537437954`*^9, 
   3.6126748259775114`*^9, 3.612674994878168*^9, 3.612675263394511*^9, 
   3.612675772459375*^9, 3.6126759148442717`*^9, 3.612675963547631*^9, 
   3.612676013259412*^9, {3.612677282567706*^9, 3.6126773071310244`*^9}}]
}, Open  ]],

Cell["\<\
Note that we can expand the newtonBasis so that it looks like a Newton basis. \
Right now it is in a type of Horner form.\
\>", "Text",
 CellChangeTimes->{{3.612677463272939*^9, 3.612677509692778*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Expand", "[", "newtonBasis", "]"}], "//", "TableForm"}]], "Input",
 CellChangeTimes->{{3.6126775110877066`*^9, 3.612677524714769*^9}}],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      RowBox[{"1.`", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"-", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "0.2259948490948278`"}], "+", "x"}], ")"}], 
          "2"]}]]}]},
     {
      RowBox[{
       RowBox[{"1.477507714541293`", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"-", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "0.7794545338464165`"}], "+", "x"}], ")"}], 
           "2"]}]]}], "-", 
       RowBox[{"1.087671387197914`", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"-", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "0.2259948490948278`"}], "+", "x"}], ")"}], 
           "2"]}]]}]}]},
     {
      RowBox[{
       RowBox[{
        RowBox[{"-", "3.300772297306144`"}], " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"-", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "0.7794545338464165`"}], "+", "x"}], ")"}], 
           "2"]}]]}], "+", 
       RowBox[{"12.28435160594933`", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"-", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "0.36831261151702854`"}], "+", "x"}], ")"}], 
           "2"]}]]}], "-", 
       RowBox[{"9.60817028666375`", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"-", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "0.2259948490948278`"}], "+", "x"}], ")"}], 
           "2"]}]]}]}]},
     {
      RowBox[{
       RowBox[{"8.209951678027629`", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"-", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "0.7794545338464165`"}], "+", "x"}], ")"}], 
           "2"]}]]}], "-", 
       RowBox[{"154.8314626796723`", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"-", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "0.36831261151702854`"}], "+", "x"}], ")"}], 
           "2"]}]]}], "+", 
       RowBox[{"393.47110269382944`", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"-", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "0.27258489389450036`"}], "+", "x"}], ")"}], 
           "2"]}]]}], "-", 
       RowBox[{"246.934728195921`", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"-", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "0.2259948490948278`"}], "+", "x"}], ")"}], 
           "2"]}]]}]}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   Column],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.6126775184095693`*^9, 3.61267752524511*^9}}]
}, Open  ]],

Cell["We may also plot it as before", "Text",
 CellChangeTimes->{{3.6126782805396204`*^9, 3.6126782856690035`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{"newtonBasis", ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "4"}], ",", "4"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.612675984499547*^9, 3.612676008179035*^9}, {
  3.6126782890842733`*^9, 3.6126782911086164`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
     "]]}, 
   {Hue[0.9060679774997897, 0.6, 0.6], LineBox[CompressedData["
1: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
     "]]}, 
   {Hue[0.1421359549995791, 0.6, 0.6], LineBox[CompressedData["
1:eJwtW3k4Vd/3Nl/jvZKkQgghkTEK+4QiMqRCZkofQwkVGowhlSFSSUimkGTK
7K6jTMk8D9dwTUllnkk/3+f5/XWe99lr77PWu961z1p/HCH7m8YOdDQ0NM/p
aWj+95RGPNP//pHwrMrrJ8HoAfnm+qHQ9Q0Szj5vRomceEDOLZAVW1wm4Qk+
W74mPj5kOXF9+8lfJJxOudKUpsiXfHxXUH9jDwnvKctuLE73J3t/j/KubSfh
w2+uUb7/9SeXBb/lwZtIeKTE/YOvTQLIqhtlxgVfSfiueuFDARyBZGxsvuH1
JxL+PeGXtE/UQ3JAwj/H51kkPIVJiWK4+pD8xZSDEJ5Gwmm7vxUcsgkiazWK
a/q/IeFv1my4VhSCyWc/25Rfe0TCQ5WVWOw3QsjGj5o+yNuQ8Jzg8s6B5Sfk
56cGzh4134lPakau0v8puXNz6ofYJRJu1Pmc9gIxjGzixiCyX4+EM9gKKLbK
hpMtLp+MpzlOwif49h0PexNJjt999sSG7A4fQVH2NQLPyENNJr2LUjv2WgHn
TdyfkW01PLh/CJPwNm9rPb0DUeSrRzLDmogkPJhwxsTyYTQ5baJIso6FhJ94
fvHNF2o0efJtdT3OQMI5PMvcN049JztxjzAUbhBxom5nOC1zDNn1L49P3CQR
592s/s/pwwuyV0vQjf/IRFzk+lgei9lrctgvz56lEiL+T699b+voa3IywelU
YAERNxRPGr/tFkduRPp7EjKI+Gl/ikdMzBuycO6eyvZoIn5vPjy0mzaRrNxI
OGwbTsSjnHVcVNISyfpT68/+PCLipQ8JsKr3luwtOHSV2YeIu7yIfjhxPonc
/CydXf0/Ik62f3rWGt6Rx7NjPb/b7ayfX0i7fTCZvF7/ZMTMkoiv3eO1DwhI
JovQ3iy8dZ6I+09LpKTppZDvuR+3zDxJxBOfGPuprKeSxYzrP3BzEvGlwAlz
5a8ZZFXXsj3JrES8MLNB4at2Jvn8k2w/GUYi7vyoNmqjOZP84MuzC7obHHiW
U97h1Ikscrvc5U2/cQ78D60tyzXFj+QpAz0HjmEO3LPD43V360fyX2e1lrg+
Dlz/+pflqzdzyOIpQimfmznwtBCvJt6iT2Sf3dO6v0o48CX1zBfNinnkaBlK
oXcBB65h91F+8FkeOUOvWYAphwNfJd7TqPiTR25/mL8gmMKB540duUL6mE8W
X7oXZxLOgT/8xPmVXbOQ3NnJNl1lx4H/ND69TewqJgdc/Uz+YMmB032+ePDy
2RKy9JL18xemO/5aqTfXQAk5dHe+qpM+B/63+O+9owWlZDVjs0hOFQ58YYm+
Rv9zOXmaSnt1Q54D5yv4Mf/lZAU51v2D8rg0B37gjrZhdnUFeeHZNrVYhANn
YrlfQRiqJKe3pCrYcHLgl4wCzDh5cfIFGwOWs2wc+AdV27IyB5xMM7s6KMe0
4x9/7PemQpxsTtR7xLTFjh9K6jqsbVpFJunP9338wY6HVCwOqeZ8IXs3qPlt
kdlxw6DXS6eyasii5j8uTJay45eOU66l7qolt/98Jt5ayI7znzU4Rr1XS5Zi
GW9LyWLHbeQqPFgv1JGp2k9E9F6y4+JDreOEA9/IET3y6wpR7LiBY9pl8ehv
ZNX/BpsEwtjxu5g1iyNbA/llyDGvhQB2/AaT5ylnhu9k3Zrub69vsOPp278+
huxqIq9e9E986MiO39rbFZkd10ROHZe4deMKO27amUuLiTWT/9H78J26zI6z
X9lo7tNqIRdqHLo5pbXj39QWf3BrK5kfv8l9nI8dn3tUZQc3O8iNXIq3T+xl
x0kCtrLx9R3kew4bHWpc7LhXlwF1W7iT3M0a/FyLmR0v3sXtc5PSSX52KY7L
eIkNn2dm8S2y7yarZ9h4XJplw1uosr736rvJfzZE2s2m2XD5bN6TGzI9ZN2k
T1E2I2y4j+UXylmGXjL9r2rOG41s+K3c+vSNL33kfLUnbm51bHgli1PB9eP9
ZNtnhq23vrDhmUeWzXo+9pMrFPsj75Ww4QdiygWKkwbInv6zxNBUNnzzqJdH
2NtB8s89+zlSHrDhq2F9ix8ZqORYx+Hr6V5s+Maj7yklRlTymfLUxkwPNlwo
NLuEOZFKTraVCct1ZMNH5h36w1VHyZYftNjIF9nw8Q2xqarHY2TWbRaXKkM2
XPRGrnD4yBi51KiloVqXDfew7nL6pjxO5lm5/OQ7xoZL/7EJyf4zTm7BbrL0
SbHh1l84v9Q4TZJ9nys4UQ6z4cEr3c+rGifJUpPr9cPCbHiv/9eXNrI/yKFP
g0Inedlw88/EkPh/P8ga3a8JSwxsuJLT+Yme3J/kzy7VjKRBVhxLuwivr/8h
Kwu6yqb3sOKzq3wP/q3+IZd17rVSa9/BDvtUKcEzZFzNpdCljhW/tf+cnmjm
LLmBxHWlPo8VT5b54RBDmCfrV5dH2GSz4uq/nhhXmM6TW70dylbSWXHLF/uD
zmXOk7uoJbtE41nxwqao75VGC+SRAhs8IIQVl82I6o7KWyTbO7L85g1gxf0b
TsllciyRJ/gK9ubeZ8W3p9oDLFyWyNPBTDeH3Fhx2u9satlHlsnLph/5T1qw
4nnyKcNf8BUy69bGvSUZVjzrlfdtHc0NcnhuavpTSVY8LqdY5H7FBpnTwaBd
WJQVF3QgDX45vkne0/xO4vz+HX8u9RwpVNgiCybp9H5kYMXZSnlF9p3dJidf
XKA//Y8FH7yizzXTsU0WZYmXoayz4E8iZQ4I2f0jS3rMhrDOsuDCAm8uXz1F
A4paLxX/62PBbdvvOvJ50ELJGrLb7mDBTW8kKIRV0cKJjz/DXjSz4JE3nFUv
ctEBxqM2/vUrC05hsOWmL6ED3amxaMEcFvykCM+h+9wMYBsmO9cXyIKPdRu8
2ruXAPcKo0OafFhwvwrWsC4vArygLPJVee9ghtdF3P0EaJAqOpvhyoKnH7a8
dDSFGeSbTqR4mrPgm3ocuc46rGCw/EbF+RIL/lra/2vnZ1Zw5P/bYmXEgmtJ
2LvMirBB/A3Y0jrDgiur6n02ZGYHJqKWyW45FpyLHct2H+cAQaW030xHWfBP
w5fP7rElwklrpocbh1nwj3KcKomDRHDLqf9E5WfB1eS/iD4YIkGfgT5LLgsL
/i7IlH3fFidkR5pUnKMy452chcLcZ3dDbXGxMUZhxjUNedJbXu0G6jDvT/ke
ZnxF+C+U/9gNPMcG9hxoYsYfnJpgP/6UG/xabW7+LGHGZ9T+vFKi7oG4NZxx
sIAZv3hGen1BhQcKBYXjW3OY8VX3WQGGGB6YchuvL05lxhNCKheOn9sLxruc
hEOeMePNzqWDN5t44bpKQ8ndp8y43PZ5XkvZffDI7ojhjRBm3NTlm2LNy31Q
kffn/sUHzLiSa63joWv7QdTYo0vYkRkPoRUszdjLB2vR90MBMeO6rc+CBhoO
wg++qukzJ5jx9J7B6wsSgtCdzqTfrMCM3+5n4oi4KQgFZVG7BiWY8XvvjVr3
bwuC6+j7uI3dzHjmiDqBTkIYLK//2QogMuM5xjxJnz2FQW9FzoaFZWd/8t3l
5BphEGclH+LdJuBtn4Wt1P47BGOyndmKUwRcTd3SfKVUBNrL95EqRwm4TzJn
2tYuUcBP27hrDRLwZ+FKV6+4iELi5WnFC+0E/K9JNeWasBiYBdCAWwUB7zj4
fbTv3WFobpVq+/CMgE/d/sBl8EsSKsw95OWfEvARPsbuXxZH4MN48YuyYAIu
2rQ5rdV8BELXNMy/3SPgTJNOtzVKpEBT8PLY5FUC7uwl/kYoWRrkshJPu9oQ
8OYswryhkAwIKoy/X75MwMXVxJJck2VgW/vmdQZDAv6K+XvcuUvHoORm8LKQ
CgH3F6qtLnKShffrDaaZ8gS8dzflyO08WXj5kLPsmDQBf++YKaC9IQu3Xr3x
RYcIuAghQV0tUg6kIY9gxUHAx4wJl/pr5SGFOLQvlsqE254xSA90U4JoC0RQ
oTDhw4nibwe+KUFgRtJSXzcTnv9ZfTFA5DjYa1xpOdDIhIva/8muHzwOwp5T
QW+LmHB+zW93wVYFkgcXZtOfMuGvfQSGnmSrQrTkxUHtECb8a2nKzUU+NQj0
+tww5c+EP1p+SLMWoQb2u7zTJD2Z8GM5QT+mvdRB6PRf8xxbJjz5xcAMiwwG
SdmE2s+KTHiSPSn+NKYBz9YdC0yOMeFD26Ei+SEa4H+mIWlVkgnfp8dwiK9Z
A2xHwu6rCDLhXVlpCcs2mnCQm0u2kpUJt6J968z3TAsS7/PFVw8z4hec7DXP
impDRL3PY4d+Rjx9kH9L0kcbfPcMezJ1MeLsfHUSmt3aYP3p3XmdBkZ8+5zr
S7EwHeAfEyM0FjLiW63fiJIEXYjXlfXoeMyIM3g9dmlU0wcRNt2G1iBGPNx8
wuBdij58+G4v3OzHiO+Nz9MDVgMoOxfTXn+HET9OnC2doBjs1P+qHNmOET9o
6nApVccIeC5ULmaoMOJP0zXZlwWMIXF3t166AiM+IfuXncfKGEQ7Z1JSZBhx
peonyltvjEHhkuDFRFFGvPXIxXlBvgtgbPqw8PkuRvxe4g09NrGLEGlx9o7v
TwZ8kftMkLu9CfDw2TfdH2fATUTfOGx+NIFEyj3Ru8MM+I+3D5+7bZhAjlV2
160uBrxG8KvM4Zem0GhDUnKqYsCv3/l1htRnBsxXu1YuvGbA6521uWUiLeCZ
yIzB+RgGnPvl5YK8aQvYO8H03iCSASchyS09bUsQu6ZsejaYAT/5YzKig94K
Tju+KVZ3Z8CT9/LbBT2xhsDrdt4SZxlwvTa7sdgpWxiKsI4v02TAk/JIbg9F
7OBEngWup86At7Ou1hyzs4OF5UvMrvIMuM3gowwKxQ7s/HRj8/kZcAb2cu+S
QXvAouVLTi7Q45OkaeEwggPEFx6jNP6mx3UKTnqWGDnAWvdRGusf9HjNrOLT
pjgHyD0gruNPocfXVcy0KmSvwcE0vt7qWno88uENo2Xn/2C7mHFN/w097tc7
L67I4Qzm/XR8wy/o8QN3SQIy15yhaOsfcntGj7NqCnSo4c7gemrjUXQwPV6c
tG2d5uUCgw0ze3tu0uMU56bU+cXrUDHYc9xWix4/VbJwMYHLDXhpuizm1elx
zhPbb+/quMFt4Xa/QBV6nLCdmbju6wZS/zXWpUrT42asQqG//rhB/Bxu+pOX
Hnf2L4qu63CH+/RZXh5/6HDPnFvs8/gtcH1tzWQ7RYcHhcWGhfy9BfYyu1/o
j9HhjxO/DXw9cRt0LR7ki/fR4bOhnsqqxbeBt8Dgz1A1Hd5aG95oVHIHCu0X
7fXi6XCXjVifexQvyFh7P6/8ig6/wfWjxkjEG95EWPqLRdPhC4oZIT+ve0Ng
WU0CbSgdPmbW99iJ5i6c54rtLb5Fh2tMjC53HbsHM1WqBiJ6dPiHAEXSdskD
GDWdp+w6Q4c7K1673cPhA11/0lz+YXQ415aLdNQVH6jYR3rcr0SH39lzJ+zj
Ll946k79+kyYDme1PnDwi7cfiAuFqPxdp8WZzRMzdp8IADv/FpHuDFpc0ySB
w+9VEJj0vVUfTKHFve24izpbg0BXzs1sPJEWV5hnqilmDQaFcc6whRha/NkQ
T5qkfzAw6xgvEgNocfeHt/PH3EMgh9RVpX2ZFldvfJ6W5R4KKY5pAwYXafFb
deaT9oWhEFt1Z/mSIS0undnypHw1FAJu8UhcPU2Ll/hT1oz9H8PFHtNn/rK0
uN62U6La6yewmdhvXcpCi4fdtT8h9CsM5lazvHEGWpy+cMrPWzkcxo3uR9f9
o8Hnzlt2BoWEQzMdX23XMg3ebelG+iISAcnXrI4uUGnwH+Y880tOkaAjPbIp
WUaDV3hbe6iwR8GLyonYeGcaXNHq5avfhBiw9o7zPe5Ag3PHDqxmohgQlze8
2m5DgxdxXDn5xysGyjJKZJgv7dg3tduxTMfA0POntbcQDX6Y04q/sPMFHHaW
XdLlpsF1l+qOFFW/gjmRyb4JIg1u9JYxVZcxFkqH48CfhQYXMJ/RvXMmFl5l
MfPc+PsPyCWPLkc1xMKIf46mVvs/OLfHRYCu/zV4HN1IXLj/D7ZKGM8X8cQD
Q8oVZ3H3f5DG31V21C4eXvI2KVpf+wc3tBnCzmXHQzl9UuM3o3+g6nmtJUgr
ARj6T28kif4DFae9c9sPEuFlSNQlw5ZtuL/IpffkURKUDYuzZwtvg+chl8Eh
mxR4oEr7MY53G8JTeQ/bh6eA2us+/cfEbfgv2OCoenkK4MZPIq9t/IUw1SMm
dLypUFfzi0uo/S9QWfJc67tSofNDzr6XAX8hvV0pocg+HWa8FA77j2zB7LqM
/K2aTMjtZK937d6C8/8qCje2M8FddsLRqnELjPa2K0wrZ8HS9IusEyVb8K7p
NTd9ThZsWq0eXY7cghp/tWCJhA/ArFWm4Iy2gIVvgCc/8iMc4sQ0LiZuwmGR
WvzOeC5E7Eytzs83wXqOs06aLQ/WjAIL/EM3gW5/feBRuTxojKoW+eixCeqH
VRT++ufB7d1nCUzam8B/WOvgH6F8qOUxbiye3YDQbOk2XfcCcOa/anLg1AYU
3wthrtYugk41xkhZpQ0Ya/95ttCrCNSt0+u0j2yAkYGS4sL7Itj9dkr59p4N
mBkTGTNlKYYKwRsHmn6uQ+Gd506tLcVAFPEc8Y1eB1eDC/LJLqWQLxnqPDq2
BsPCLso0IxVwsM229EjfGmyd0fw0x1sJYV4qzHea16Ar+h2/rHElOFRPpxFK
10A3P0snuaYSeK31qVIRa/C9LddLJ5cMPlFcZl7Ka+C4/8OyuS4OOmvxp9nD
V2F+dr+sov4XGK7JE1RSWoHjQhZby99r4cGFdS1lqRUw6P+3OTRbC7xUzOmE
8AqoeH0K/7m7Doy2WvLUiStQ1XWS9YplHeByMxrak8sQfzmwbHymDpLeSjqY
vVwGWboqL7b938D+bkrmvZUliCwIE2YO/Q4TUi/koGgRim71GNZYtsIu30wl
adp5qN77tVzdtxtCisTrOVfnIG2/lWP8i27YmHl/efH3HOgTpu+vZXfDqE36
g5LeOaj5cHEoa6Ab8k+lfNHInYNmlT1Z88o9YMyYYGBqMwcGtvtZWxZ64PA+
oSaa+7MgxXdg37JdH3A+OThXc20WLKOy3ZO8+2Btg3/3U+NZUG/9UX0qsg/q
Kfsv75GcBW5it4pDRR84JnFPSPTNQGaV1dXDPP2QdZj5r/HxGeD0YxI2q+sH
KaVZqbTF31BII5FlLkCBa9J+fqWDv8H9t8zEvAIF3oqR2pvqfoOc0jUFDz0K
cO2V8Vp58xteXZL3lfKmwOqqa5W21m/QCQuvfNBKgS+lM5emY34Bqgm3l38w
CFt5vhnbvr/g593uMKmoQVDMIm5yOf2CGUU1T+b0QciIk046qfYLVBdT/lxr
GYTw+67TYRPTgLORUIHgEJipzfjKKE1DU4HQsEzlEEQr+rZpCk7DqccDBNHW
Ifh+lChixjoN5+o0nq6MDoG6gPQ3/6Gf8MftKOtR5mE49O/G7vaQnyDneq6W
YjQMM/if97d7pmBvEzlipn8YDpf6bIRWTcG5sbL2u7+GwTaPQz/hwxR0mjcK
DmwOQ8e7ows1flPwLS5bjEQcgZLAG6p7xaeg+K8/q8HREXio9ae11PsHHCzR
6Yn8bwS+6Pw2VLjyAxQbVBcMXEeARv9Xc47+D1j9Q55YuT0CDy79bEwR/gE/
AhJSaAJHwPPaRH144yQUXI17txI3AoXO49rMxZNAyk9IX00agQXXsdrAd5Nw
JPzFoZH0EbjpRa328txZb9/uvZY/Ao6hg7id4CQwv3nx6Ez9CKSHURCFdRJy
+d8l+TaNwPizAbLJ8gT4rXcPxbePgN3rvgq9hglwgg3Rp5QRMM/qKlG8PQEH
o65el5wdgdiczuO51hOQl6d9InJxBLrzO4okz07AjBJ5und1BC6UtxUeFJiA
/7hdTffTUOFcY1MuS/04jN8dkTpPosKT1kaZoPxx+K/Bob+Xiwr1nd9ztuPH
IfS63wktHiqcHvyWveg+DqkBd/1r+KgQRK0/4mo5DivVCgIDB6nwZaIua+rM
OJiZqA51CFNBfaYmY/DAONwMz1Z2FafCg4Xqw2ZM4/Djd2E46QgVyla+prfP
jcGrq3r3nh+lwvF/Val1NWPwmN/yuYYcFTzpqw5p5I4Bcrb1uaFAhUICnlwR
NwaaSiz37ilR4RgnOSnv5hi0uDyWPHGCCq7clQelzMdAW2Ej8fdJKmTzViSm
a41BTKDWe381KkzzlfMLyYwB72q+yIo6FSSEyuLf7BsD+tbVtXMYFRxFSw/w
MIwBP6s0U/ApKqRLlMQ9mxkFZv9+6UQNKowfLd7H1jcKpsx/LsVqUkFYrig2
+Oso+ERXWd/SooKt0ue9NDmjO3OV0FGZ01R4e6Lw5b3YUSh4opn2fQcPqRfs
WQ4chZHTLR90zlCBTzM/5uaNHfumAdH0HWyunbd72nQUZDgX1sZ2cKxebvRV
jVEQeM/BRqdNhW7DT7uGpUaBfypBg2YH77mY8+zy3lHIXw0JGdqxzxd7Wnaa
fhT2PLogkbyDjdb/G5edpYKbr2zn2R3857sWUWCACnLNO2PBjj9PEoWUWeuo
0LBstKy1gw+7b9ut5FNBBEhnYnfiqdYceDqauMPr+sCFlp147XhKPjc/oQKL
3CD79A4f21Mxw2WeVGi//tpmaoevN+XuLO/tqcAwsHyiYYdP5QgD+ecGVBh8
djwiElGhy/aIld9Onj6pMJxV3uHfQ575kYsYFfS/21tUq1KBxDSRa7qju1PH
Kz7L/y9/vVX9mtsjgB+g6ISoUGHS5740X/cIhKpGDnUqUuGhkZkZ85cRuCH3
sbpVngqChxQDlz6OwC6XjKxPsjt81s90NQaPgFd35imeHX2txn3/V+I+AgN0
Ln0JklSIuZEhkWY1Auq5/urMO/ps5rL38VEcgRDKa43gHf26TKi/dxIagSqt
hO+vdvTNXHKg7RLHCPCileWwHf0Hl2WdtWwYhtRkdcLBnfpwNYyKrZQYBjxp
4SCVQIWMJd3fL2iHIUE7sJDAQIXR1wyYa98QrCenpnPu1J/JuNcPgcdDcENv
6fG3nfpEd62V/KcGQVq3IK97YgTuCfA+McMHwT6jKoZE3blfvrYNHosdBLn4
iI+SO/UvTjwdTNXesc+muUPYuR84U450arynwBguKGpRMQK6OhOHD/hR4KFH
94O0ohEI+pN4f9GEApsz7v/ackdg7TjXoVQmCvhoVoa2pY4AtXHNnfHaAHRH
FA06Px2B/JUaUr1IP1wN0sljuTACEVnJX9TX+2CyNe1Fh+4IuFj73fnc1AfR
ghpl9zRGQKRWeSDZsw/apvfO2cqOwMsXH9J96nuhStL9v4gd3u4pRKnJX++B
huwPB5Z9h8Fk6sZcJtYDk6Y3WNSdh0E+XjdFcE8PlFp8vKN5aRh+0zOwEMnd
0FsRdjdIchisOzw7p0jdUGvLdW68bQg0PCxdEgs6YXHt0Bsd7iEQEFMR2BPa
CbSphHm3zUHY7NvT9tSyEzbYxsQujw5C4akWpbuMnRA8UXnS+dMgiO3SoLto
2gE5aumxL88MAmvu4dcsm23QRt8pdNmJAmkDE+E/g5qh2E/mbVdgP/Q/4Hmb
IN8Mqed+jpRe7QeigHbu+dEmCHQ7WHzzTD942ma0l6ImeChmGHyepR/OTDjv
fbLxHVqKLBNWw/pgamY2SdLtG4QqFIQIhvWCJN1GgYtFNdANfLqQfb0brM7z
FQ5cKYS+IYmAgpY2KGW93/XlTgECKxrtSnccko7u6fgkXIgOFVp+PiaIQ4jR
p9b4lkIk+3BsIjEB4OLLse+eEkVI5tyVgxKXyTAndO6L5GAJ6jGQ1GjoLAcx
Ff5P0VpkVFX4/X3JSBF8K7DRyntcjQRC2gv9K7NAtUbq6+GRahQtcmqy5dVO
f9y9fipRqQaNaskQfG5lwMv15+jpWA06us+AiUkmHa6i+hMOanXo2L5a+avF
7+BfwzHZffPf0Jb47fiwQ9GgOEorEGDWgiqv+ipmfnmKpMtM549ltqCwF7dP
TWtGIrHoj9Uj6y1IU2fRXtwmCrG9y1ZM0m9F4XL3DI60xKAtIzPKv5lWdDJj
3HAs6A0azP0kAbLtaNBJ+HuGYCrqjzffvde8HfX2vtX5O5aKukMZ/7oGtiMX
3caFa2lpqNnWolWgox25B+p03RB+j8icBC/f2x1oL+QNrTJkobdu1tVqxZ3o
Isv8tcdOn1C8JUvOi+FOFP5R5s0NplwUq1P46g+hC4lEfdjPZpqLngmyuiSY
dSGlzsItgeVc5N/6edff9S5ECDbjeiySjx5U2G5eFO5G7HXvrT7fyEfeGWwT
2brdiMb5xHzj53zk5m9XYvmmG/HrsaWUahQgu2McNhWqPWjGgpPvumEhsuYr
0eF26EEvtBc8uiILkTnzFbnr4T2IazNlUWgnz8YjJYx8Qz2oIlQFt9X9jDSe
Xc2+79eL9tscrrSUL0LqD0gvO973orUColetcxE64Vjmd6S1F5V6KnqzvytC
chjnhQHBPpQh0qQuyVqMDs2Vr5/40oe2/zsWENtcjB40aQYt/elDNPnyfMk0
Jag76zsxZ18/GtJZtzeQLUFPHAYOCbn3I9niEOrTiBI0rnElpz++H8WxiCcf
KC9BaoK/lGPq+xGntbag3mQJmuvf0CcIDqDdoseKQpRLkW5JYC+uN4CGHxc9
i7IpRakvWK/c8xpAMbtUc1SCS5Gp0X7vP80DSH5r+JFNYynKPZpM935jAF25
x3WK8qcUsbJJhtuKUVAQo8fxJY4yRK5RSe7woaDG+iCxpbNliDelSio8c6eH
8tg2GXAoQx7+Z4vPdFFQv5KSgqV/GWq0ajtFQzuIvB56X/d8XYZET15uLJUa
RDf4PT5L5JUhX16qyS2zQeQdKtt4p64M9S47UqWCBpGguvgdc0oZCsv1Xnk7
MIiecXgW/qYtR5PhNAGXCUPI5G/62muucoS5hLLtlh9CcwtfJYeFylGcDufL
RushpH9HWaFCphwtisYKhjwZQrwS3YyyquXoHL3gB1Q0hMTTO1+paZej9JH3
iuvUIVQh2PaTalSOaMgyeD7HMBoZaqITuFyOzN8U615XGUZN92Tn523KUaE3
6hJ1GEZMyzUNVg7liGhSZzP8bGf9eXG2nVM5cpQ3nI6tGEb0Mc/L/7qUoyrO
ntvGU8OoM/nMIbkb5YjD69M/RtYRpCB1YO+/6+WozGGxevTgCOq6Xdx2dcf+
v4vHn4DiCMr0P/DiimM54ta8bxivN4JeNCdmbV7ZOU8WuO/ajSD6/j/2R63L
kasgff8lrxF0+A6BZ92kHB0gab+VCx9Bqr9UDtkYlKP6v0+uklJGUN38wXkb
rXJ053ezxO+SEWTvnvBnU7kcCQ9wzdY3jyAfLkq4vFQ5av5mUpg2PoJ2v9M2
IAiUo/slcXcDN0bQf+pP8r2I5Uj8/ZC6DScVWdiHng7+W4Y6XwgzqIpRkXKW
5etjv8pQQNC1b7yqVNT14IL2vZ4yJH0rK2L5PBW9956ctf9ShgbsZi60/0dF
qKT4xK8PZSjUSG7fJx8qukoN694dU4ZGj5alOGZSUaXT72Ed2zIUybfteBqo
6Cs1qNlEqwypsmlIC3dR0VFDOU7mw2Xo5dS3kgGaUWR9zJliOlWKzqb0NRmY
jSK3vqJzNealaC4451rNjVG0x3flHlmhFMU6Pvx38uEocnEXTXPlKEVTR4/K
SuSMIq+ituHVshIUWuIfQ88whj53T8w2MJWgY28uHb23bwyFxzxtj+0uRr0+
krVz0mOIsfGzslhaMRLX7FwdvDyGWKU/6wSpF6P6psMWJZ/GkE56V99N+yLk
lru1KF0zhoK8ODktxYsQ7/O2sLT+MRTieLZ315/PyNHsPjmacRwJMDu+HPb4
jJjHmoVuWIyjifL7xkfcCpH22p0pIcIEWhr+mNgul49m+nUDYvkmUEHsYTJh
Mg+9rDy4nyQ3gcQkt/oFYvPQZOA3vS3LCfTBZ3l8fS0XhXDwf+rOn0BusfeD
xS0+oVrh6jtPrSdROLO6z0RdJjqtz0W//PkH4le+O6l1Lg5F2LHMr3/7gcK1
Ar/JFMWi3js0w9uDP1CkaIwvN/8r5Jw4U8bMNIWO/mItmqI+RxGzDR58JlNI
+v0LAd6oJ6g36uGo5soUItV+U8mbOgnO3UtV0UrTKH1zOoIOEiDSpsf/WPFv
VBdWMM/8sBjqDPg5jLjmkXBmoe9d2WbglqbyePDNI/XS+Bfzt5rBliNNMEZs
HvF1yZzGipph47uUQu+JecQR2frB6kQLSJ1VtbC9Mo+4lo/rIMFWeKZpkelW
OI/6+hRCa4XawFz59ekokwVEzPp59xqpA9L3WhkW2C4gS8bsO8eOdsDiiuDl
LucF5HhRZl+vbgeEfc64vs9vAZlcteolB3cAyJU8f/d+AdlrzPwZXu8AkaM9
1Ly1BdTC+ZRNaKAT/gjt8W2PW0R/T7btvuDXDcr337lXpS4i3cr6u9mvuiGw
86hDbs4i8jvOwDDwqRt4Hp05F/FlETkHDDwpGu4G9d9e+3WnF5Fc/3yZrVoP
RBb1F1WpLKGNw8oWhnM90E/6LytXcwmZGquHDDP2gojTYsJb/SXUKfj+wqkD
vVBygD3Yx24JcWVnct893Qsj/moXVB4voYMdJgcKX/WCrF7SbG7vElo0vx4t
J98HD1Klxt6OLqFzZtxi9af7oPZvSXfE7yWk8FiqSsqsD8xz2yqv0ywjWZbw
EPsHfRC4hz5MXHwZUd2Dmh986YOOYQfxJK9l5Oh/SfvC6X4QUFk4EBmwjCIn
tE2/X+wHx2hfku/TZUS4PlvKudOvbWm9WrF4u4xOK6tK0O/0cyJZ9dV765bR
u9gflUHl/XDn9hG7SJ4VZK7zh2VGZAB4WGcrTIRWUCULzbSq3ACUvM3nFZBa
QfuXn4oYogHYalBpzT61gmz+HgmrNBuAQCEd1HB9BRV48cVXhQ6ASDHbmyiv
FaR724QsGTMANedaVswCV5ChodxB07cDwOxtkvPj1Qoi+AWnrhcOQETzVX7G
rytIqPew3LXBATh2VfxuY9MKqnlKKvo5OQBt6786n/euIJ/Zn6nH5gaAW/RW
mPDMCnrEfWeGmY4CRWVKUz/XVpD6j0t2cawUMDXa0MyjX0Xij0JuznJRIO5+
wCbat4qCc/+8HhemgOqu06YEkVU0TNfWHSRJgcF05oJm6VXUEmI+NyVLAcH2
SGcrrVX0r1iS6S+iQLp4Yt+9m6uoWO0VyfQyBXTIdooa91aRe5aSD68NBX5e
EI1iCV5FX7Pv3k+8SgEpv2yd2LhV9JAw9HLNlQLN3G6pNmmryEhy6nfjLQrc
zJKnOZy7im6NXDl9zZsC+V1lxZ9rVtHzQdK9KX8KXHTx3e3TuorSfjS+bAui
wDKNxk2tgVUUd2nXcf9QCrx8yfidbXIVidJ5+yw9pYCy1DexjrlV9GIzJFw6
kgL9VWGBcZurSCnh41PpaArcNzUasmNaQydTNRKWYijA92f3CYlda+iZRuCU
/ysKkAN7XswdWEO7jobFdLymgC3vm/lisTXU9N7u2+83FKDNsdb3k11DVyLG
PjUmUCBZUzjzjOoaolxudb/1lgJafRMMRO01NC78RYWaRIFJ10zbrvNrqOWd
lDxPMgUeMdyoiLdcQ+ZHLJ5wpVBAPO4Y79X/1hDDB9fr3Tu4QWbp1hGPNWQS
Z0GwT6XA9ZriloUHawhf/vH48w7msLh/pOzRGlKQyTzUtoNz5tQfBUSvoXh+
Osb/rRuF0I3pJKyh5mlBG7sdvHCgVp0zYw2pbm9d+d/5MXmP43ry15DU5MUz
3DtYSVt/JbFyDd1Qz1Y5sONfD4XT+Fr9Gvoec9bj147/uk8dem+3ryE2wxu9
iTvxVaiUWT+krKHzBfWLwokUkJ4iTkRNrqH1iOg5r3gKJL284pI0t4aYj0Vu
JsRRgOt0yXzOxhqyoRI1XsRSIGiR3buSYR3NOfyet3pJAUejoqB+3nXkLNaj
fTVqJ1/brGw/hdeRQhB2LjmCAuc+2kStSq2jdz8qPPN38ivLypLIfWod2RUY
0egGUyC1xErkkN46Cijqr2oLoADPf/lZspfW0QzlsquULwU2vloUGzito2X/
QGMLzx0+PXLVrG6tI+6Yh3MyHhQYEmSsdvFZRxU9omd6b1Dgi09Oa2jUDrYU
mE7d0a+CFL3pqzfraN3EL/nbjr7T+00H09LWUUfb88kv5hR4epx2+kvpOlIU
+TYtb0SB7YlLbm1f15Fr5R3ebF0KuMVkrQw3rSNRpensda0dPc9foP9LXUd6
L/p+7lHZ0d+HdL7jrBsoJZVzyuwgBSIubyaf5t5Ar0Z1fQJ5KUDDbCRxUWAD
abn/1Hi4iwLjV9cV3eU2UMScvh4bPQU+Cpwz/GC+gcQHNHpPjg+AYFNSV+nV
DUQ2fHlHlDIA0feXLepdN5DuqRMiUx0D4Nmb6DgRuIE26sSy178MgHr0fMDB
Dxuo7Jer0sWd+ygXO8Ms/XkD9Z4cO8LxcgCEZ+MiVGED9afA4XdhA8B0TuvN
5Y6d84hhchZ3B6CF8VXh880NFBme+07g/ADY3lX9QTi3iZrqn+3h2+gHyav1
XTMmm+j9UGPChz/9sGhwsbrLbhOdfCD5lJvaDyEi19+leG2isddtv2/V9UN2
yxsLlLKJGtLIqh7R/bAuutniubGJgnyZjpcK9UN0e2nJRMYWEtuMFOo73AeW
laffNxZsoVB/8yb1vX0gmtH2ooC8hXbLpA2HMvVBic9Pj4DOLSRoEf/m+3gv
DInvO8pP8xe9/bpHck/Szvzt5/3uoulfdCW/U5GJqxe+Hjn+5CvjNto+Y3m8
bqIbrGUupsyTtpEGr2vux45uWJNzrzi4fxs5aZ14E1zVDVInPszcl95Gtv8F
9LEmdEOMzsELCqY79rUbnh4XuuGaA4EvLWMbge6lwPnKLmB+2/MxRO8f2nBf
bvB52gliLBVTqTo02M/tj6WuPO3AX+FymjGUFltOl5S1JjcA976NDddwWiz8
x9Hau68agN0zNLc3mhabd2DR+ujWAFsyaQeyE2gxHkIIm9WhBuhPGZo3LqDF
zDZ3k348/gYvn55PTBqixXaltO2nWNQD0eL46klFOiyIUsbVxV0LTCU12Wkn
6DBxzleidvM18Jf7oj0Jo8Ms8z+tsTXXwO9mt6ZRXTrM2vCvP/lRDTRoZKU8
tqXDAouETd5sVcMjSX6jnqd0mDqDvNGF31+BZoMu02OUDruFLceGj1eB7Vjf
ot8POozjvaOpdl0V4I256uG/6TCJT5urAllV4P/WuvP9Ch2WWfqEW9ytCv5p
lf2jsNJjz7cou1L+4rAd6W6iLU+PsWu4S50WwGFLdISeL4gec1yxPt/+uwIs
ScUGEo/pMe9HbnLDpRVQsRb+WimCHiu7YnpB4lEFPPh+UuZ8LD0WfPubzh3h
Cth0e2Uekk2Pfdr3IvCXRTlslBvkzXXSY+ocbFm6/aWwer7SukaUATN2k1e7
y1AMgX2fBtWPMGA9Tm9/3+8qAqJdsmXJMQZsjMbudnV6EYi5PTL/cJIBo0dV
YWK6RXAx4rxJ1HkGbGBAQuFIzGfIbZjQt/JhwN7ciw7gUSwEJ02i2nInA0b7
q0HEODMPlhpoKlz7GTDvFK1T1YF54G+8eGJqmAF7d1Vx3NMyD2LtepUHphmw
VGD8Hc+ZB7V+yQpVNIzY+rta6cn7uSBcoSQVLsWIndKLbL1XkQMDCjYHRIMY
sbAl/ZX2pCy4tq5ICn7MiOU9rM3mv5oFc5Xs9BMRjJigAUdZ9+EsYNAum059
zYipbjavReVmgvTlPWUinxixiICiloN1GeDv891MpJ8RS3oURSvN/B5YNZLP
BQ0zYiU+CQdF29PhBdNdbHycEdPVGvkVGJ8OWZFi4qmzjFiV1ck3bnLp0PEu
YPUQIxOm51/+lulKGojVHn956BgTxrukT/zUnQK5T4hPHioyYfxuFJHu9BQ4
YTjhM3aCCVNQ+8Js6ZUChr3RDimnmbCc76xqgftSwHv6j8IhCyYMe+x0R9I+
Gb4TUzuEQ5iw3Y/See8zvAM3U85dwhQmbPIl3Q/D3QlgnyETJ0plwlISfo6Y
NcfDpXWDQxKTTJia86sHvx7Hw4k34YrH5piw/e63PbPo4oFxmNVcnYGAJbfu
ibm7EQdx1xhTzKUImH77y8IcutcQViwiZS1LwH7UBt9fqokFP2atz3ZKBOx7
SEBw8eNYuJoVWOeIEbDlq/OX87liQWbm3y/PiwRMEZscdZB8BdV3NhSePyBg
XVMdHPxuL6Codh/5ZQABE6AqsgyeeAGZe1W040J23l/zzYbI9AIiSr0uv3tG
wG7se3T8S0IMXP675PMplYAdZZq1NW9/DjNBs7XfGwlYuD2J9NEwGvbFjJsx
8DNjgZE8TTRSkaD88CDPbWFmTK3tZ92lzggw8TDvGDvMjLEzKtgH+ERAtFGr
/lc5ZuxQ6PTopfZwYOeo0AjUYcaetJ8NrA0Og+3g51I0t5kxzxpDPluuJ8B3
p/nnzbvMWDbzxJZV3WM4eZXl/bAvM7aNz/Hu83kM3hp+QvCYGXOSfTyHT4fC
/LYzj+9bZuxmpQXbx+ZHMO6lQbPVwIw1m7UTPxYHA91/PpUurczYRGRJRqNX
MAialNwb6GLGJF2sDkYrB4OVgvRy2QgzdiRhi4ulIgi65/ZN311hxvgTHF/5
NzyEb07zHatCLNgBw8h5R4ZAyLFIer/ozYL9CqJ6aNT6gELPoQ0mXxasgtb4
8m83Hyg3fn9u/0MW7NbFqAo3Ph+oP5szj4WzYJPTd6JoPR/A2PGKkxHvWDDa
rLtanPL3gZe7t0W8gQXre/OKaNzhDYmRFsKqLSwY1ymJiu9PvEGUbfi2YScL
VmLfkkiv6Q1ydJP7PIdYMJv7w6bvP3uB/tzila8LLNibbq/Hz1I8IbCRtGZ1
gBXTzNHHA5NuA7POc113QVZsvPlcGP+V2xD5lSchSJQVGx4yErcSuw3xZfwa
H2RYMTb6qN7qnFtQnHEkbE2TFWv6T+AXe50H/A7SFnx+nRVL2SMljbjdwVTN
T6e+khU7oMVwyFbmOlCWJ0lfvrBiOY/ROm+/C9jnGPSU17Fi1I79dyqCXeD6
QYFrn9pYsWi5jOCyYWcIpK18+HKCFVNbOrvHJNEJcmo2yFc52DDtaYqRrNZ/
oOBrH2LNxYZxclbsjtm6BqVKDfpme9kwkcxkVvzzNah+/5qiJ8SGid9V/+Yi
eQ36HitvyCmyYUdI/v0UPgdgMPBUpLViw2T9hguDRK7AE6ahrQ07NuzftDjp
9ZQ9kOB09dI1NgyOcytd/mgP+4/tuTDlxoaFjlVwdyvbgwxXoVtLEBsWdr2d
47mpHZh3z39IyGbDPnyr6zV3sIGRiMu3XuWxYYhqTfSgtQEH7aoTUUVsmMvq
TdePidbgVvLsWxDOhg15mn4NolhBSJzMD5dONizv47faKw6WkGd9Q/jEFhvG
8Yf8yjHzMth/nuNPomXHttRHCU6Gl4Gb/fY+JgI7tvZ62S1sxQw8S+9xtu9i
x54Lzf6V1jGDE9yh206H2TGnRapP6JoJfPmW3P/amB0b5vYW63hyEW4JinX/
M2XH5szqj4SeuggiXpltDlbs2CBxF6PM+oWdfii3XtaRHWNjfrp8xuUC6PlV
Fn3zYccS8vnyjM2NoVOhN3o9gx37uazz/ZGdEQQ/tYiwyWHHiqQU7u8VMwKl
0aHHNQXsmMNrU6ehbkOIjZzwjyKzY3T8x+/2zxmA1fSCq0QnOyb8oPlNtZI+
TL7l0Lv8jx17yN+oeptJF16tPDsDDBzYlNbPEo/0s6Cjz60hysqBhRPuxpVp
n4Wsjf0q89wcGKky6QFPhA7cvCR++LEkB5bC4fLxmYQ2rLFq0pde4sCqXf67
cSpWC7hmiDFfzDkwQ9GB1SNGWnCkrV+k0WZn/8mgr7QsWmD9yuPMsBMHdqb9
tfhVH034eij5MaPvzvvc6JlK3TQgQpWW0zidAwvKVWSy88Mg42BTksUHDkzv
yRG/Gi0MquheyzrkcmB8Uj3hv1kxWKo/dsG7jANLypI1WZBDYH7J9mViMweG
s5muvfZVA1FX4Pu1woFdH7WwmTU9Aernn35c2uTASvKFJdfXVMBMwVR9m4aI
8d5fiNF8owJPNmZsdrERMVev2vInY8owFyKQcvwgEZPQXvrqFXgcKt76SARp
E7GJ7enhuBUF6A48WxZ+johZf/Zsn89UgFmHPXqvzhMxcnbIuKG1AghLfbye
ZUHEGHzP2XM3yMOjEsqn1ptErNS5KdPhoxwYt51U4o8lYkMjazy+SceA9SRb
VUUCEXsv90P2s8UxqErt17NMIe58j2vmV/ceg2Ped+3e5BAxfaH4NOHDMkA8
WBy2r4aIsRwsab989CjUhobsLW0gYk06S1qFBVLgs3Ap2ayViPFfK0e/T0rB
75ql4lcDRIzuzOyHvvNH4Nt1ubE9C0Rs0fWWwXy0BPh307p+XiViB09mGPse
lgBlrG3t4l8iljis31NYKQ7pu92IMcwkbDHLbYlx9jAElX1U4TpIwvZwqy1H
XRUDjFniGfEcCZuc+aVi9fIQrLmv7c85T8JoaNe8mzUOwaeBujR9UxJm6dli
9mxOGAQ+XSsP2+lAKzsbNRcMhWHrUuok610S9lnW+k4GvxAUwi33LF8SNi80
PbO3UxBcJDS3zgaRMPXTxnr5TwWhf4u663EkCUsu29j+sHUQilMOqhHSSZgq
z19qFZUfXDlm69I/kLDVe56WVrb8IOZFNj6TR8KGV9tXWal8EKNr5RhcQcK0
5w/9fDB1ADzm457Td5Awk2Wuo+PE/SBp4SyQ0kvCflDuWion7ANqtUqmxhAJ
4/tdImx/dB8YxfaSA36SMMlDwSL7L/ACM13GWaFZEpZL+9wrbmovgItXJ75E
wlQ0eyM7/faCZ9cZG9sNEqYEdUVVvHvh//+PxE5ILupbFPDA/wHKQnJf
     "]]}, 
   {Hue[0.37820393249936934`, 0.6, 0.6], LineBox[CompressedData["
1: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
e+9X/2DBpbCyyx4XOJB6+c9gozQWXKtFZtXaiwM1u5gXLaew4DHhkB1Sx4E6
Bgv28Mey4FzjG00h9/cgSrYR7uXHgm9vb3ntJO5FplbM04e8WPDI4Cc9Yst7
0Sh39sHM5yw4bZCrXKnqPjTly/C4344Ft8r13Dy8ug/90/l+VO4eC0487eug
aLYfsWyuuy6JsuDY348X4/wPoaDMTymBQix4kjz31aDFQ4jDXKOVj58FJx/6
VnzRhAvtb/x4+uZhFvwYa4rF9qXDiDdBpfs7HQuOrFV9yrm4UeLtBdrLO8z4
zfRqTp+33IifOVa0d40Zf3NFIkphz1Ek5DDrxzLLjN+6IiJcxsGDzim/O2dJ
ZsZDJKtIjpy8qGAVTLbbmHH+Ii27s3q8SPb75JvIRmY8K6y3iO4jL8IOXBwp
K2PG+5m35Y9KHEeqE8PhvOnM+NYzG2l7Uz5k/EZ8juzNjCuWy3Rm7ZxErjnh
fg1uzDh1Ok+a8S1+FNm7yF3iwozT5m1Oq6Tyo1rhvGuptsw4+ZXaHFlbAEk2
yCY56THjts+dGp7hpxADQfnOPglm/NVJSj6pSwjxSidPM5xlxj1aKbbSl84g
OUOGl+unmHEVYrugVNoZZJdenTF4lBkXtX+X0uknjMga6syZzMz4sW8idho3
RFBayJ3i64NMuP3iJZ2NQ+KoMj9fC+tlwl8HfVyUvCeOBgcOTUp2MeHy8V9e
GMSJowNiPfuPNDDh+sI8xNBTEsij2ejxZAET/mzhqmPjZUmktecBn18oEz74
ct70W845ZCNTW/AskAk/JF1o78sojfxNztx45MeEi7pQ/vnfk0bFP/4+v/2C
Ce889rxwP+N5xK/l0MFnxYRXO4+Jl9pcQKvhz18hYMLpxzK5lp/KoXHukqkr
skx4qHZg8MKoHOpMYVBvlGLCNVfKBWN05FF2UdievtNM+Lw+QZMGu4hshz7H
rO/b9f/e2J4BfkDD4u1p5yYY8cpGZpfPyZdQ608u4q8hRpw7/oSO4/QlhF82
slfuY8T9GenPqUgpojjdqXO3WhlxDdI10SNViuiuFxWyK2bE71Ub3q5fU0KN
zcIt30IZ8b6fCjey3l1BxXoOkpKBjPjhSWXhltkr6NtIfmSRLyMe99Hh4nnV
q+jVqqJejSsjfjFzRGSKRgUp8eoOj5kx4plPhDwtfK6hgse+/47LMOIxHxTG
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
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  Method->{},
  PlotRange->{{-4, 4}, {-0.5399179664502503, 0.9999998209631153}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{{3.6126759985886626`*^9, 3.612676015567944*^9}, 
   3.612677311408866*^9, 3.6126782922934055`*^9}]
}, Open  ]],

Cell["\<\
By way of contrast, let\[CloseCurlyQuote]s write down and plot the standard \
basis.\
\>", "Text",
 CellChangeTimes->{{3.6126783154357786`*^9, 3.6126783323109884`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"standardBasis", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"K", "[", 
      RowBox[{"x", ",", 
       RowBox[{"X", "[", 
        RowBox[{"[", "l", "]"}], "]"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"l", ",", "1", ",", "n"}], "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.6125657040648603`*^9, 3.612565721659557*^9}, {
  3.6125670410264244`*^9, 3.612567041255577*^9}, {3.6125675657645073`*^9, 
  3.6125675682451563`*^9}, {3.6126324237597413`*^9, 3.612632426778983*^9}, {
  3.612677572440462*^9, 3.612677575515505*^9}, {3.612677615786647*^9, 
  3.6126776299720693`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"standardBasis", "//", "TableForm"}]], "Input",
 CellChangeTimes->{{3.6126783502762165`*^9, 3.6126783554026227`*^9}}],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"-", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "0.2259948490948278`"}], "+", "x"}], ")"}], "2"]}]]},
     {
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"-", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "0.27258489389450036`"}], "+", "x"}], ")"}], "2"]}]]},
     {
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"-", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "0.36831261151702854`"}], "+", "x"}], ")"}], "2"]}]]},
     {
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"-", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "0.7794545338464165`"}], "+", "x"}], ")"}], "2"]}]]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   Column],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.6126783564293118`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{"standardBasis", ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "4"}], ",", "4"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6126783600166874`*^9, 3.6126783747634864`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
     "]]}, 
   {Hue[0.9060679774997897, 0.6, 0.6], LineBox[CompressedData["
1:eJwtW3c4V+/7t/f7TZIUFaKQkpWQcx9llJVkk/VJJCkRkiKroSJSSJkhu5CR
nMeWvfdOhfC2t3z9ruv317le13nu8dyv13Of5/7jCNjc0rOloaKiMqSlovq/
5wngntzeZkdk3y69y8YXsFtrh5+srbOjPnfe+dKRC1h2juSRhSV2tG9v8Ayd
kwYmJaJt8/svO9pzd/TA2WBNTG6Xf299Fzt6tta1D1/WxjzqXnlUte68V7IP
WH6rgxUFxHCjBnZ0bt+lfVtnLmJn1ov0csrZkdAXOBVzXhfDf87VRmaxI7lZ
Eyb4cgl79H7bPiyVHTVfPzl3cZceVmZEYnzxkR0xH9vY1r2jh6nUi5zzeceO
vA2LFjQULmMX8iy/XXvMju5cHI4+81Mf03vckCZtyY50D0rM5MQbY2HKfReO
m7KjrRN/oxuFTbD2jfE/RwzY0dzJayUv00www9t0Qvs12VHnm7oQGcIUMzNR
jKaSY0cbk89lIpmuYNG7LyisS7Kjssr3QVbxV7DBBsPuBXF2lMqw5I+BBWZ1
9g7XH0F2FD/2QMjL1xK7euzT8wYyO/Jgn/Sw5LHGPv76KlbNzI7MNVQEH9yx
xn7HVNQgOnbkE3y9xq7RGrvONUyXu05Gvr8HB6qDbDCnLe4HUb/JqIdG/0b+
gauYe5P/TbsSMsqhuRbElmyHPf/r1rVYQEas5TLULMftsXjG68q+OWS0dWX5
7Z88e6wetPe8TyEjnzdur3yar2OC2Xu+t4aSURiLOt2EmCN2up7xqNULMvou
NlWe+MMR0x5fC5l+TEYvO8e+l9+4iXnwD15lekBG33TMNV2KnLDGkCQ2zI6M
fkb1Q2vpbWwsPcKtzpqMBqLKsksPOWNrNc+Gjc3JSP3pxL0sb2dMiPpWrssl
MgqpPnYkW/UO5uksZ/5JkYycd4+LePx1wY7o1aRxcZBRgrtw1e0Ud+yMU9Ge
eBYyaj0t9CnlmAd26Vm6twQ9GSWL0dyJ++yBeZWFXNZYJ6H560p87FX3sFYp
kw3vMRIa+57v68XphY3raNqShkjoH7uFrVmGF7bloNQU1UNCffyJfnc1H2Ai
CQIJeY0kdH8j69qHVw+xB7snNf4WkBCFcnyyPcEHC5Xoz/XIISGy8HbR4W0f
LEWz8SBDJglpFU3eMzJ/hLX6fZnnTyChuK9Pyl/z+WIii55Rhi9IyEnwnYxv
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
/38qXNlvSdubKQv7H+Rnr4w=
     "]]}, 
   {Hue[0.1421359549995791, 0.6, 0.6], LineBox[CompressedData["
1:eJwtm3c4l+/3wG3evL3fUtGgjAgpkl2e8yRKRMgKGUVJssr4UMhoyYiUJGUk
RSjKSJ5bKJnZe2avt73Hz/e6fn891+u6z33us+7zXOePW/Cyk74tAx0dnQkj
Hd3/vkeAZ3Rzk4pucPss/CchjzktCz9cXqGixIzqRzbv5LHMrKOis/NUVFMR
5z4opIDJiGlfHhyjol8N52YGRRQxhW2BbZXNVGQuyTN4TVsZ86x46vmrjooo
MTaj0V3KWH7QGx5URUUXTFwKG12PYydW8vWzirfOs6hO+5J0AsP/TZe/zKCi
i40/L5dLAXbv9aZd5Ecq6k9XeizWDthPY07WkHdUtF3Qw5BTHcfUKsVO+b2i
oofOAnn+yzh29qvl96sPqMirUJn98X+qmP6DqtRjllT0SmZRWbJbHYs82X72
sCkVSd+z5TtpdBprWB0eEjWkoqKR34aVNacxI2emA3u0qGjPu8dvPMvPYGYX
j8fSKVDR5chHcjHdZ7HY7WeVV45S0ZW/dU21NzSxriqjlllJKjrxTmjb+Iom
ZqXqumNIiIokP2g8ZhQ6h9kc+vCkikJFs03/jG5G6WDvBr5J/CZR0fD9pbir
yuexwTclZYiJioLqcxJR33ns+o4epuwVCgo/d2NyIk4Xc1znuRszSEFCDY4X
6qj6mEdN4M1rhRS0+nM45JCeIfZkzL15LpeCFs9auZVWGmIJrNdP+mdRUK0S
qxmvlhFWCdo7X6dQ0EtYLtyna4wJZe78URexpf8f7b3j3YuYYiXrQasQCiKd
Vz/2H5cppj28HD7xgIKypD7A92RTzFOgy4btLgV5XpJdP9RphlWHJ5OxaxR0
gn7iAnHLAutPi3avsKagfF7TCn8hS2y57HGPiTkFVeudy9reaIkdoHfKvqVH
QWvp3/YvJVhhXi4K5h+OU9CN+2/vuktexkT1y1J3cFEQ9lNDcG+aLXbCMX9n
AjsFPe3Tzpc5eBXTe5zmK8VMQbI/am9NJV3F7vwMv6C5womuKpczv0i5htXJ
XFz17edEnUK264frrmPDOlq2nN2c6HueJAe3jT22bq9SE9PKieJSf1ntXLbH
xBIFE79WcyKlilMWBZIO2N3to5pjuZwIuHOqnQocsQipjmzPLE5kryPIJX3d
CUvRqt7Hks6JqNXphdVkZ6wu4MuMQCInErlY2Dj40xkTm/OKMQrhRO/1teY6
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
     "]]}, 
   {Hue[0.37820393249936934`, 0.6, 0.6], LineBox[CompressedData["
1:eJwtW3k4Vd/3Nlxc071IUVHIHDInctYJIUWRsQEJoQhFIpnK0GCMhMpQkkoK
KdHZ+lDIXKYyz/M1Zsjwu9/n+f11nvfZ6+z1rnft/e59/jiiDpfNnJgYGBjs
mBkY/vdUgG3jm5tUFD5zQzExqFf78sqeyJVVKjptKStQPdCrnV+gJDm/SEW6
r1unjhv1aStLGzsMT1ARm7RW0r1d/dr7eW/9rm2jong90U3joQFtvx9xft+a
qSjko1pi1tlB7ZLbT7ehOipyZdgbidoHtQ+ulpgV/EdFy4pB67FtQ9r4wGzN
o7dUxPqZ6cH5lRHtkMebLgm5VGSZ0y5eHTWq/dWKm+3+cyoyD7yYHCw8pq1X
K60bnEqfX6Hkp9Lxce0jRXafnSOoqC3/pEh916T2ncvuNvahVFTHpBQ2c2dK
u1YmYMkmkIo+H7T2ZT84rW3yJEnF+AoVjTPqSvvn0rTNIupeqdhRkXNy5XG/
s7PaCYf+HJE/RUWHY3mo+ypntX/9Gx2RtKAi+bdXBnX2zWlbepLEdxyloimj
qOFijnnt0zZaaQz7qUhZ/megQ++CdtqWI5qrSlS0ftxA6e6ZRe3uOsv2eTkq
2ngxTLn9Z1HbXsebf0SMivzaHnjK9f/Vdtz78l4dhYpWE6cjdvGvaD8f+iD7
nZ2uj4HzambOivbw04oqRKKiRWYGLBRf1Xbl7yUVrlKQiVGq7mP/f9oe69sC
U4YpqISnqMxzx4b222LxnQ/6KGjfvLDfwo8N7Rkv5U/3Oyko8qamsG/Iprb3
sPFicDMFqbzek+p8gwG71nDL/cIXCpJi5JLN42bC7k34ti18pKCmiGhKUTAT
lsnmeii0gILeNSzjEX+ZsFow3vo4h4K2FVW8bBpnxsTyt5Y1x1PQwX3BsbNL
LJhGLZuU/X0KOoZtO6EbxooZj67ETkVQUFvQVeV5XjbMT6TbkRxIz59Uy0Yc
IGP1sdlc2AUKOrVQJHm2iAMbfJ3s++McBam63eWfP8uJrVTd6bU+Q0GFC9Mi
Dzm4MHHGy4VXTCnI/meZ00VPbszfa/+Zl1oU9HlfRVCkBg8We1/mm7o6BY2u
zBl4PuHBnr/cqVihSEGGR0QCqlh5sca+TeYeCQoSSpd7SerhxSTNql7x81BQ
QAP3a+u3W7CDHiVbMzkoqOW/3aIesvyY6Z3XQftYKIg8Ekr2zuHHbnyNPWm0
yo36hQ5I3n2zFWtWtvkXNMiNLvIK1jF1C2CjJkeduHu40TuXcucob0Fs3U27
IaWDGzmIzXIncmzHpLNEs4rqudH4p6atMYd3YIFbxo0mPnKj2dfPH3uNCWHx
+zoL/Qq40SHa2vaQNGEs52j9LtY8bjQlVuBZfXIX1hz2fk4kixtpvvB1cGnY
jUkv+KdY3udGX+GcR+dNUQzjcScNRnCj5Lqnwe/HRbGTcnYeXqHcqOFFhgaP
jRh201FX5941bsSd08j6RHsP9usX53j5OW7E2uZeUyQlgYU4Fn15dYYbBTmn
m1WlS2AKC7YJiVbc6KqoVH+gkCQWueX9QVdjbmTY4n6fU0gK0zazjuE5wI0m
nLK2mGvLYON9jI6rKnR97vN07a6TwZK9XmkMKtD5VK7GstvLYnOxG33F4txo
b+37Y/4xe7HshmeqdjzciDlmuqxsmwJ20s6E/QgnN0pbjtt/vlwBY6AtdSmz
cqPw4138xZf3YacoRyNY17iQG0/9u86LihjVeLbjzQgXOqI1dr9oQgnzq9EO
WvvChe7nnXgSZq6GSZwaOTn8iQtZ9RZfdahVw5rHYqUbC7nQrucCU4366pgc
+2BTVi4XUvd96Z2gux/rM7gjfjSJCylF6apq2x7AottUVlTjuJDjt5gXEpMH
sIMXuup23eNCLS3RYXyBmlhSuOK1uRAutH+19d6BHC3MqLK1+pE7F9Jfn/gQ
I4FhS+bBT8JcuNDuBeFdl+ow7NmgzBX38/T3j618afEDbJM5UOiQDb2eAvcu
Y3ccK9TZc3lUjwvlN76O5xg+hAmjy/z7hbiQ+LuBibiDh7FaPrWrmgJcaIf8
kL/z28OYv9PqT20++nz9lmVJ4vpYK8ftBD0yFyJ/c3qnuc0Ai7VI4TNb4ER2
rwR6aAJHMCzHztuCxonOd9ozMzw9gk2tijdbj3MiXs3U6mZpI8wo/W2cXS8n
2vjnEbasdxRjnqjgca/lRFH1SdNd6cbYe+07np7fOdH1+O1JKWCC2cceb7zy
lRNlkF7kx/WZYKVqv2P8P3Kix3Y9Zz4KnMB8g2mUyGec6N2Hya0X/E2xsa07
uLNucKLhoHVThlRzLNml51L2NU4kw/5X0J5sgel/flb70psTPVXdIOavWWCZ
9vvu5btwopr6lwP9Zy2xM6/0OL+Yc6Ja/EqVqL41xrHBfrH8OCfSMAnzsv9m
jX060VBTYcSJqjcrNxWP2GDb/trc+YFzotzB2zs+W57CGvDL7B1ydD1MWflG
489gNxNUXTulOJHEiAKvjMxZTG54papHjBOJ9mWyu349i0XevRU5LMiJIrKP
O4lu2GI6rY/YFkic6LKd5BpvvT1WdLGChdrFgdwsXvf6oPOYhoiHUnYbB5rk
iwqSVnTESn4JnNVu5kASZb6jkOmIIe2LhRe/c6CeIBnZxvtOWA2V73zVOw50
cyjaeTzsAmZc8Tna7jUHSnL4lKJGdsEa/ZxK/mZzoIXs8MdmMS5YS99HXok0
DjRe8u+PdrYr1ltgh0LCOZBCc3LBveWLmIML+6RgCAd6N5PVJpB4CRsSKhDI
D+BAWiRhpwVVd2z8Nuvlbk8O1FbC+27kpge2aPVGWOs0BypoSN37+4knxrG2
6r+wjwMNbNfQJpVewe7nP8u+K8uB7vQ/f3pc5irG42TSLCbBgTqOWF4fSr6K
ba3PkDHdwYHEZZiPiQT5YCLphu1vSBzouplrgbzrNSzTfI758CY7iqo1DZcc
v4ZJsKft61xhR4YxOuEN7n6YrDctnIPGji517Sx2DbyOqeklqV3oYEeeees/
ThIB2MdlOLfxkx2phj+UPmd1A9N8M3YvsZ4dhfx7r584dwPDt2kP/vcfO7pQ
pJn1XvkmZjQ6EC+Sx46QxfHqWvdgzP6e0kxHKDvKDpwvXbochvkXxofXBbKj
ssy90dAchiV2zguV+7GjLmqDqov6LaxG7sORHA92tNvnR1oQ6TamUqeZ5XuK
ji+4blZ9DMdMFlMPuFmwo3ypmAeCeyMwF+H1hrMn2FFc6muPB08jsDR3Yk1P
nx1ZPDw0dCAmEmOl6FluUWZH8r4XPjneuYOJqD+fZJVnR7Vj5cIY9S6mZcsa
tirFji6Oy4WlJN3FPPOq3vYJsyMm7xp7zjf3sA4TY/Z8dnbE+u7iDbHVaOx1
jGXpsT4yio8Yea7LE499Ky42wzvJaG99QsV/rvFYX4/gmEobGR011nOcqYjH
tin+2bqzjoyeaJpKeAQnYEGNdpfHPpIRH2+cRidXIpayjFi6CsiobNcZ5vSr
iVihiFhaYx4ZMVFu9Jt2J2KjnoNVxc/IKFHIzjGrOAkz43UVC48loySli982
QpOxSwdqPl6/S0aHPnMGqvxLxiLO7T3uHk5G3XWxbhk+j7DSd1MB5jfIqHXy
0iNTrxRMwsy7RcyFjL7M/9cnczsNW44PiCSAjG4z3GY7/CAdGxEqH9fXJKOT
mVWGURPpWGs2q3G9KhlFF5Z8itTLwApK4ni7ZMiIKlco/OdfBubR/yJldQsZ
vdvhY1MRnIWduTS1FkIhI9Gi+9fbhrOwo3+V7djZyajjpXPblMkzTJrjyx7B
DTb0a//LkKMSz7EBpV+v1UbZkOv6d/6RiWys+fN2alk/G5JqY/Pdd/4Fhg7b
eel1saG5hcO69Z0vsCc242onm9mQ6q7BswfbcjDrEAbCs5QNWVjVlomN52L1
jXJNr2LZ0I1mJho14S1WespbReUuG5qy0x/9siMfezVYnFhymw29+26rH+me
j0Uu65yq9mdDMTIhxjMC7zBdEZuBYUc2VPWH2EMLfo8p5z457GHHhhpUk9Tj
e95jIqqDLxZt6PkMtxmz4QXYhsHlS6TjbOjyJT/2O6yF2MfLtxdFD7AhsYGI
vxO5RdiLlRqrlypsaOaCprXg9g9YUhhPiaICG6obymyzi/qAXXmYehP2sCFT
G4b2C57FmALxju0sNxvii9mrH2DzCcuidG9P7mNFFnzW/w5nlGHxp4HtQCcr
6ov4vHZJ5QsWmpO+0NHKitQHvkkcqfqCOeicb9hZy4qGE8lGZqsEJuY7euvp
B1ZEGmePC8fLMb7/jnjj71jRJnEsXSSxHGPieWXX94oV/dvecuHIRDnW/9Jd
c08GK1prKDY9n/YVy+yao2XfZUUXygvSbvFVYPGy5l0G4ayoXepmnt3VCiz0
WlHNaDArsqJysbC0V2AOvH7PZX1ZkeOFzrz6Z5WY6OH1U3n2rKhVLqNG3+I7
lv6a7VuRGitK2VXAE7n9Bxa74lJgqciKsPNUPYG0H1iwfk36kiwr2mJJ2skk
WovZ994LOCDCikZ97gfxK9dhu/n5lMo4WNHNQctzp7wbMMq5K7tsWVhRrtCx
weukRmzjzS/OzU0W5HIg8KaIaSPWbfBwGF9kQeJWuELCdCP2JEAoraKHBeWd
3edcotmMRVcFRjn9ZkGZiw/jQ+KasZtbe3xZW1hQvrhg9a+xZsz2bYapYQ0L
8q2/dUbz6U9MeECSrbaQBUnP2wVWCrdgaUZK3j+jWFDTnp5QK892TJzTqKbx
Fgs6ZX6NP/BPO/bqh4NYfRALcn7nmeBo2IGVHHvQXOXDgpbDY2MSpX7T/WVJ
+cs5FjTCd7vLaO0PZk/lufv5DAtKZc0KNfLtxEYbpAc+WrGghV4GQ4O5Tmz5
xKmEAmMWVNRRP2I104VtO1k2n3OABTlVUNc7mXqxJ1taj2arsqCCbPG9uoa9
mMSv6aysffR6VCdkqqN7MVULEfMnEixIqUXSWX93H2ZmFVaYwMuC2K64bA83
6cdiTh/xuTlGQvWl0W8sxgexbUIOdQGDJKTX5/98TncIe9LpL3G9h4TkmqVS
N54MYXlnX7dcaSEhr2iGvus2w1itHVXdtZyE9i86sDztHcHMRaSjnUtJaGfC
1hhz/VHsTy8+fL6YhBzGN1dfvBnFxs95J9m+ISE1BuGoQyFjGNmx5e/JRySk
0qIyN39wAosVnzYxfUBCHfJ/nY/lT2ACQ6wvTGJIaPVBgtY1iUlM0lnD6sht
EvoTJ02x3zqFHXZJLca8SKiK5YmiIRcNC710zk/mCAltLTgufy9vFuuOtk0r
0SWh+BGlvNaNWUzz3Wl0FCOh4JaPfTdOzGFzixZkDxUSMjeLKZ1bmsPOBRkl
vxcmIcsTBWES1gtYaYZBqa4gCbHfuGk0XbCACVbo9f7iIyGWz2yfDvEuYo1k
kF5iI6GagrclGY2LGB6v8lFrjhll8nV3/HNYwtIKFTtrJ5nR7uqsyvofS9hy
qzyD7Qgz6rG8rXJOfRnL3yltGNzJjF6zvBjp5VnBdj8Xaq/4xozE+SZaBTpX
sY1ilmXjVGbk9l7RR7R5Azv1m0moJ5EZHeoTHrh2ahP7sLYJnrHMKHF6ywbn
0CbmcWg1Iv42M6II+12PDGaArpppgbbLzEi34kvS91xG0Jia0HJxY0aj4XtL
XZcZ4QF1zG7FkRk90GuSPmHABMfMB17sPMWM3lwd61ofZYLSrrb99nrMqCn5
2cylgyQQZGg5PYsxo06O21zlD0hwVaw5KPQAM5J/ausUNk0CuQu1358pMKPW
wmNartkskDaDrMYE6fHRDIunpNkggDn3mvcUEwra9adT2p8DPB7ZstqPMqHm
mL0f7g5ygMO+LYnGA0xoNNSD59YJTjA6feO9dAcTUrv8l3JMngsEC0ymuiuY
UDrpx8/OVW4odJh3OJrGhIY/i3x/u8gDOcsvZjUeMqEzzwbwJQ1eSI0+EywZ
z4QotY2xWoG8EFpS+Zgxkgltt+p+XUXmA1O+5PbiK0zo4NckeRu5LTBdftBE
/CgT8nnjovo4Zyv0W8128uozoVT3+43u61uhZer5xU2cCfGwcqf5ndwGpdup
Ub/VmVCJemirMbMA3PXq+y9WjAnFnZ/y9vIWBGnR8APrK4xIWHttOT1+JwgV
a1aNLzCi8s92DsrrO4FqTLNspzEibjv/VkNXIfjrZ321YIgRpd09+nq7vjBU
NMq+dW1iRDGvRg/38u2Gc8EN4q05jOjM1mm32ZuiYNnxFOvKYkRK5fKZNkgU
jJQ9rQefMCKDrXpXc5jEQHWQ597cA0b0RzKzhuWOGJANzeYpIYzov/t7nPif
7YE8aku5gQ2dnxzLtiNkSchyef7HxJwRWZzWeRhvIwnJ5T6LFscZ0cBJFPD3
lSSEXNkm43iYEbWzbindaS4F5m1WscFKjCjJauSezntp+Pfkt+0ndkZ06cnN
bTYv98LMUq4fIjEiB1VnPy6KHAyeCIj/vsmA/F1crwlelYN6JqFvLYsMiBUf
vXJUTx4ync/Kz/Ux0L8XDqomLyqAoULvP9kSBsTfHF85fFwJtCPytyoXMSBd
85qxLdFKoNwbvO9APgPazeWbylenBDvjRc8bZDMgc2vZ4WhjZZhedKg5H8+A
DrRXuNVaq0Bi2VBymhsDwjO9vb6kqIGtX8rN/U4MCD3Xv/JrSg2kVY47Ntsx
IIMo0S9bddShJOfjPrIFA/oaGF0lM60O3Ql3v10BBlSpb+vHZqEBUm5KC0b8
DCiO42EwnNOCGfHhjiEKA3r06K3wUpUWfOpJIYLZGdDgU8MVYeWD8DCXvM19
fZNwDtBQqCVrQ29wnq5e8yZxufTAkGIVBt7yq0/mAjaJ2KnR21+OHAJS1nk3
aa9NQqSH2fzgnUOQJFinZuu8SbSl/whP+XEIPjOn11af2CQetlmZM5vqAOn3
4dV0iU1CpSJ1tNVZF5LC4yyON2wQpQ+2MYuXHwbptVWR2xUbxFXd7H/svPpQ
4uU4WfJpg3hlcJOD0UEfes7sD5N8tkG8cR2r2cdmQNejK3/db4NQyYQQmq0h
lPRIc70W2yAebajk8hschRsHGd+kCG4QF544h3NnHQXtRx3GUZQNwkLd7YQk
wzFAZndinFfXCecdC3cryo7B98oJPtHmdYJjYDmAamACv17lbU8KWSeKOacq
LtWcgCRyRMmta+uEoVMLKDOZgpWT3ekr7uvEqGmIRZamKfzexfP4hM06ccMr
72fMG1Poi/MS4VRaJ/5mW+R/TzWD6WuqUsG9a4TmhJT45VRzyP/FVeXRukZk
3o893dFtDl5KQy5na9eItz84z1H3WMDCeGKu5sc1QvnzeOzIGwv4d3ZJfjFm
jViU7fkvvM4SyHolqm6wRkx5SpNuqdtATXp8i7XaGuF0fJSpNMIG7q27+Rrs
XSN2BHnLDnXYALV450dxgTVCEbekbA05BdtkA7V6pv8RtguGe1X+nIY9PLiO
+ZN/RBW+cbMU2UK0Yp+/W8I/QlymJCdI1g6WT4QWBEf+I15TA2XiEu2gNq5C
/I33PyLhUBKJ7sRwdcsRNlaDfwTD2TNJQjvOwbdtZrXFtFUiNTblIiPjeVDc
P0+qH1wlPL3ebmofOg8pVg+0BztWibp6p+hDoefhcnJrHk/FKqHwkf1ANqsj
CO44HeeavEqUd7fI7dnuBG7CjpY7D60SLuKpAyPOF+CXNkuMkvoq4W2mppNR
eAEw2+zvBntXCTLFxV2f2QW2PB3VuLp1ldDU2LPTNssFSkXcd9aNrRA1WuO5
7DRXoIj79t6MXyG6rk1rpn64BH56AtsTI1YIUpNOrAG/O/Q7fjR9dWOFuH3V
QoDjijsUP1/92ua8QhwewiS6VDzAXirouaLWCvH09Otwrv8uw3vZSLf+gWUi
7+CFAoH7XrC7yf7T3o5lQh9s7xpWeMG9awfIPvXLRG5PTcO2NS9wqhh/zvZp
majNP1QV5+4NgrbGfXLRy0SbZuQJeesrEBjHZ31NY5kYGP3G72jsA+P7J7KR
/DLRUcBqtDfGByy7/1tk37NMZBsqcuY2+YDiXp+ENO5lIlhlv3yLtS/0V7TV
l/cvEazeXQlbPK+B4XLaYa77S8S3OQnf6v+uQ9ETnwcWoUvEa0G73f28/iB2
2GTgybUlwnXIqqPB3h/+xW0GKzksERdfT55VZgyAvL0OpZb7l4icmdf3jh67
Afx2UioZfX8JmqlV+yPuIOipfCeirv6XCA3yah98Hgo3Tq7oacj9JcrSvuY8
aQ8FwT7cVVPsL5HL1ProJ2cYnFhreIdR/hLW1Ob291fCAClP6xgMLxIb/9z+
ORy5BelPZZ2skxaJu/vSIzy5w+GgvHfUqXuLxJkKXUYrw3BoL/n05kzoIpH1
r/RgdVg48LQa/rX3WCT0uk7ZWKyFQwjXhQhX/UVCURKX2LsQAQ7Xs176/10g
IhtDdWo2o2CDdaLuxuQCcW9E/Oa87h1IeaA8d7N/gfBM/vGpJPIONL8t1wyr
XyBufr20KsV/F3SHe37czV4gZEcPBT1VvgfiJ4Wm0ywXiDAFFTaBmGgYkktU
Jj7ME+ZHnvyLG4kD2ZvPp0dfzRM5Qwe0kwTjwaOhKJcvY554H9o9QjWKh2Wv
VjHnu/PE54izPBfy4oGjWGALt/08EYweCn65kQCKh1LmT7HPE1i6iGK3YiL4
xOe+vbUxR8j39R964ZoIJQMlF/Pm54h366XPFjITQTf8zwBj9xxx29sbFxFI
AssfQr9y3s8RiRUBuq0sDyHA4mnh39NzhJ1lTGvaejKg7LeeIqZzhL2q5oQo
PALSMiFnpD9HiApct9cKeQTRKb3PHivOEeQ3lOR9bCmQ3iOaqMcyRyyms73U
3JEK31yf+cTnzRKzV1NP1px9DLw3X6orMM4Svyl32kApA8I/SFfxLM0QZpk6
l67YZMDq9Aub+ckZ4pjmA+alkAzot8u+8bGdjn2vic78zID3h7K+6uTPECsf
2EOLAzLBjOWxiZXdDFHd1KfM9icLpLaL1jEE0Ig/EYe27OrMBp47u2cqnWmE
FPtRcz3qC1heFd5y14xGtHZinjU6L6Cqc4fNVlkaMa1O01/OfQEu6fxDMh3T
xOOK4e7RoBzIlSKvm+2fJm7eDZ+OO5gLcuo0uefzk8R8R4nuW1IeOCsEBX3q
miTehKrNqxrlwVNJanPd90liMXfoLxabB3wC+679TZ0kGByL3vcLv4WlJY9y
A71Jwr9qnPnL7nz4+mnaYvzBBJFc0HTGwOQdWGtP39ynPk6cjbzsfKOvAOLV
bjbpiowTSk/8jspzF8IPeYq4Ncc4UWCwR3PvgULAdilUB3ePEaz1qfeo8YWw
Z9N9S3P4GCHCP+wSZlAE02jqxdW2UeL1V7PHDuUfIExvqvGT3wgxUtppazT/
Cb4aTh5XPT9CtDcHt+hKlwCD8UR9nvEIYXkGkuLOlsANi7HaLLERIvV2qOje
6hLwdR6qul87TARLrQTaPvsMLpFd6JzIMGF+IFyB9WIZHKuty2evGiQODpc4
Zj5GcKexdt+t94OES6ToTE4ZgqpfP/I20gaJtSiv+a4uBIe7ql/Pew0SAU/l
un7uKgdsujKna+cgkVabd38usxwUeb6kv7s8QBitWa/zF36FreZ5sTYC/cRs
XivHq9UKeC95t+Qwcz9x9QtvpdSuSjixcmFQidZHTCny1zQcqoQ7T0Q1OL73
EbaWaksZUZWwMfqgp8S3j1B50J9+Yuc3GA4MUBBq7SWCJlqODup/B4/jccll
Mj2EbJU4jzZRDTkLRpOJjD1EUYtNqvZoNfQ/IuEeHd3EnRqFSTfeGrAcvDay
K6qbCD3w6+9RxxqA67bqwaNdROipBF1prh/Ak7X3l86LTmKPdhyvsWMtvP9b
Sa0S/00ECnqTjdUbIDo38yu20kGMzBm4dbg0wEXbIJ+iug4ibeSSS0pqA4h/
0/iT6dtBnLTg4uhiaISkxFfZgVXthJayZdB+l0bwV43TVrnURgQtpLY3aTWB
jveZi08KfhH3QsMFz/5thud/hu6P3aonevx/2OUVtcJZU6HCP+cLic69s5ya
yd3wiSOg5atPASwe2D7vFzoAav2Mu0KsG+C4VHlGI+coKJRYzSq+bAC2wFwl
RqFRkIx/U9G70gBTK0LeMnKjwJnxWi3duBGaGP0j7I+NwtoJ687N6UZQlWFN
dro3Cl35b2UIpWY4Gv9l7i3HGDz1tK3QLv4F21JMTC5ujkHaGfa8xJ5fkCXg
7W9BGYdkw8KHU2wtcFhhz1UV4XGIFeG4+Ni6BXpO/GdRozkOwY1FvOsrLeDC
UBlg7zMO5xS57UoPtkHBB8b6LaPjsGfm84rm1w5Q3FNXXPl1Am7U6d5amOqA
fXoaO9ibJqA19wclb/tvGN1W+uNAzwTccfqzR9TrNzCyLN91+DcBM79XjdlE
/oBe6snkOuVJ+FJ5IPNnYCeU8jnxTTyeBMGscrn7Lzthfod1w1zuJHgHHynW
b+mEler5V0PFkyChZVP7Sa4Lrvg0aN9rmoR7+X5/n/7pgvSr3qIdzFNwKrXY
6NKBHnh3LsLNwnEKCv2gRcKpBzCd+183L08BxfK7XU9sD8QbzaolBExBOU/b
VbPRHpg8G7JwNX4K+HUDjqcd7YWgLTtuiRBTEPAx5Xroai8c3W2rtbFlGqRf
dGN2PH0garVxXm7XNPxKFCMdlOyDufTHbYekp0HhSm70omkftC1lqYgdnIZ+
+ZIsl5d9IKSR31rkMA1HsjrqTKz7QSG40Jzv1TTM3M5zrnTvBxNdG8GQgmlI
dgnb1ArrB6tyz/DWz9MwKi+vJJPXD3bH8znUaqch8mPwA2bSAKz2G9l+mZgG
xVQLef/tA6AX8nqX/fw0tAfKfptRGACDW059I6t0vrq/lrpsBsDd+9Gul+w0
qKqTOv3x7QCckn94ekaCBp75a/MKlQMQ9SSAB8nRQDCh6d7z3wNwg3Fin48K
DVysA77EswxCTkvwhRicBuSBelH304OguLSrPcSGBgbLPqOibENgejnx4Ylw
Gkz/NgpJFhoCzttrqpfv0iCpbPcOqvIQlGN1uHcsDYZDq4+unRmCy2nWHhIp
NAjnFn7b+n4IzLZ++oy9poHCzKyBcdUQnBERcArKp0Fr87fe/7qG4G9UxvZn
hTSQTPbke0cehmffeP0eldLgm1iFz13bYah4HDSk/IMGHiyPKExXh2H3+9Pl
8fU02Dbq/sIvahgqtbKsWpto4PxGoMOpcBh8Mp7HkttpQImd9OqsHoafc0Vi
S79p8MG7nONkzzD8nu40ru6iAavGxYM4xwjMe50xFRygQd4OvOXD7hEoFnbb
mThEA8t1fg95tRF4sb58bnGEBtlfvzzdYT8CDRPHjtpP0sDkeYJGnM8I8DXK
9rtN0+BvhEsT290RINd87rKeocFhYz7mxaIRGM73me6ep0H0OfbZleoReL01
/tKZRRq0+zD0bHSNwLGfVkvoLw1E7yzVMs+NwLpl6F2uZRq4PZkuIbOOArrD
JgkrNCh4P5TDvWMUdPsEKqxXabD2rTOJT2EU+ux3nbf5R8/35+ctAZ1RKH6D
GA6t0fPRaryFLOk+wteTQl2nQRvzV3tRt1EouvNgXyUdiwh+MpG8OQpm39TL
zm3Q88nlH9wbPwrrKpY6Q3RcgL+QVcwehVbSl7Ljm/R85k8E1UpGIVLpqkIG
Heu7JrJq1o/C7pufEjroOCbw3gLWPwoLN9inlum4PS6sX/fvKLyP3aG5Scei
2f6NhnQf853q8p+kY7cSry/Gu8aA/VHQW0THBfUur82Ux2C/m3N7wP/y9dul
WOnTMZvqX2E6PrxkGXnm1BioD1Swv6Dzi+Y08T3nMQYrmor8AnTcvvuwo3Po
GCTwVG3zoNcnqnrQ7GLSGOhIbt/ymq6Hm6EK7pk7BtbL4xxNdL0Kz8gq+HwZ
A8MPwNBF13PdU1TIv3kMqjXNFxvoeuvfFuQIGh6Drczpky/p/Yh5RF0OWx2D
wxIto25L9HxvWIcj6b6LDvdO8tH759a6UB6vPg5mice3C9L7XTA+8fah0Thc
cn1n6DNLr2ej/3Ga7TiEuA3e/0Sj85dqup4dPg7W45puSxP0/mhVXXiVMg5B
bgocs2P0/pwgLPLzxmF1Kb6pib7+CvzeKJW0jkMad/24IX29rt17tpsYH4eE
Wj2Dnl4634xU7oqNcVjvvNR7ppvOrzpqrE5yAq4U3+vl7qDH73DO6POdgJft
X2sM6uh67jsbM3xnApwWh8sEa+h8dM0DJ55MAPiR9zR9o+t3Scdm8dsEkHZJ
OSwT9PnLdvGyC0xC9t3LyaLv6Ho0bd3k3jsJI/r3NhTe0PMNcU3xwSQEBMju
EH9J14Pyr0rowiRMmrc/rEynx9u1BSvSfZ53x+Ovw9F0f5g8CMO1k6A6ES9e
G0WDm9cz11P7J+Etq75l4i36fk9w92ejTMGambrDz+v0/fad+Wo33fd/sIyW
bTrQ+Zi7Kj/wn4IXcrbaLGdpgPXVzxyJnYKyB7WsNEu63/x75F70eQqyReRL
LhvR/WCf4oV7fNMgJChxW0qRvv9LEyV06L5u4hyiaipDgw3DfwNL2tOwnu9c
YidG9zuHb/bnXadB86Jj4l5+GtQnnTmliabB7Pi7nOC/0xC9EWk86k6DyJNu
e5U/TEP43WnOJ2E0+K+LyHv/ZhpuCprXnHxEA/uLSpbbn0+Dh/JuA6KCBozt
s+6PEqZBquCUyA/uGRiNKrS8cHka2EZmtmc6zsC99tmo42LT8N1EmPsE3yyU
PWcpYPeln18Kfdu8hWZBc4lN+/DFKbDnfi7yQHIWOAqaJdztp2D1h5xqu+Ys
DH1w8A01mgK5IwdP25+fBZVc9vpK4SmI1T390rNwFnKcArMq0SSc0nh0OM5y
DoIt/bDzKxMwJbr1ZnPKPBysf+SFa42DRkCGV/mzeZgXMPhdKDcOob/knfLz
5iESfJWEd43Dtgj9Y9Ff56GsXEWkhmEcsMlrO4zG56GRJVQluXIMYj78/lB+
YAFsTdfndxmPgdLRdFp++wKMK/H7ZJuPgs/Vveditv0FVQPZsD3HhqGtk8fM
uWoZ2tvVsaSCPrC/fnCE7dg/iOx3RtW7/oCsY1XLtOU/GA+jtSes/YZ5E/OK
lnP/QKfzjYzn798QLn4pI+vaP/juJM9vn/QbXjeknoasf8A1EGsjSv0NKxL/
GnxX/4FaqMknI1IHxDd/+jiUswZnbCbc5TZa4b+9++/8x7IBjnojTwPUf4Lt
PvOsWeoGCKs/my/c+ROWlb1Kd+/YgLc3gtVIjD9BTvPVdIDCBqTcVywa/NEM
Dwx3n1S12oBHxRozeQ7N4OzEJvQ8ZwN4eh7Xez1oAvLTtjfhRzchoGGDmUZu
hMzMhW+FFpugQavaOdfXAAezeXv77TahSf+HqOr7BvB8c5QPrm4CY4eAhM7J
Buj4TPgupW2CS4l5c/jDeshtp39zTW/C9mfS4cXSdSDJXjr6zJABv4tlH6lw
r4G57wpumcYMeLSJV7mnXg18Cc+YeGrGgF84bhBxZCf9/k2KmE45w4Dv6PYf
Dqquhtubpguxngw48J3AN6WqYXBxZPNGMgOe45b29NDUd8js3yJgMcqAf+Cs
Yb+fXAkeGeHJZlMM+PDX0g/vrlaCpv3K9hNzDHiB3x8LRtNKaO7qFjq6xoCf
0OeWFeWopNfxUuwQDyNu0hlsee5mBdg3gIK8BiMu/k1L65fHfyBcevEwSyQj
/vnS1turHuXAv3111eM+I+7P0tf71bgcuHwj89vjGfGAjci6ErlyWNv3fOfr
x4z4mfcMPRoTCH5ndc+aFTDi54+L+7u5IUi6a/okvZsR38F2rI8y8AUop/cv
aakx4bEWmdd8dD8D68fK1881mfARrVvH3Lg+wzq/uQMVZ8Itrr3KL2opgcl6
z7p+IyY8d8fJFRPXEqjRyc2KsmfCmRO6tMIefIIIWeETbXeZcG/vMfa3q8XA
sMr00rufCX9W/tVunLkI7Ac65oNGmHDzJSKZ/3choNp87P4kEy44Z/UoJL8Q
gp/a/nrxlwnnFh8eFLMthE29ks1ODma8Kk3xSEBpAWzEeFkaqDDj6yclRA1v
v4c1iV5moVvMuKKVy4zP4Xw4Qy02kYlixjV+W9f77MmH0uX7j9SjmfHGFe2F
t4z5cOOH1j7TZGbcXNWC+1ngW/jn+fBU+GtmfOjhicd3r+XB6meTdzO/mPEZ
v9RE++DXsGRaZlspQcKlhJbF3PtzILTjbRe2l4R3Ki+3uL/IAcq5zDMfFUn4
0BP+yIFLOSDpGXHqlRYJf+9pbLB35QWYR5taxpmScGR5rHm7wAvIrxkyPhtI
wjUT/8j3XXgOB83aa1tD6eOsvVcHVJ7D946aoyciSfjitnCrEwzPoXv07RHd
BBIube9x/kLKM+Bi8z8s85KEu5/nbfX7mQWuuhTtxV8kfFX2ekSadSYs1DCU
evwm4SvecXNrspkQbDavOdpDwr+b1S2XrWdA8rl2jT/jJPzFqIyz3bMM+BaU
qVrOwII37Q/5QfmbDmKl6nL35Vhwrd8z0ioWT+GPqt1OiVsseIzaLZO4nBRw
XlGj3o5iwWuVQ5S8HFNgpoyLeSiaBd/xaDZxRCQFSAYl488eseBDUgyVCamP
QMFma4n4Wxb80X8B4nUPkyE48Ie1+G8WfHbY/1N/bhJw6GQeu9XDgrNlX3d6
dzkJElmv44ODLPiC0YeHrGpJkBsjKf2MxoLbnwv/gJcnws+MkKU9LKx4gKW6
UkfPA5D8tj9pjyIrXf8bTtWqCZB/h3InTI0VZ9N67xbDmACax4cCBzRZ8dy5
9G119fFwvD3eKeswPX6/fvMrt3jwG59S3XOaFW+ouSXR/SIOflCe/RQLZ8WT
aZVnzPfHgqcVD69YJyteerTp8oUjd8EhZ1+KRB8rzn6tYVs2012wWDHZIzPM
ilteNFWLKL0Dmqn31RRnWHHZw2Mre5XvAEsPxymMxIZP1ymMdIlHQYozS9Yp
OTZcxPk68x/JCLhXLC5nq8SGG3AKBb4fC4cgsl7ROXU2nNuOq2j7m3BwzA39
7oKz4UVjnybi1cJh3/TmhK85G96g4pTFa3wbKnxWVRNusOHLvKe4jyeGwYdv
278khbDhW4vclNLtw+ClwAGDlHA2fMcPVgZPuTCI/nTNJiOWDZ8/Jx4bURkK
NusLgW+fseG/34sE+K+HwPQt2rcftWz4x6N+SQ/CgmH7g0FrkjAZn63NuC5Z
EQAaYbu3XRUj40I7c+T0PAPA0vvUzwEpMh7HqoPrCwdA/IlG4/+Uybjurtw9
tOv+wMVdqhNqSMZTPf6jPdK+Dhu3E+QYrpJx8/07J2InfUHIp37s8nUynjLN
/o0h2xe0HNlf9Nwk4+3sUzJq9r7gpxMkSkSR8erAfTsGW31gdsNt282nZLx3
utFAqu4qDF7TYVirIeOVWrVzBX+8gelCYNnFRjL+xH3wwoN0bxCx/Oj/p4WM
r3J/1xR29oazqgqLJb1knPSo2UV03gtaZ7aPX/9Lxn/IKuZ+4/eCatfZn0ui
7PgRkzrXo+MeMGotF3dBih3v5+hEqREewGp4waRNjj7Ov6bHKelBv0d3VX3Y
z46XR3GfOOjsDqX9VWU+xux4s6S07MP5i5B3Ov3FvB87/uPqlFc1uIJq255V
1pvs+KW4rCey8y7w2ezFsR1h7LjbCxkf+xcuUHUkbxa/z44X0rbOHuJzgYH9
pVrRGey4BdniR9asMwjytzdI17Djmi39XfItjvAk5rTYwQZ2XGbr35+TDxxB
grPn6vFf7PiBmzsfnbNwBGWm4e2+3ez4+QvLTk7t58F4Zv78f3Ps+JXnez88
G3aA0Frq8tmdHDinxLmhMLFzQDZMMPIS4cBpfLxPGiftIea/bY9vSXDg3fwG
8h+L7SGtRFjn1T4O3CM6Pcb0uD0U5+y9t6zLgY+ltTeQOO1g8paBSMIlDjxl
S++B3dvPwBWGH97ZXhw4W8+bzFziNKwGmFR+8uXA14NUqw5eOA1sVyzceoM5
8CCJK55un06B2LnzhfKJHPh3eY2MdFcbsNIOMqwq48BlivqL9i9ZQufiMPXr
V/r7Qr2ZrnmW4JBn0vb5Owcerb1M9nK2hEu7dzm/beLAjyX/57bUbgGhjGVh
SUMceObjgurn380hr3L1iyM3J06uzHYrqDYD1ZsO4bZ8nLhvzYg6dt8MPqnX
GFsLcOLOg8fOB5qaQcWLR51HRTlxK8W3B3k7TaEjSmNVWY0T/9DbFHNq5QSQ
THzVGM9y4iH2fvu/PDeBO6zda6vnOPFLOPljziEToBKHKxacOXEN1avzX7uN
YYfi1pOjnpw48XI16LqQMezjK/RsuMWJ3yuomH3w/Cicap199fg1J/7b9sS3
+glD6I22ufLwHSd+no22pvXIEJwMyjXjPnDiV0RfMucYGILnx9jqW4gT742d
OOL1wgDCU/aNXPzFiTflbJQGeOvDO1t3Mc01TnzBIq5ol6oeOBTNCKczcuHP
1CtQwLgu8HNd3c7KxoUfW/Az/pmhC76f/HmaebnwoqDRT05bdEGTP3LDVYoL
D9eZOlvBqANfqzN/PzLjwr9+Cvs0Qsbhiohk66YVF95WXHZaJBVA/NrLJqez
XPh+FpIolyTQ75/5VUouXLjgVGfrUxyDo0FlH6oDuXDH8y9V5SIPwi/V9viV
HHp8P9f2l2cOwO27p6Pt8rhwyuxKkf26Bqj3d0dVFnDhB7gjui881YDkmKHg
uC9c+A63gIaTI/vh7Pich8wvLpxR6EuzfLg6DD/lPmqzyYVfPX6h12NNBR7+
jdUnSNz4tIXN3IF8FTA05teR4ODGj8duTm11UoHc1R0HZvm58UTdPeFzTcpw
2UJaKkqWG++JuvG1q1gJljl0mT9ZcON2EzQr1fP7gG+a8uDrKW5cdNSv+tes
Auxt+i1ea8eN34m4dO9viALYPvTW73Hlxn/s5eJ9lS0P/+3JjGK5yY2rGk6b
WzLKQfRBRh6zbG78utx/Tc1L0pCzuy799CtuvFuBvOCWJg3lTI+UnPK58ZRD
3v6YjjQsVCme9Cuh46Dl0Yg4KThlYZ/0pJ4b3+7cpq+BSYKEByE08Zcb33+3
5NLP2j2Amd59s/CPG486X2xuF7YHrFWtsA0GCn77fFDApOYeuLM6bcfLScEd
UqUurr8Wg5nwXVn7d1PwlVJMOz1NFEqfBsrcMqDgdRr5Y9dMdkNr6JGS+8co
OKkzp662fRfQnLYefWhKwYeKRDr/c9wFYnJvLuWepuAnB0YaQkOEIeJj59vG
yxR8lcig5tftBLMmLXXhZAo+PkfaOP1aEDi0OMtLH1PwkMojog90BaH82e+j
Z7IouF6fTK5XpwAo+l0/l5pHwSPyQYG0RQAou4vvba+k4DpShb7d8VvhW2S4
wKcaCq5KKctMVt8KgXMWmdaNFPyVFeefqj/8MFm5UPzwDwXXshzQ95Hlh+pL
ygNb5yj4HLvFngvtfBDcyuhRtETnv3XpoGYEH2jgTcvm6xTcaunEpvV+Psje
4kl5QKbi5Kj7uU6pvHCr5M0Bvt1U/KX6x2eq3jyAk2ViKceoeFFnKa/pGy5Y
9lrekWdKxd1upy1xKXLB2z/fnxtbUfEylPCqsZATdr11/nyPfoPOrlDtPl7B
AWsWz4Y5rlNx7xsvjSxXyVBIXPHKvUnF1Vxr8/zukeGijO7akVtUfP5Jmb+z
CBl+r/XxRsVQcWFOhe2RxmxQnLVbmy2binfFrxbuKWUBD27a9+xXVPrZO9LX
e5oFJK99MdN/R8UDCyjPVdZJ8MDorMvtUvq4AMevYD0SeM+mJDD/pOKaM0XS
1CEmkD3ttiurnYrb72grqItlgr6KAy91uqk4Afy0WW0mOJHc/iVkjIqHSxWI
WaQxApkp54gojYoXogyJKGNGIC5e+4UW6PPXqE9xMTCCb4u+nf0qFa/3SlP6
U8AA//9/F26+7feXaRcG+D+LKAUC
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  Method->{},
  PlotRange->{{-4, 4}, {0., 0.9999999064506724}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{3.6126783754929695`*^9}]
}, Open  ]],

Cell["\<\
Naively, it seems intuitive that these basis functions are too close together \
and therefore will create an ill condtioned interpolation matrix as opposed \
to the Newton basis where at least the functions look different.\
\>", "Text",
 CellChangeTimes->{{3.612678408280774*^9, 3.6126784821518292`*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["The Matrices", "Section",
 CellChangeTimes->{{3.6126796946210165`*^9, 3.6126796973618393`*^9}}],

Cell[BoxData[
 RowBox[{"Clear", "[", 
  RowBox[{
  "v", ",", "n", ",", "m", ",", "k", ",", "K", ",", "Nt", ",", "u", ",", "x", 
   ",", "X"}], "]"}]], "Input",
 CellChangeTimes->{{3.6124741960386515`*^9, 3.612474201449249*^9}, {
  3.612474840719448*^9, 3.612474841033656*^9}, {3.612506143408664*^9, 
  3.612506143646824*^9}, {3.612506176750831*^9, 3.6125061772811832`*^9}, {
  3.6125675869996233`*^9, 3.61256758839255*^9}, {3.6126327154021597`*^9, 
  3.612632716253726*^9}, {3.612634052451976*^9, 3.6126340528952703`*^9}, {
  3.612674607772254*^9, 3.6126746087549076`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"K", "[", 
   RowBox[{"x_", ",", "y_"}], "]"}], ":=", 
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{"-", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"x", "-", "y"}], ")"}], "2"]}]]}]], "Input",
 CellChangeTimes->{{3.6124757756903524`*^9, 3.612475800854081*^9}, {
  3.6124760203271627`*^9, 3.6124760284565673`*^9}, {3.612477252868359*^9, 
  3.612477257782626*^9}, {3.6125063363297133`*^9, 3.6125063370241747`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"n", "=", "4"}], ";"}]], "Input",
 CellChangeTimes->{{3.612474173418613*^9, 3.6124741757031326`*^9}, {
  3.6124751515776644`*^9, 3.612475151793808*^9}, {3.612479211223221*^9, 
  3.6124792148066034`*^9}, {3.6124793391292686`*^9, 3.61247933940145*^9}, {
  3.612479450416253*^9, 3.6124794511377325`*^9}, {3.612506859837739*^9, 
  3.612506860052882*^9}, {3.612556193385225*^9, 3.6125561937044363`*^9}, {
  3.6125562323839507`*^9, 3.6125562333335824`*^9}, {3.612567023982095*^9, 
  3.612567024297303*^9}, {3.612631754279673*^9, 3.612631754422768*^9}, {
  3.6126318372788515`*^9, 3.6126318376631064`*^9}, {3.612674537300894*^9, 
  3.6126745380313787`*^9}}],

Cell[TextData[{
 "We are given",
 Cell[BoxData[
  FormBox[Cell[""], TraditionalForm]]],
 " a set of points ",
 Cell[BoxData[
  FormBox["X", TraditionalForm]]]
}], "Text",
 CellChangeTimes->{{3.612565300518283*^9, 3.6125653025966654`*^9}, {
  3.612565339097931*^9, 3.6125653709521103`*^9}, {3.6125655681373377`*^9, 
  3.6125656430051203`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"X", "=", 
  RowBox[{"Sort", "[", 
   RowBox[{"RandomReal", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "1"}], "}"}], ",", "n"}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6125656498288035`*^9, 3.612565671087937*^9}, {
   3.6125670277626066`*^9, 3.612567027955735*^9}, {3.6125675216882033`*^9, 
   3.6125675373306046`*^9}, {3.6125675934969435`*^9, 3.612567594250445*^9}, {
   3.612631760082531*^9, 3.612631845392245*^9}, 3.6126473215737033`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.4880342625770815`", ",", "0.5889823519225894`", ",", 
   "0.7491274719008187`", ",", "0.7809927512471861`"}], "}"}]], "Output",
 CellChangeTimes->{
  3.6125656728060784`*^9, {3.6125670059461036`*^9, 3.6125670370287685`*^9}, 
   3.6125671867867107`*^9, {3.612567541327261*^9, 3.6125675487051644`*^9}, 
   3.6125675959735904`*^9, 3.6126310262553864`*^9, {3.61263180538665*^9, 
   3.612631815921653*^9}, 3.612632388862543*^9, 3.612632720176334*^9, 
   3.6126442273771334`*^9, 3.6126472828479843`*^9, 3.6126473222701674`*^9, 
   3.612648024415514*^9, 3.612650864067947*^9, 3.6126513718658857`*^9, 
   3.6126588073554144`*^9, 3.6126742251878185`*^9, 3.6126745442935963`*^9, 
   3.6126746204416714`*^9, 3.6126754494443464`*^9, 3.6126773025199633`*^9, 
   3.6126799253193808`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"standardBasis", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"K", "[", 
     RowBox[{"x", ",", 
      RowBox[{"X", "[", 
       RowBox[{"[", "l", "]"}], "]"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"l", ",", "1", ",", "n"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6125657040648603`*^9, 3.612565721659557*^9}, {
   3.6125670410264244`*^9, 3.612567041255577*^9}, {3.6125675657645073`*^9, 
   3.6125675682451563`*^9}, {3.6126324237597413`*^9, 3.612632426778983*^9}, {
   3.612677572440462*^9, 3.612677575515505*^9}, {3.612677615786647*^9, 
   3.6126776299720693`*^9}, 3.612680444122224*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "0.4880342625770815`"}], "+", "x"}], ")"}], "2"]}]], ",", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "0.5889823519225894`"}], "+", "x"}], ")"}], "2"]}]], ",", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "0.7491274719008187`"}], "+", "x"}], ")"}], "2"]}]], ",", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "0.7809927512471861`"}], "+", "x"}], ")"}], "2"]}]]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.6126804498670416`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"A", "=", 
   RowBox[{"Outer", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"K", "[", " ", 
       RowBox[{"#1", ",", "#2"}], "]"}], "&"}], ",", "X", ",", " ", "X", ",", 
     "1"}], "]"}]}], ";", 
  RowBox[{"MatrixForm", "[", "A", "]"}]}]], "Input",
 CellChangeTimes->{{3.612679776286269*^9, 3.612679828371975*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1.`", "0.9898612306465158`", "0.9341019766962794`", 
      "0.9177551215377332`"},
     {"0.9898612306465158`", "1.`", "0.9746796174681408`", 
      "0.9638033553089126`"},
     {"0.9341019766962794`", "0.9746796174681408`", "1.`", 
      "0.9989851193122851`"},
     {"0.9177551215377332`", "0.9638033553089126`", "0.9989851193122851`", 
      "1.`"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.6126798293886504`*^9, 3.612679865643737*^9, 
  3.612679926670279*^9}]
}, Open  ]],

Cell["\<\
As we can see this has a bad condition number. Condition numbers are the last \
value returned by the LUDecomposition command.\
\>", "Text",
 CellChangeTimes->{{3.6126800288549147`*^9, 3.612680084398815*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Last", "[", 
  RowBox[{"LUDecomposition", "[", "A", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.6126799336499157`*^9, 3.6126799522752886`*^9}, {
  3.612679999429366*^9, 3.6126800172161837`*^9}}],

Cell[BoxData["3.9921225080085616`*^6"], "Output",
 CellChangeTimes->{
  3.612679939131558*^9, {3.6126800018339653`*^9, 3.6126800179216766`*^9}}]
}, Open  ]],

Cell["\<\
On the other hand our Newton basis is \
\>", "Text",
 CellChangeTimes->{{3.6126802120309067`*^9, 3.612680221210018*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"newtonBasis", "=", 
  RowBox[{"Newtonize", "[", 
   RowBox[{"X", ",", "K"}], "]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"1.`", " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"-", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "0.4880342625770815`"}], "+", "x"}], ")"}], "2"]}]]}], 
   ",", 
   RowBox[{"2.517960963139447`", " ", 
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"-", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "0.7809927512471861`"}], "+", "x"}], ")"}], "2"]}]], 
      "-", 
      RowBox[{"0.9177551215377332`", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"-", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "0.4880342625770815`"}], "+", "x"}], ")"}], 
          "2"]}]]}]}], ")"}]}], ",", 
   RowBox[{"36.54451604463467`", " ", 
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"-", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "0.5889823519225894`"}], "+", "x"}], ")"}], "2"]}]], 
      "-", 
      RowBox[{"0.9898612306465158`", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"-", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "0.4880342625770815`"}], "+", "x"}], ")"}], 
          "2"]}]]}], "-", 
      RowBox[{"0.35094596830943736`", " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"-", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "0.7809927512471861`"}], "+", "x"}], ")"}], 
            "2"]}]], "-", 
         RowBox[{"0.9177551215377332`", " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"-", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "0.4880342625770815`"}], "+", "x"}], ")"}], 
             "2"]}]]}]}], ")"}]}]}], ")"}]}], ",", 
   RowBox[{"658.2690239736572`", " ", 
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"-", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "0.7491274719008187`"}], "+", "x"}], ")"}], "2"]}]], 
      "-", 
      RowBox[{"0.9341019766962794`", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"-", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "0.4880342625770815`"}], "+", "x"}], ")"}], 
          "2"]}]]}], "-", 
      RowBox[{"0.8984483359752401`", " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"-", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "0.7809927512471861`"}], "+", "x"}], ")"}], 
            "2"]}]], "-", 
         RowBox[{"0.9177551215377332`", " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"-", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "0.4880342625770815`"}], "+", "x"}], ")"}], 
             "2"]}]]}]}], ")"}]}], "-", 
      RowBox[{"0.42248274256987095`", " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"-", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "0.5889823519225894`"}], "+", "x"}], ")"}], 
            "2"]}]], "-", 
         RowBox[{"0.9898612306465158`", " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"-", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "0.4880342625770815`"}], "+", "x"}], ")"}], 
             "2"]}]]}], "-", 
         RowBox[{"0.35094596830943736`", " ", 
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"-", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "0.7809927512471861`"}], "+", "x"}], ")"}], 
               "2"]}]], "-", 
            RowBox[{"0.9177551215377332`", " ", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"-", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "0.4880342625770815`"}], "+", "x"}], ")"}], 
                "2"]}]]}]}], ")"}]}]}], ")"}]}]}], ")"}]}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.612680242753317*^9, {3.6126803568402405`*^9, 3.6126803781453943`*^9}, 
   3.612680512721918*^9}]
}, Open  ]],

Cell["In expanded form", "Text",
 CellChangeTimes->{{3.612681184855647*^9, 3.612681187479395*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"expandedNewtonBasis", "=", 
  RowBox[{"newtonBasis", "//", "Expand"}]}]], "Input",
 CellChangeTimes->{{3.6126803425807667`*^9, 3.612680375070351*^9}, {
  3.612680638364386*^9, 3.6126806403637133`*^9}, {3.6126808349863424`*^9, 
  3.612680841568715*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"1.`", " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"-", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "0.4880342625770815`"}], "+", "x"}], ")"}], "2"]}]]}], 
   ",", 
   RowBox[{
    RowBox[{"2.517960963139447`", " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"-", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "0.7809927512471861`"}], "+", "x"}], ")"}], "2"]}]]}], 
    "-", 
    RowBox[{"2.310871569753311`", " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"-", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "0.4880342625770815`"}], "+", "x"}], ")"}], 
        "2"]}]]}]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "12.825150569684084`"}], " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"-", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "0.7809927512471861`"}], "+", "x"}], ")"}], "2"]}]]}], 
    "+", 
    RowBox[{"36.54451604463467`", " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"-", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "0.5889823519225894`"}], "+", "x"}], ")"}], "2"]}]]}], 
    "-", 
    RowBox[{"24.40365200550327`", " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"-", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "0.4880342625770815`"}], "+", "x"}], ")"}], 
        "2"]}]]}]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "493.8200726092838`"}], " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"-", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "0.7809927512471861`"}], "+", "x"}], ")"}], "2"]}]]}], 
    "+", 
    RowBox[{"658.2690239736572`", " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"-", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "0.7491274719008187`"}], "+", "x"}], ")"}], "2"]}]]}], 
    "-", 
    RowBox[{"278.1073025971828`", " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"-", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "0.5889823519225894`"}], "+", "x"}], ")"}], "2"]}]]}], 
    "+", 
    RowBox[{"113.60314106421214`", " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"-", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "0.4880342625770815`"}], "+", "x"}], ")"}], 
        "2"]}]]}]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.6126803492271814`*^9, 3.6126803884022074`*^9}, 
   3.612680513822651*^9, 3.612680640860046*^9, 3.61268084255237*^9}]
}, Open  ]],

Cell["\<\
The next thing to do would be to find the condition number of the matrix \
created by this system. This should not be hard and we expect it is a better \
number.\
\>", "Text",
 CellChangeTimes->{{3.6126811336486287`*^9, 3.6126811727385955`*^9}, {
  3.6126814098868327`*^9, 3.6126814100079174`*^9}}]
}, Open  ]]
}, Open  ]]
},
WindowToolbars->"EditBar",
WindowSize->{1350, 631},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
ShowSelection->True,
Magnification:>1.5 Inherited,
FrontEndVersion->"9.0 for Microsoft Windows (64-bit) (January 25, 2013)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[579, 22, 141, 1, 214, "Title"],
Cell[723, 25, 130, 3, 74, "Subtitle"],
Cell[856, 30, 524, 9, 102, "Text"],
Cell[CellGroupData[{
Cell[1405, 43, 97, 1, 117, "Section"],
Cell[1505, 46, 458, 7, 102, "Text"],
Cell[1966, 55, 483, 8, 102, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2486, 68, 203, 4, 117, "Section"],
Cell[2692, 74, 689, 20, 76, "Text"],
Cell[CellGroupData[{
Cell[3406, 98, 827, 23, 45, "Input"],
Cell[4236, 123, 650, 16, 72, "Output"]
}, Open  ]],
Cell[4901, 142, 700, 13, 131, "Text"],
Cell[CellGroupData[{
Cell[5626, 159, 332, 9, 72, "Input"],
Cell[5961, 170, 425, 10, 44, "Output"]
}, Open  ]],
Cell[6401, 183, 245, 5, 74, "Text"],
Cell[6649, 190, 675, 20, 60, "Input"],
Cell[7327, 212, 132, 1, 45, "Text"],
Cell[CellGroupData[{
Cell[7484, 217, 500, 12, 45, "Input"],
Cell[7987, 231, 5980, 187, 191, "Output"]
}, Open  ]],
Cell[13982, 421, 159, 3, 45, "Text"],
Cell[CellGroupData[{
Cell[14166, 428, 195, 5, 45, "Input"],
Cell[14364, 435, 4371, 113, 213, "Output"]
}, Open  ]],
Cell[18750, 551, 160, 3, 45, "Text"],
Cell[CellGroupData[{
Cell[18935, 558, 409, 14, 72, "Input"],
Cell[19347, 574, 359, 7, 44, "Output"]
}, Open  ]],
Cell[19721, 584, 233, 7, 45, "Text"],
Cell[CellGroupData[{
Cell[19979, 595, 301, 9, 45, "Input"],
Cell[20283, 606, 4821, 125, 297, "Output"]
}, Open  ]],
Cell[25119, 734, 117, 1, 45, "Text"],
Cell[CellGroupData[{
Cell[25261, 739, 814, 21, 45, "Input"],
Cell[26078, 762, 975, 23, 73, "Output"]
}, Open  ]],
Cell[27068, 788, 124, 1, 45, "Text"],
Cell[CellGroupData[{
Cell[27217, 793, 636, 19, 45, "Input"],
Cell[27856, 814, 953, 24, 73, "Output"]
}, Open  ]],
Cell[28824, 841, 130, 1, 45, "Text"],
Cell[CellGroupData[{
Cell[28979, 846, 1176, 33, 75, "Input"],
Cell[30158, 881, 1928, 51, 87, "Output"]
}, Open  ]],
Cell[32101, 935, 392, 7, 74, "Text"],
Cell[32496, 944, 180, 3, 45, "Input"],
Cell[32679, 949, 3718, 93, 293, "Input"],
Cell[36400, 1044, 106, 1, 45, "Text"],
Cell[CellGroupData[{
Cell[36531, 1049, 784, 12, 45, "Input"],
Cell[37318, 1063, 2453, 59, 87, "Output"]
}, Open  ]],
Cell[39786, 1125, 161, 3, 45, "Text"],
Cell[CellGroupData[{
Cell[39972, 1132, 575, 11, 45, "Input"],
Cell[40550, 1145, 7081, 124, 356, "Output"]
}, Open  ]],
Cell[47646, 1272, 142, 1, 45, "Text"],
Cell[CellGroupData[{
Cell[47813, 1277, 278, 8, 45, "Input"],
Cell[48094, 1287, 13462, 230, 356, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[61593, 1522, 453, 11, 45, "Input"],
Cell[62049, 1535, 8809, 151, 389, "Output"]
}, Open  ]],
Cell[70873, 1689, 143, 1, 45, "Text"],
Cell[71019, 1692, 4651, 115, 373, "Input"],
Cell[75673, 1809, 134, 1, 45, "Text"],
Cell[CellGroupData[{
Cell[75832, 1814, 790, 19, 45, "Input"],
Cell[76625, 1835, 2018, 40, 223, "Output"]
}, Open  ]],
Cell[78658, 1878, 1375, 27, 188, "Text"],
Cell[80036, 1907, 1473, 28, 245, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[81546, 1940, 174, 4, 117, "Section"],
Cell[81723, 1946, 701, 11, 131, "Text"],
Cell[82427, 1959, 282, 8, 45, "Text"],
Cell[CellGroupData[{
Cell[82734, 1971, 199, 4, 65, "Subsection"],
Cell[82936, 1977, 341, 10, 45, "Text"],
Cell[83280, 1989, 325, 5, 45, "Input"],
Cell[83608, 1996, 538, 9, 45, "Input"],
Cell[84149, 2007, 342, 10, 45, "Text"],
Cell[CellGroupData[{
Cell[84516, 2021, 265, 7, 45, "Input"],
Cell[84784, 2030, 202, 5, 44, "Output"]
}, Open  ]],
Cell[85001, 2038, 433, 10, 45, "Text"],
Cell[CellGroupData[{
Cell[85459, 2052, 294, 8, 45, "Input"],
Cell[85756, 2062, 226, 6, 44, "Output"]
}, Open  ]],
Cell[85997, 2071, 194, 4, 45, "Text"],
Cell[86194, 2077, 686, 17, 45, "Input"],
Cell[CellGroupData[{
Cell[86905, 2098, 552, 13, 45, "Input"],
Cell[87460, 2113, 1089, 28, 63, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[88586, 2146, 875, 21, 45, "Input"],
Cell[89464, 2169, 202, 6, 63, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[89703, 2180, 638, 16, 45, "Input"],
Cell[90344, 2198, 892, 26, 63, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[91273, 2229, 234, 5, 45, "Input"],
Cell[91510, 2236, 1114, 29, 63, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[92661, 2270, 751, 16, 45, "Input"],
Cell[93415, 2288, 471, 14, 69, "Output"]
}, Open  ]],
Cell[93901, 2305, 173, 4, 45, "Text"],
Cell[CellGroupData[{
Cell[94099, 2313, 922, 23, 75, "Input"],
Cell[95024, 2338, 413, 9, 44, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[95474, 2352, 157, 3, 45, "Input"],
Cell[95634, 2357, 599, 16, 69, "Output"]
}, Open  ]],
Cell[96248, 2376, 375, 13, 60, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[96660, 2394, 199, 4, 65, "Subsection"],
Cell[96862, 2400, 481, 15, 45, "Text"],
Cell[97346, 2417, 325, 5, 45, "Input"],
Cell[97674, 2424, 588, 9, 45, "Input"],
Cell[98265, 2435, 342, 10, 45, "Text"],
Cell[CellGroupData[{
Cell[98632, 2449, 265, 7, 45, "Input"],
Cell[98900, 2458, 306, 7, 44, "Output"]
}, Open  ]],
Cell[99221, 2468, 400, 9, 45, "Text"],
Cell[CellGroupData[{
Cell[99646, 2481, 294, 8, 45, "Input"],
Cell[99943, 2491, 357, 10, 44, "Output"]
}, Open  ]],
Cell[100315, 2504, 186, 2, 45, "Text"],
Cell[100504, 2508, 1014, 26, 76, "Input"],
Cell[CellGroupData[{
Cell[101543, 2538, 552, 13, 45, "Input"],
Cell[102098, 2553, 1685, 47, 96, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[103820, 2605, 875, 21, 45, "Input"],
Cell[104698, 2628, 929, 27, 44, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[105664, 2660, 638, 16, 45, "Input"],
Cell[106305, 2678, 1276, 37, 81, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[107618, 2720, 234, 5, 45, "Input"],
Cell[107855, 2727, 1773, 49, 106, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[109665, 2781, 344, 9, 45, "Input"],
Cell[110012, 2792, 495, 15, 69, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[110544, 2812, 751, 16, 45, "Input"],
Cell[111298, 2830, 2950, 92, 231, "Output"]
}, Open  ]],
Cell[114263, 2925, 173, 4, 45, "Text"],
Cell[CellGroupData[{
Cell[114461, 2933, 922, 23, 75, "Input"],
Cell[115386, 2958, 916, 25, 44, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[116339, 2988, 157, 3, 45, "Input"],
Cell[116499, 2993, 1986, 62, 124, "Output"]
}, Open  ]],
Cell[118500, 3058, 403, 14, 60, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[118940, 3077, 250, 5, 65, "Subsection"],
Cell[119193, 3084, 325, 5, 45, "Input"],
Cell[119521, 3091, 639, 10, 45, "Input"],
Cell[120163, 3103, 342, 10, 45, "Text"],
Cell[CellGroupData[{
Cell[120530, 3117, 265, 7, 45, "Input"],
Cell[120798, 3126, 443, 10, 44, "Output"]
}, Open  ]],
Cell[121256, 3139, 400, 9, 45, "Text"],
Cell[CellGroupData[{
Cell[121681, 3152, 294, 8, 45, "Input"],
Cell[121978, 3162, 550, 14, 44, "Output"]
}, Open  ]],
Cell[122543, 3179, 186, 2, 45, "Text"],
Cell[122732, 3183, 1354, 36, 76, "Input"],
Cell[CellGroupData[{
Cell[124111, 3223, 552, 13, 45, "Input"],
Cell[124666, 3238, 2619, 74, 155, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[127322, 3317, 875, 21, 45, "Input"],
Cell[128200, 3340, 1899, 55, 125, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[130136, 3400, 638, 16, 45, "Input"],
Cell[130777, 3418, 2364, 68, 140, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[133178, 3491, 234, 5, 45, "Input"],
Cell[133415, 3498, 3743, 106, 205, "Output"]
}, Open  ]],
Cell[137173, 3607, 945, 21, 45, "Input"],
Cell[138121, 3630, 344, 6, 74, "Text"],
Cell[CellGroupData[{
Cell[138490, 3640, 1021, 24, 75, "Input"],
Cell[139514, 3666, 1582, 48, 101, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[141133, 3719, 157, 3, 45, "Input"],
Cell[141293, 3724, 74, 1, 44, "Output"]
}, Open  ]],
Cell[141382, 3728, 521, 8, 102, "Text"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[141952, 3742, 151, 3, 117, "Section"],
Cell[142106, 3747, 331, 5, 74, "Text"],
Cell[142440, 3754, 282, 8, 45, "Text"],
Cell[CellGroupData[{
Cell[142747, 3766, 114, 1, 65, "Subsection"],
Cell[142864, 3769, 349, 8, 74, "Text"],
Cell[143216, 3779, 512, 9, 45, "Input"],
Cell[143731, 3790, 201, 7, 45, "Text"],
Cell[143935, 3799, 460, 11, 52, "Input"],
Cell[144398, 3812, 634, 10, 45, "Input"],
Cell[145035, 3824, 477, 14, 45, "Text"],
Cell[145515, 3840, 824, 19, 75, "Input"],
Cell[146342, 3861, 480, 11, 104, InheritFromParent],
Cell[146825, 3874, 502, 12, 45, "Text"],
Cell[CellGroupData[{
Cell[147352, 3890, 472, 11, 45, "Input"],
Cell[147827, 3903, 2438, 74, 103, "Output"]
}, Open  ]],
Cell[150280, 3980, 366, 6, 74, "Text"],
Cell[150649, 3988, 1392, 41, 75, "Input"],
Cell[152044, 4031, 427, 10, 45, InheritFromParent],
Cell[152474, 4043, 903, 22, 82, "Input"],
Cell[CellGroupData[{
Cell[153402, 4069, 1098, 24, 89, "Input"],
Cell[154503, 4095, 775, 14, 44, "Output"]
}, Open  ]],
Cell[155293, 4112, 142, 3, 45, "Text"],
Cell[CellGroupData[{
Cell[155460, 4119, 1870, 54, 171, "Input"],
Cell[157333, 4175, 507, 9, 44, "Output"]
}, Open  ]],
Cell[157855, 4187, 193, 6, 45, "Text"],
Cell[158051, 4195, 823, 22, 88, "Input"],
Cell[158877, 4219, 135, 3, 45, "Text"],
Cell[159015, 4224, 972, 26, 93, "Input"],
Cell[159990, 4252, 199, 4, 45, "Text"],
Cell[CellGroupData[{
Cell[160214, 4260, 1317, 35, 75, "Input"],
Cell[161534, 4297, 74598, 1236, 209, "Output"]
}, Open  ]],
Cell[236147, 5536, 402, 8, 102, "Text"],
Cell[CellGroupData[{
Cell[236574, 5548, 621, 17, 85, "Input"],
Cell[237198, 5567, 631, 12, 44, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[237866, 5584, 124, 2, 45, "Input"],
Cell[237993, 5588, 140, 2, 44, "Output"]
}, Open  ]],
Cell[238148, 5593, 620, 19, 88, "Input"],
Cell[238771, 5614, 1280, 39, 100, "Input"],
Cell[CellGroupData[{
Cell[240076, 5657, 1675, 43, 75, "Input"],
Cell[241754, 5702, 112424, 1859, 209, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[354215, 7566, 469, 15, 89, "Input"],
Cell[354687, 7583, 363, 7, 44, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[355087, 7595, 123, 2, 45, "Input"],
Cell[355213, 7599, 91, 1, 44, "Output"]
}, Open  ]],
Cell[355319, 7603, 1096, 36, 100, "Input"],
Cell[CellGroupData[{
Cell[356440, 7643, 1937, 50, 75, "Input"],
Cell[358380, 7695, 150994, 2494, 209, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[509423, 10195, 157, 2, 65, "Subsection"],
Cell[509583, 10199, 573, 10, 45, "Input"],
Cell[510159, 10211, 460, 11, 52, "Input"],
Cell[510622, 10224, 684, 11, 45, "Input"],
Cell[511309, 10237, 342, 10, 45, "Text"],
Cell[CellGroupData[{
Cell[511676, 10251, 492, 10, 45, "Input"],
Cell[512171, 10263, 792, 13, 44, "Output"]
}, Open  ]],
Cell[512978, 10279, 132, 2, 45, "Input"],
Cell[513113, 10283, 4694, 114, 608, "Input"],
Cell[517810, 10399, 454, 9, 102, "Text"],
Cell[CellGroupData[{
Cell[518289, 10412, 236, 5, 45, "Input"],
Cell[518528, 10419, 4970, 142, 191, "Output"]
}, Open  ]],
Cell[523513, 10564, 211, 4, 45, "Text"],
Cell[CellGroupData[{
Cell[523749, 10572, 169, 3, 45, "Input"],
Cell[523921, 10577, 3463, 105, 171, "Output"]
}, Open  ]],
Cell[527399, 10685, 115, 1, 45, "Text"],
Cell[CellGroupData[{
Cell[527539, 10690, 289, 7, 45, "Input"],
Cell[527831, 10699, 76545, 1264, 358, "Output"]
}, Open  ]],
Cell[604391, 11966, 178, 4, 45, "Text"],
Cell[604572, 11972, 640, 15, 45, "Input"],
Cell[CellGroupData[{
Cell[605237, 11991, 140, 2, 45, "Input"],
Cell[605380, 11995, 1432, 45, 171, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[606849, 12045, 242, 6, 45, "Input"],
Cell[607094, 12053, 72860, 1205, 373, "Output"]
}, Open  ]],
Cell[679969, 13261, 314, 5, 74, "Text"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[680332, 13272, 101, 1, 117, "Section"],
Cell[680436, 13275, 573, 10, 45, "Input"],
Cell[681012, 13287, 460, 11, 52, "Input"],
Cell[681475, 13300, 684, 11, 45, "Input"],
Cell[682162, 13313, 342, 10, 45, "Text"],
Cell[CellGroupData[{
Cell[682529, 13327, 492, 10, 45, "Input"],
Cell[683024, 13339, 818, 14, 44, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[683879, 13358, 640, 14, 45, "Input"],
Cell[684522, 13374, 872, 28, 59, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[685431, 13407, 352, 10, 45, "Input"],
Cell[685786, 13419, 1002, 25, 135, "Output"]
}, Open  ]],
Cell[686803, 13447, 218, 4, 74, "Text"],
Cell[CellGroupData[{
Cell[687046, 13455, 220, 4, 45, "Input"],
Cell[687269, 13461, 144, 2, 46, "Output"]
}, Open  ]],
Cell[687428, 13466, 130, 3, 45, "Text"],
Cell[CellGroupData[{
Cell[687583, 13473, 119, 3, 45, "Input"],
Cell[687705, 13478, 4703, 139, 191, "Output"]
}, Open  ]],
Cell[692423, 13620, 98, 1, 45, "Text"],
Cell[CellGroupData[{
Cell[692546, 13625, 276, 5, 45, "Input"],
Cell[692825, 13632, 2787, 89, 138, "Output"]
}, Open  ]],
Cell[695627, 13724, 308, 6, 74, "Text"]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
